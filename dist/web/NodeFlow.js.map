{
  "version": 3,
  "sources": ["../../src/theme.ts", "../../src/styles/text.ts", "../../src/types/pool.ts", "../../src/types/vector2.ts", "../../src/types/box.ts", "../../src/types/list.ts", "../../src/contextMenu.ts", "../../src/input.ts", "../../src/elements/interfaces.ts", "../../src/elements/base.ts", "../../src/elements/container.ts", "../../src/elements/text.ts", "../../src/utils/string.ts", "../../src/types/text.ts", "../../src/utils/math.ts", "../../src/utils/color.ts", "../../src/port.ts", "../../src/styles/stroke.ts", "../../src/styles/box.ts", "../../src/popup.ts", "../../src/styles/textBox.ts", "../../src/widgets/widget.ts", "../../src/widgets/number.ts", "../../src/widgets/button.ts", "../../src/widgets/color.ts", "../../src/widgets/slider.ts", "../../src/popups/string.ts", "../../src/widgets/string.ts", "../../src/widgets/toggle.ts", "../../src/widgets/image.ts", "../../src/widgets/text.ts", "../../src/widgets/factory.ts", "../../src/connection.ts", "../../src/camera.ts", "../../src/organize.ts", "../../src/performance.ts", "../../src/nodes/publisher.ts", "../../src/nodes/factory.ts", "../../src/nodes/subsystem.ts", "../../src/popups/form.ts", "../../src/node.ts", "../../src/markdown/token.ts", "../../src/markdown/lexicalParser.ts", "../../src/markdown/entry.ts", "../../src/markdown/syntaxParser.ts", "../../src/markdown/markdown.ts", "../../src/notes/note.ts", "../../src/notes/subsystem.ts", "../../src/pass/subsystem.ts", "../../src/quickMenu.ts", "../../src/graph.ts"],
  "sourcesContent": ["export const Theme = {\n    FontFamily: \"Courier New\",\n    Graph: {\n        BackgroundColor: \"#07212a\",\n    },\n    Node: {\n        FontColor: \"#afb9bb\",\n        BackgroundColor: \"#0c2b35\",\n        Title: {\n            Color: \"#154050\",\n            FontColor: \"#afb9bb\",\n            Padding: 5\n        },\n        BorderRadius: 15,\n        Border: {\n            Idle: \"#1c1c1c\",\n            MouseOver: \"#8e8e8e\",\n            Grabbed: \"white\",\n            Selected: \"#6e6e6e\"\n        },\n        Port: {\n            FontColor: \"#afb9bb\"\n        },\n        Message: {\n            InfoColor: \"#afb9bb\",\n            WarnColor: \"#f1f663ff\",\n            ErrorColor: \"#FF0000\"\n        }\n    },\n    BoxSelect: {\n        Color: \"white\",\n        Size: 1,\n        Radius: 2,\n        LineDashLength: 5,\n    },\n    Widget: {\n        FontColor: \"#afb9bb\",\n        BackgroundColor: \"#0f313c\",\n        Border: {\n            Color: \"#154050\",\n            Size: 2,\n            Radius: 2\n        },\n        Hover: {\n            BackgroundColor: \"#195366\"\n        },\n        Slider: {\n            FillColor: \"#07212A\",\n        },\n        Button: {\n            Click: {\n                BackgroundColor: \"#1f637a\"\n            },\n        }\n    },\n    ContextMenu: {\n        BackgroundColor: \"#07212A\",\n        HighlightColor: \"#205A6D\",\n        FontColor: \"#afb9bb\",\n    },\n    Note: {\n        FontColor: \"#afb9bb\",\n        FontSize: 16,\n        EntrySpacing: 20,\n        LineSpacing: 5,\n        DotSize: 3,\n        HeaderLineWidth: 2,\n        H1: {\n            FontSize: 32,\n        },\n        H2: {\n            FontSize: 16,\n        },\n        H3: {\n            FontSize: 16,\n        },\n        CodeBlock: {\n            BackgroundColor: \"#0c2b35\",\n            Padding: 16,\n            BorderRadius: 4,\n        }\n    }\n}", "import { Theme } from \"../theme\";\nimport { Vector2 } from \"../types/vector2\";\n\nexport enum FontWeight {\n    Normal = \"\",\n    Bold = \"bold\"\n}\n\nexport enum FontStyle {\n    Normal = \"\",\n    Italic = \"italic\"\n}\n\nexport interface TextStyleConfig {\n    size?: number;\n    color?: string;\n    font?: string;\n    weight?: FontWeight;\n    style?: FontStyle;\n}\n\nconst DefaultSize: number = 16;\nconst DefaultColor: string = \"black\";\n\nexport function TextStyleFallback(input?: TextStyleConfig, fallback?: TextStyleConfig): TextStyleConfig {\n    return {\n        color: input?.color === undefined ? fallback?.color : input?.color,\n        size: input?.size === undefined ? fallback?.size : input?.size,\n        font: input?.font === undefined ? fallback?.font : input?.font,\n        style: input?.style === undefined ? fallback?.style : input?.style,\n        weight: input?.weight === undefined ? fallback?.weight : input?.weight,\n    };\n}\n\nexport class TextStyle {\n\n    #size: number;\n\n    #color: string;\n\n    #font: string;\n\n    #weight: FontWeight;\n\n    #fontStyle: FontStyle;\n\n    constructor(config: TextStyleConfig | undefined) {\n        this.#size = config?.size === undefined ? DefaultSize : config.size;\n        this.#color = config?.color === undefined ? DefaultColor : config.color;\n        this.#font = config?.font === undefined ? Theme.FontFamily : config.font;\n        this.#weight = config?.weight === undefined ? FontWeight.Normal : config.weight;\n        this.#fontStyle = config?.style === undefined ? FontStyle.Normal : config.style;\n    }\n\n    setupStyle(ctx: CanvasRenderingContext2D, scale: number): void {\n        ctx.fillStyle = this.#color;\n        ctx.font = this.#fontStyle + \" \" + this.#weight + \" \" + (this.#size * scale) + \"px \" + this.#font;\n    }\n\n    getSize(): number {\n        return this.#size;\n    }\n\n    getFont(): string {\n        return this.#font;\n    }\n\n    measure(ctx: CanvasRenderingContext2D, scale: number, text: string, out: Vector2): void {\n        this.setupStyle(ctx, scale);\n        const measurements = ctx.measureText(text)\n        out.x = measurements.width;\n        out.y = measurements.actualBoundingBoxAscent + measurements.actualBoundingBoxDescent;\n    }\n\n    setColor(color: string): void {\n        this.#color = color;\n    }\n\n    getColor(): string {\n        return this.#color ;\n    }\n\n    setSize(size: number): void {\n        this.#size = size;\n    }\n\n    setWeight(weight: FontWeight): void {\n        this.#weight = weight;\n    }\n}", "import { Vector2 } from \"./vector2\";\n\n\n\nexport class Pool<Type> {\n\n    #arr: Array<Type>;\n\n    #count: number;\n\n    #builder: () => Type;\n\n    #reset: (v: Type) => void;\n\n    #runningDepth: number;\n\n    constructor(builder: () => Type, reset: (v: Type) => void) {\n        this.#arr = new Array<Type>();\n        this.#count = 0;\n        this.#builder = builder;\n        this.#reset = reset;\n        this.#runningDepth = 0;\n    }\n\n    public runIf(condition: boolean, fn: () => void) {\n        if (condition) {\n            this.run(fn);\n        }\n    }\n\n    #running(): boolean {\n        return this.#runningDepth > 0;\n    }\n\n    public run(fn: () => void) {\n        const start = this.#count;\n        this.#runningDepth += 1;\n        fn();\n        this.#runningDepth -= 1;\n        this.#count = start;\n        // console.log(this.#arr.length);\n    }\n\n    get(): Type {\n        if(!this.#running()) {\n            throw new Error(\"can't use pool outside of running context\");\n        }\n\n        let value: Type;\n        if (this.#arr.length === this.#count) {\n            value = this.#builder();\n            this.#arr.push(this.#builder());\n        } else {\n            value = this.#arr[this.#count];\n            this.#reset(value);\n        }\n        this.#count++;\n        return value;\n    }\n\n}\n\nexport const VectorPool = new Pool<Vector2>(\n    () => ({ x: 0, y: 0 }),\n    (v) => { v.x = 0; v.y = 0; }\n)\n", "export interface Vector2 {\n    x: number\n    y: number\n}\n\nexport function CopyVector2(dst: Vector2, src: Vector2): void {\n    dst.x = src.x;\n    dst.y = src.y;\n}\n\nexport function SubVector2(dst: Vector2, a: Vector2, b: Vector2): void {\n    dst.x = a.x - b.x;\n    dst.y = a.y - b.y;\n}\n\nexport function AddVector2(dst: Vector2, a: Vector2, b: Vector2): void {\n    dst.x = a.x + b.x;\n    dst.y = a.y + b.y;\n}\n\nexport function ScaleVector(dst: Vector2, scale: number): void {\n    dst.x *= scale;\n    dst.y *= scale;\n}\n\nexport function Zero(): Vector2 {\n    return { x: 0, y: 0 };\n}\n\nexport function Distance(a: Vector2, b: Vector2): number { \n    const xd = b.x - a.x\n    const yd = b.y - a.y\n    return Math.sqrt((xd*xd)+(yd*yd))\n}\n", "import { VectorPool } from \"./pool\";\nimport { AddVector2, CopyVector2, SubVector2, Vector2, Zero } from \"./vector2\";\n\nexport interface Box {\n    Position: Vector2\n    Size: Vector2\n}\n\nexport function CopyBox(dst: Box, src: Box): void {\n    dst.Position.x = src.Position.x;\n    dst.Position.y = src.Position.y;\n    dst.Size.x = src.Size.x;\n    dst.Size.y = src.Size.y;\n}\n\nfunction normalizeMinMax(min: Vector2, max: Vector2) {\n    if (min.x > max.x) {\n        let temp = max.x;\n        max.x = min.x;\n        min.x = temp;\n    }\n\n    if (min.y > max.y) {\n        let temp = max.y;\n        max.y = min.y;\n        min.y = temp;\n    }\n}\n\nexport function BoxIntersection(a: Box, b: Box): boolean {\n    let intersects = false;\n\n    VectorPool.run(() => {\n        const aMin = VectorPool.get();\n        const aMax = VectorPool.get();\n        CopyVector2(aMin, a.Position);\n        AddVector2(aMax, aMin, a.Size);\n        normalizeMinMax(aMin, aMax);\n\n        const bMin = VectorPool.get();\n        const bMax = VectorPool.get();\n        CopyVector2(bMin, b.Position);\n        AddVector2(bMax, bMin, b.Size);\n        normalizeMinMax(bMin, bMax);\n\n        intersects = (aMin.x <= bMax.x) && (aMax.x >= bMin.x) &&\n            (aMin.y <= bMax.y) && (aMax.y >= bMin.y);\n    })\n\n    return intersects;\n}\n\n// TODO: This is probably incorrect. Needs more testing\n// export function ExpandBox(boxToExpand: Box, box: Box): void {\n//     const newPos: Vector2 = Zero();\n//     const newSize: Vector2 = Zero();\n\n//     CopyVector2(newPos, boxToExpand.Position);\n//     CopyVector2(newSize, boxToExpand.Size);\n\n\n//     const positionOffset: Vector2 = Zero();\n\n//     // Get Position Adjustment\n//     SubVector2(positionOffset, box.Position, boxToExpand.Position);\n\n//     // We only care about adjustments that make us bigger.\n//     positionOffset.x = Math.min(positionOffset.x, 0);\n//     positionOffset.y = Math.min(positionOffset.y, 0);\n\n//     // Adjust our position \n//     AddVector2(boxToExpand.Position, boxToExpand.Position, positionOffset);\n\n//     // Increase our size to take into account new position\n//     SubVector2(newSize, newSize, positionOffset);\n\n//     const sizeIncrease: Vector2 = Zero();\n\n//     const curEndPos: Vector2 = {\n//         x: boxToExpand.Position.x + boxToExpand.Size.x,\n//         y: boxToExpand.Position.y + boxToExpand.Size.y,\n//     };\n\n//     const boxEndPos: Vector2 = {\n//         x: box.Position.x + box.Size.x,\n//         y: box.Position.y + box.Size.y,\n//     };\n\n//     SubVector2(sizeIncrease, boxEndPos, curEndPos);\n\n//     // We only care about increases to our size\n//     sizeIncrease.x = Math.max(sizeIncrease.x, 0);\n//     sizeIncrease.y = Math.max(sizeIncrease.y, 0);\n\n//     // Increase our size to take into account new position\n//     SubVector2(newSize, newSize, sizeIncrease)\n\n//     // Finally, Set result\n//     CopyVector2(boxToExpand.Position, newPos)\n//     CopyVector2(boxToExpand.Size, newSize)\n// }\n\nexport function BoxCenter(box: Box, out: Vector2): Vector2 {\n    out.x = box.Position.x + (box.Size.x / 2);\n    out.y = box.Position.y + (box.Size.y / 2);\n    return out\n}\n\nexport function InBox(box: Box, position: Vector2): boolean {\n    const min = box.Position\n    if (position.x < min.x) {\n        return false\n    }\n    if (position.y < min.y) {\n        return false\n    }\n\n    if (position.x > min.x + box.Size.x) {\n        return false\n    }\n    if (position.y > min.y + box.Size.y) {\n        return false\n    }\n\n    return true\n}", "export class List<Type> {\n\n    #arr: Array<Type>;\n\n    #count: number;\n\n    constructor() {\n        this.#arr = new Array<Type>();\n        this.#count = 0;\n    }\n\n    public Count(): number {\n        return this.#count;\n    }\n\n    public Clear(): void {\n        this.#count = 0;\n    }\n\n    public At(index: number): Type {\n        return this.#arr[index];\n    }\n\n    public Push(value: Type): void {\n        if (this.#arr.length === this.#count) {\n            this.#arr.push(value);\n        } else {\n            this.#arr[this.#count] = value;\n        }\n        this.#count++;\n    }\n\n    public ToArray(): Array<Type> {\n        let arr = new Array<Type>(this.Count());\n        for(let i = 0; i < this.#count; i ++) {\n            arr[i] = this.#arr[i]\n        }\n        return arr;\n    }\n\n}", "import { Theme } from './theme';\nimport { TextAlign } from './styles/canvasTextAlign';\nimport { TextStyle, TextStyleConfig, TextStyleFallback } from './styles/text';\nimport { Box, InBox } from './types/box';\nimport { List } from './types/list';\nimport { CopyVector2, Vector2, Zero } from './types/vector2';\n\nconst contextEntryHeight = 30;\nconst contextEntryWidth = 250;\n\nexport interface ContextMenuItemConfig {\n    name?: string;\n    textStyle?: TextStyleConfig;\n    group?: string;\n\n    callback?: () => void;\n}\n\nexport interface ContextMenuConfig {\n    name?: string;\n    textStyle?: TextStyleConfig;\n    group?: string;\n\n    subMenus?: Array<ContextMenuConfig>;\n    items?: Array<ContextMenuItemConfig>;\n}\n\n\nexport class ContextMenuItem {\n    #name: string;\n\n    #callback?: () => void;\n\n    #textStyle: TextStyle;\n\n    public group?: string;\n\n    constructor(config?: ContextMenuItemConfig) {\n        this.#name = config?.name === undefined ? \"item\" : config.name;\n        this.#callback = config?.callback;\n        this.#textStyle = new TextStyle(config?.textStyle);\n        this.group = config?.group;\n    }\n\n    getName(): string {\n        return this.#name;\n    }\n\n    execute(): void {\n        if (this.#callback === undefined) {\n            return;\n        }\n        this.#callback();\n    }\n}\n\nclass ContextGroup {\n\n    #calculatedHeight: number;\n\n    constructor(public entries: Array<ContextEntry>) {\n        this.#calculatedHeight = entries.length * contextEntryHeight\n    }\n\n    height() {\n        return this.#calculatedHeight;\n    }\n\n}\n\nexport class ContextEntry {\n    constructor(public text: string, public subMenu: ContextMenu | undefined, public item: ContextMenuItem | undefined) {\n    }\n\n    click(): void {\n        this.item?.execute();\n    }\n}\n\nexport function CombineContextMenus(...contextMenus: Array<ContextMenuConfig | undefined>): ContextMenuConfig {\n    const finalConfig: ContextMenuConfig = {\n        items: new Array<ContextMenuItemConfig>,\n        subMenus: new Array<ContextMenuConfig>,\n    }\n\n    for (let i = 0; i < contextMenus.length; i++) {\n        const config = contextMenus[i];\n        if (config === undefined) {\n            continue;\n        }\n\n        if (config.items !== undefined) {\n            finalConfig.items = finalConfig.items?.concat(config.items);\n        }\n\n        if (config.subMenus !== undefined) {\n            finalConfig.subMenus = finalConfig.subMenus?.concat(config.subMenus);\n        }\n    }\n\n    return finalConfig;\n}\n\nexport class ContextMenu {\n\n    #name: string;\n\n    #items: Array<ContextMenuItem>;\n\n    #subMenus: Array<ContextMenu>;\n\n    #textStyle: TextStyle;\n\n    #groups: List<ContextGroup>;\n\n    #group?: string;\n\n    #submenuPosition: Vector2;\n\n    constructor(config?: ContextMenuConfig) {\n        this.#submenuPosition = Zero();\n        this.#groups = new List<ContextGroup>();\n        this.#name = config?.name === undefined ? \"menu\" : config?.name;\n        this.#items = new Array<ContextMenuItem>();\n        this.#subMenus = new Array<ContextMenu>();\n        this.#textStyle = new TextStyle(TextStyleFallback(config?.textStyle, {\n            color: Theme.ContextMenu.FontColor\n        }));\n        this.#group = config?.group;\n\n        if (config?.subMenus !== undefined) {\n            for (let i = 0; i < config?.subMenus.length; i++) {\n                this.#subMenus.push(new ContextMenu(config?.subMenus[i]));\n            }\n        }\n\n        if (config?.items !== undefined) {\n            for (let i = 0; i < config?.items.length; i++) {\n                this.#items.push(new ContextMenuItem(config?.items[i]));\n            }\n        }\n\n        this.#calculateEntries();\n    }\n\n    #calculateEntries(): void {\n\n        const groupLUT = new Map<string, number>();\n        const workingGroups = new Array<Array<ContextEntry>>();\n\n        // Initialize first group for undefined entries\n        workingGroups.push(new Array<ContextEntry>());\n\n        for (let i = 0; i < this.#items.length; i++) {\n            let group = 0; // index to undefined entries\n\n            // Find collection that this entry belongs too\n            const sub = this.#items[i]\n            if (sub.group !== undefined) {\n                const groupIndex = groupLUT.get(sub.group)\n                if (groupIndex !== undefined) {\n                    group = groupIndex\n                } else {\n                    group = workingGroups.length\n                    groupLUT.set(sub.group, group)\n                    workingGroups.push(new Array<ContextEntry>());\n                }\n            }\n\n            workingGroups[group].push(new ContextEntry(\n                this.#items[i].getName(),\n                undefined,\n                this.#items[i]\n            ));\n        }\n\n        for (let i = 0; i < this.#subMenus.length; i++) {\n            let group = 0; // index to undefined entries\n\n            // Find collection that this entry belongs too\n            const sub = this.#subMenus[i]\n            if (sub.#group !== undefined) {\n                const groupIndex = groupLUT.get(sub.#group)\n                if (groupIndex !== undefined) {\n                    group = groupIndex\n                } else {\n                    group = workingGroups.length\n                    groupLUT.set(sub.#group, group)\n                    workingGroups.push(new Array<ContextEntry>());\n                }\n            }\n\n            workingGroups[group].push(new ContextEntry(\n                this.#subMenus[i].getName(),\n                this.#subMenus[i],\n                undefined\n            ));\n        }\n\n        this.#groups.Clear();\n        for (let i = 0; i < workingGroups.length; i++) {\n            const groupContent = workingGroups[i];\n            if (groupContent.length === 0) {\n                continue;\n            }\n            this.#groups.Push(new ContextGroup(groupContent));\n        }\n    }\n\n    #calculatedWidth: number = 0;\n\n    #getMaxWidthForText(ctx: CanvasRenderingContext2D, scale: number): number {\n        if (this.#calculatedWidth > 0) {\n            return this.#calculatedWidth;\n        }\n\n        const tempVec = Zero();\n        for (let groupIndex = 0; groupIndex < this.#groups.Count(); groupIndex++) {\n            const group = this.#groups.At(groupIndex);\n            for (let entryIndex = 0; entryIndex < group.entries.length; entryIndex++) {\n                this.#textStyle.measure(ctx, scale, group.entries[entryIndex].text, tempVec);\n                this.#calculatedWidth = Math.max(tempVec.x, this.#calculatedWidth);\n            }\n        }\n        return this.#calculatedWidth;\n    }\n\n    getName(): string {\n        return this.#name;\n    }\n\n    #tempBox: Box = { Position: Zero(), Size: Zero() };\n\n    #openSubMenu: ContextMenu | undefined;\n\n\n    public render(ctx: CanvasRenderingContext2D, pppp: Vector2, graphScale: number, mousePosition: Vector2 | undefined, openRight: boolean): ContextEntry | null {\n        const menuScale = 1.25;\n        const scaledEntryHeight = menuScale * contextEntryHeight;\n        const scaledEntryWidth = (menuScale * 40) + (this.#getMaxWidthForText(ctx, menuScale)); // contextEntryWidth;\n\n        let totalScaledHeight = 0\n        for (let i = 0; i < this.#groups.Count(); i++) {\n            totalScaledHeight += this.#groups.At(i).height();\n        }\n        totalScaledHeight *= menuScale;\n\n        const position = { x: 0, y: 0 };\n        CopyVector2(position, pppp)\n\n        if (!openRight) {\n            position.x -= scaledEntryWidth;\n        }\n\n        // Clamp the position so it's not spilling off the canvas\n        if (position.y + totalScaledHeight > ctx.canvas.clientHeight) {\n            position.y = ctx.canvas.clientHeight - totalScaledHeight;\n        }\n\n        let submenuOpenRight = openRight;\n        if (openRight && position.x + scaledEntryWidth > ctx.canvas.clientWidth) {\n            position.x = ctx.canvas.clientWidth - scaledEntryWidth;\n            submenuOpenRight = !submenuOpenRight;\n        }\n\n        this.#tempBox.Size.x = scaledEntryWidth;\n        this.#tempBox.Size.y = scaledEntryHeight;\n        CopyVector2(this.#tempBox.Position, position)\n\n\n\n        ctx.textAlign = TextAlign.Left;\n        ctx.fillStyle = Theme.ContextMenu.BackgroundColor;\n        ctx.shadowColor = \"#000000\";\n        ctx.shadowBlur = 5 * menuScale;\n        ctx.beginPath();\n        ctx.roundRect(\n            position.x,\n            this.#tempBox.Position.y,\n            scaledEntryWidth,\n            totalScaledHeight,\n            5 * menuScale\n        );\n        ctx.fill();\n        ctx.shadowBlur = 0;\n\n        let mouseIsOver: ContextEntry | null = null;\n        let subOpenedThisFrame = false;\n\n        let optionsRendered = 0;\n        for (let groupIndex = 0; groupIndex < this.#groups.Count(); groupIndex++) {\n            const group = this.#groups.At(groupIndex);\n            for (let entryIndex = 0; entryIndex < group.entries.length; entryIndex++) {\n                const entry = group.entries[entryIndex];\n\n                this.#tempBox.Position.y = position.y + (scaledEntryHeight * optionsRendered);\n\n                let entryMousedOver = false;\n                if (mousePosition !== undefined && InBox(this.#tempBox, mousePosition)) {\n                    mouseIsOver = entry;\n                    entryMousedOver = true\n                    if (entry.subMenu !== undefined) {\n                        this.#openSubMenu = entry.subMenu;\n                        this.#submenuPosition.x = position.x\n                        this.#submenuPosition.y = this.#tempBox.Position.y;\n                        if (submenuOpenRight) {\n                            this.#submenuPosition.x += scaledEntryWidth\n                        }\n                        subOpenedThisFrame = true;\n                    } else {\n                        this.#openSubMenu = undefined;\n                    }\n                }\n\n                if (entryMousedOver || (this.#openSubMenu !== undefined && entry.subMenu === this.#openSubMenu)) {\n                    ctx.fillStyle = Theme.ContextMenu.HighlightColor;\n                    ctx.beginPath();\n                    ctx.roundRect(\n                        position.x + (scaledEntryHeight / 10),\n                        this.#tempBox.Position.y + (scaledEntryHeight / 10),\n                        scaledEntryWidth - (scaledEntryHeight / 5),\n                        scaledEntryHeight - (scaledEntryHeight / 5),\n                        5 * menuScale\n                    );\n                    ctx.fill();\n                }\n\n                this.#textStyle.setupStyle(ctx, menuScale);\n                ctx.fillText(entry.text, position.x + (scaledEntryHeight / 5), this.#tempBox.Position.y + (scaledEntryHeight / 2))\n\n                // Render arrows\n                if (entry.subMenu !== undefined) {\n                    ctx.beginPath()\n                    ctx.strokeStyle = Theme.ContextMenu.FontColor;\n                    ctx.lineWidth = 1 * menuScale;\n                    ctx.lineTo(position.x + scaledEntryWidth - (scaledEntryHeight / 2.5), this.#tempBox.Position.y + (scaledEntryHeight / 3))\n                    ctx.lineTo(position.x + scaledEntryWidth - (scaledEntryHeight / 4), this.#tempBox.Position.y + (scaledEntryHeight / 2))\n                    ctx.lineTo(position.x + scaledEntryWidth - (scaledEntryHeight / 2.5), this.#tempBox.Position.y + scaledEntryHeight - (scaledEntryHeight / 3))\n                    ctx.stroke();\n                }\n\n                optionsRendered++;\n            }\n\n            // Draw a line seperating the groups\n            if (groupIndex !== this.#groups.Count() - 1) {\n                ctx.strokeStyle = Theme.ContextMenu.FontColor;\n                ctx.lineWidth = .5 * menuScale;\n                ctx.beginPath();\n                const startX = position.x + (scaledEntryHeight / 10);\n                const y = this.#tempBox.Position.y + scaledEntryHeight\n                ctx.lineTo(startX, y);\n                ctx.lineTo(startX + scaledEntryWidth - (scaledEntryHeight / 5), y);\n                ctx.stroke();\n            }\n        }\n\n        if (this.#openSubMenu !== undefined) {\n            const mouseOverSub = this.#openSubMenu.render(ctx, this.#submenuPosition, menuScale, mousePosition, submenuOpenRight)\n            if (mouseOverSub !== null) {\n                mouseIsOver = mouseOverSub;\n            }\n        }\n\n        return mouseIsOver;\n    }\n}", "import { CopyVector2, SubVector2, Vector2, Zero } from \"./types/vector2\";\n\nexport class MouseObserver {\n\n    #clicked: boolean;\n\n    #lastTouch: Vector2;\n\n    #ele: HTMLElement\n\n    #lastMousePosition: Vector2;\n\n    #dragCallback: (delta: Vector2) => void\n    #moveCallback: (position: Vector2) => void\n    #clickStart: (position: Vector2, shiftOrCtrl: boolean) => void\n    #clickStop: () => void\n    #contextMenu: (position: Vector2) => void\n\n    constructor(\n        ele: HTMLElement,\n        dragCallback: (delta: Vector2) => void,\n        moveCallback: (position: Vector2) => void,\n        clickStart: (position: Vector2, shiftOrCtrl: boolean) => void,\n        clickStop: () => void,\n        contextMenu: (position: Vector2) => void,\n        fileDrop: (file: File) => void\n    ) {\n        this.#ele = ele;\n        this.#dragCallback = dragCallback;\n        this.#moveCallback = moveCallback;\n        this.#clickStart = clickStart;\n        this.#clickStop = clickStop;\n        this.#contextMenu = contextMenu;\n\n        this.#clicked = false;\n        this.#lastTouch = Zero();\n        this.#lastMousePosition = Zero();\n\n        // Down\n        ele.addEventListener('mousedown', this.#down.bind(this), false);\n        ele.addEventListener('touchstart', this.#touchDown.bind(this), false);\n\n        // Up\n        document.addEventListener('mouseup', this.#up.bind(this), false);\n        document.addEventListener('touchend', this.#up.bind(this), false);\n\n        // Move\n        ele.addEventListener('mousemove', this.#move.bind(this), false);\n        ele.addEventListener('touchmove', this.#moveTouch.bind(this), false);\n\n        ele.addEventListener('drop', (ev) => {\n            ev.preventDefault();\n            console.log(ev)\n\n            if (ev.dataTransfer?.items) {\n                // Use DataTransferItemList interface to access the file(s)\n                [...ev.dataTransfer.items].forEach((item, i) => {\n                    // If dropped items aren't files, reject them\n                    if (item.kind === \"file\") {\n                        const file = item.getAsFile();\n                        if (file) {\n                            fileDrop(file);\n                            console.log(file)\n                            console.log(`\u2026 file[${i}].name = ${file.name}`);\n                        }\n                    }\n                });\n            } else if (ev.dataTransfer) {\n                // Use DataTransfer interface to access the file(s)\n                [...ev.dataTransfer.files].forEach((file, i) => {\n                    console.log(`\u2026 file[${i}].name = ${file.name}`);\n                });\n            }\n        });\n\n        ele.addEventListener('dragover', (ev) => {\n            ev.preventDefault();\n            this.#moveCallback(this.#mousePosition(ev));\n            // console.log(ev)\n        });\n\n        // Context\n        ele.addEventListener('contextmenu', (evt) => {\n            contextMenu(this.#mousePosition(evt));\n            evt.preventDefault()\n        }, false);\n    }\n\n    #mousePosition(event: MouseEvent | DragEvent): Vector2 {\n        var rect = this.#ele.getBoundingClientRect();\n        return {\n            x: event.clientX - rect.left,\n            y: event.clientY - rect.top\n        }\n    }\n\n    #move(event: MouseEvent): void {\n        const pos = this.#mousePosition(event);\n\n        if (this.#clicked) {\n            const delta = Zero();\n            SubVector2(delta, pos, this.#lastMousePosition);\n            this.#dragCallback(delta)\n        }\n\n        this.#moveCallback(pos);\n        CopyVector2(this.#lastMousePosition, pos);\n    }\n\n    #moveTouch(event: TouchEvent): void {\n        const rect = this.#ele.getBoundingClientRect();\n        const pos = {\n            x: event.touches[0].clientX - rect.left,\n            y: event.touches[0].clientY - rect.top\n        }\n        this.#moveCallback(pos);\n\n        if (this.#clicked) {\n            this.#dragCallback({\n                x: pos.x - this.#lastTouch.x,\n                y: pos.y - this.#lastTouch.y,\n            });\n        }\n\n        CopyVector2(this.#lastTouch, pos);\n    }\n\n    #down(event: MouseEvent): void {\n        // Only register left clicks\n        if (event.button !== 0) {\n            return;\n        }\n        this.#clicked = true;\n        this.#clickStart(this.#mousePosition(event), event.ctrlKey || event.shiftKey);\n    }\n\n    #touchDown(event: TouchEvent) {\n        this.#clicked = true;\n        const rect = this.#ele.getBoundingClientRect();\n        this.#lastTouch.x = event.touches[0].clientX - rect.left;\n        this.#lastTouch.y = event.touches[0].clientY - rect.top;\n        this.#clickStart(this.#lastTouch, false);\n    }\n\n    #up(event: MouseEvent): void {\n        // Only register left clicks\n        if (event.button !== 0) {\n            return;\n        }\n        this.#clicked = false\n        this.#clickStop();\n    }\n}", "import { Vector2 } from \"../types/vector2\"\n\n\nexport interface RenderElementSidesStyling {\n    Left?: number\n    Right?: number\n    Top?: number\n    Bottom?: number\n}\n\nexport interface RenderElementSides {\n    Left: number\n    Right: number\n    Top: number\n    Bottom: number\n}\n\nexport function InstantiateRenderElementSidesStyling(config?: RenderElementSidesStyling | number): RenderElementSides {\n    if (typeof config === 'number') {\n        return {\n            Bottom: config,\n            Right: config,\n            Top: config,\n            Left: config,\n        }\n    }\n    return {\n        Bottom: config?.Bottom === undefined ? 0 : config?.Bottom,\n        Right: config?.Right === undefined ? 0 : config?.Right,\n        Left: config?.Left === undefined ? 0 : config?.Left,\n        Top: config?.Top === undefined ? 0 : config?.Top,\n    }\n}\n\nexport interface IRenderElement {\n    size(ctx: CanvasRenderingContext2D, out: Vector2): void;\n    render(ctx: CanvasRenderingContext2D, position: Vector2, graphScale: number, scaledFillableSpace: Vector2): void;\n}\n\nexport interface Border {\n    Color: string;\n    Thickness: number;\n    Radius: number;\n}\n\nexport interface BorderStyling {\n    Color?: string;\n    Thickness?: number;\n    Radius?: number;\n}\n", "import { Vector2 } from \"../types/vector2\";\nimport { Border, BorderStyling, InstantiateRenderElementSidesStyling, IRenderElement, RenderElementSides, RenderElementSidesStyling } from \"./interfaces\";\n\nexport enum Display {\n    Flex = \"flex\",\n    None = \"none\"\n}\n\nexport interface RenderElementBaseStyling {\n    Margin?: RenderElementSidesStyling | number;\n    Padding?: RenderElementSidesStyling | number;\n    Border?: BorderStyling;\n    BackgroundColor?: string;\n    MinWidth?: number;\n    MaxWidth?: number;\n    MaxHeight?: number;\n    MinHeight?: number;\n    Grow?: number;\n    Display?: Display;\n}\n\nexport abstract class RenderElementBase implements IRenderElement {\n\n    #margin: RenderElementSides;\n\n    #padding: RenderElementSides;\n\n    #border: Border;\n\n    #backgroundColor?: string;\n\n    #minWidth?: number;\n\n    #maxWidth?: number;\n\n    #minHeight?: number;\n\n    #maxHeight?: number;\n\n    #grow?: number;\n\n    #display: Display;\n\n    constructor(config?: RenderElementBaseStyling) {\n        this.#margin = InstantiateRenderElementSidesStyling(config?.Margin);\n        this.#padding = InstantiateRenderElementSidesStyling(config?.Padding);\n        this.#backgroundColor = config?.BackgroundColor;\n        this.#border = {\n            Color: config?.Border?.Color ?? \"black\",\n            Thickness: config?.Border?.Thickness ?? 0,\n            Radius: config?.Border?.Radius ?? 0,\n        }\n        this.#minWidth = config?.MinWidth;\n        this.#maxWidth = config?.MaxWidth;\n        this.#minHeight = config?.MinHeight;\n        this.#maxHeight = config?.MaxHeight;\n        this.#grow = config?.Grow;\n        this.#display = config?.Display ?? Display.Flex;\n    }\n\n    setBackgroundColor(newColor: string): void {\n        this.#backgroundColor = newColor;\n    }\n\n    abstract doRender(ctx: CanvasRenderingContext2D, position: Vector2, graphScale: number, scaledFillableSpace: Vector2): void;\n\n    render(ctx: CanvasRenderingContext2D, position: Vector2, graphScale: number, scaledFillableSpace: Vector2): void {\n        if (this.#display === Display.None) {\n            return;\n        }\n\n        const scaledSize = { x: 0, y: 0 };\n        this.size(ctx, scaledSize);\n\n        scaledSize.x = scaledSize.x * graphScale;\n        scaledSize.y = scaledSize.y * graphScale;\n        scaledSize.x = Math.max(scaledSize.x, scaledFillableSpace.x);\n        scaledSize.y = Math.max(scaledSize.y, scaledFillableSpace.y);\n\n        if (this.#backgroundColor) {\n            ctx.fillStyle = this.#backgroundColor;\n            ctx.beginPath();\n            ctx.roundRect(\n                position.x + (this.#margin.Left * graphScale),\n                position.y + (this.#margin.Right * graphScale),\n                scaledSize.x - ((this.#margin.Left + this.#margin.Right) * graphScale),\n                scaledSize.y - ((this.#margin.Top + this.#margin.Bottom) * graphScale),\n                this.#border.Radius * graphScale\n            );\n            ctx.fill();\n        }\n\n        if (this.#border.Thickness > 0) {\n            ctx.lineWidth = this.#border.Thickness * graphScale;\n            ctx.strokeStyle = this.#border.Color;\n            ctx.stroke();\n        }\n\n        const offsetPosition = {\n            x: position.x + (this.#totalLeftOffset() * graphScale),\n            y: position.y + (this.#totalTopOffset() * graphScale),\n        };\n        const elementSize = {\n            x: scaledSize.x - (this.#horizontalOffset() * graphScale),\n            y: scaledSize.y - (this.#verticalOffset() * graphScale)\n        }\n        this.doRender(ctx, offsetPosition, graphScale, elementSize);\n    }\n\n    // todo: Remove limitations argument?\n    abstract calcSize(ctx: CanvasRenderingContext2D, out: Vector2, limitations: Vector2): void;\n\n    protected maxLimitations(out: Vector2): void {\n        out.x = -1;\n        out.y = -1;\n\n        if (this.#maxWidth) {\n            out.x = this.#maxWidth;\n        }\n\n        if (this.#maxHeight) {\n            out.y = this.#maxHeight;\n        }\n    }\n\n    setDisplay(display: Display): void {\n        this.#display = display;\n    }\n\n    getDisplay(): Display {\n        return this.#display;\n    }\n\n    size(ctx: CanvasRenderingContext2D, out: Vector2): void {\n        out.x = 0;\n        out.y = 0;\n        if (this.#display === Display.None) {\n            return;\n        }\n\n        const maxLimits = { x: -1, y: -1 }\n        this.maxLimitations(maxLimits);\n\n        this.calcSize(ctx, out, maxLimits);\n\n        out.x += this.#horizontalOffset();\n        out.y += this.#verticalOffset();\n\n        if (this.#minWidth) {\n            out.x = Math.max(out.x, this.#minWidth)\n        }\n\n        if (this.#maxWidth) {\n            out.x = Math.min(this.#maxWidth, out.x);\n        }\n\n        if (this.#maxHeight) {\n            out.y = Math.min(this.#maxHeight, out.y);\n        }\n\n        if (this.#minHeight) {\n            out.y = Math.max(this.#minHeight, out.y);\n        }\n    }\n\n    #horizontalOffset(): number {\n        return (this.#border.Thickness) +\n            this.#margin.Left +\n            this.#margin.Right +\n            this.#padding.Left +\n            this.#padding.Right;\n    }\n\n    #verticalOffset(): number {\n        return (this.#border.Thickness) +\n            this.#margin.Top +\n            this.#margin.Bottom +\n            this.#padding.Top +\n            this.#padding.Bottom;\n    }\n\n    #totalTopOffset(): number {\n        return (this.#border.Thickness / 2) +\n            this.#margin.Top +\n            this.#padding.Top;\n    }\n\n    #totalLeftOffset(): number {\n        return (this.#border.Thickness / 2) +\n            this.#margin.Left +\n            this.#padding.Left;\n    }\n}\n", "import { ScaleVector, Vector2 } from '../types/vector2';\nimport { RenderElementBase, RenderElementBaseStyling } from \"./base\";\nimport { IRenderElement } from \"./interfaces\";\n\n\ninterface ContainerRenderElementConfig extends RenderElementBaseStyling {\n\n}\n\nexport enum LayoutDirection {\n    Column = \"column\",\n    Row = \"row\"\n}\n\nexport enum AlignItems {\n    Stretch = \"stretch\",\n    Start = \"start\",\n    Center = \"center\",\n    End = \"end\"\n}\n\nexport class ContainerRenderElement extends RenderElementBase {\n\n    #elements: Array<IRenderElement>;\n\n    #layout: LayoutDirection;\n\n    #alignment: AlignItems;\n\n    constructor(elements: Array<IRenderElement>, config?: ContainerRenderElementConfig) {\n        super(config);\n        this.#elements = elements;\n        this.#layout = LayoutDirection.Column;\n        this.#alignment = AlignItems.Stretch;\n    }\n\n    calcSize(ctx: CanvasRenderingContext2D, out: Vector2, limitations: Vector2): void {\n        out.x = 0;\n        out.y = 0;\n\n        const eleSize = { x: 0, y: 0 };\n\n        switch (this.#layout) {\n            case LayoutDirection.Column:\n                for (let i = 0; i < this.#elements.length; i++) {\n                    this.#elements[i].size(ctx, eleSize);\n                    out.x = Math.max(out.x, eleSize.x);\n                    out.y += eleSize.y;\n                }\n                break;\n\n            case LayoutDirection.Row:\n                for (let i = 0; i < this.#elements.length; i++) {\n                    this.#elements[i].size(ctx, eleSize);\n                    out.y = Math.max(out.y, eleSize.y);\n                    out.x += eleSize.x;\n                }\n                break;\n\n            default:\n                throw new Error(\"unknown layout: \" + this.#layout);\n        }\n\n    }\n\n    doRender(ctx: CanvasRenderingContext2D, position: Vector2, graphScale: number, scaledFillableSpace: Vector2): void {\n        // const size = { x: 0, y: 0 };\n        // const limitations = { x: 0, y: 0 };\n        // this.limitations(limitations)\n        // this.calcSize(ctx, size, limitations);\n        switch (this.#layout) {\n            case LayoutDirection.Column:\n                this.#renderColumn(ctx, position, graphScale, scaledFillableSpace);\n                break;\n\n            default:\n                throw new Error(\"unimplemented layout direction: \" + this.#layout);\n        }\n    }\n\n    #renderColumn(ctx: CanvasRenderingContext2D, position: Vector2, graphScale: number, scaledFillableSpace: Vector2): void {\n        const currnetPos = { x: position.x, y: position.y };\n        const scaledEleSize = { x: 0, y: 0 };\n        for (let i = 0; i < this.#elements.length; i++) {\n            const ele = this.#elements[i];\n\n            ele.size(ctx, scaledEleSize);\n            ScaleVector(scaledEleSize, graphScale);\n\n            switch (this.#alignment) {\n\n                case AlignItems.Stretch:\n                    currnetPos.x = position.x;\n                    scaledEleSize.x = scaledFillableSpace.x;\n                    break;\n\n                // I'm not sure if this is even needed, I feel like this should\n                // already be the case.\n                case AlignItems.Start: //garney flarney <---- silly goose steenky feet\n                    currnetPos.x = position.x;\n                    break\n\n                case AlignItems.End:\n                    currnetPos.x = scaledFillableSpace.x - scaledEleSize.x\n                    break;\n\n                case AlignItems.Center:\n                    currnetPos.x = scaledFillableSpace.x - (scaledEleSize.x / 2)\n                    break;\n\n                default:\n                    throw new Error(\"unimplmeneted alignment: \" + this.#alignment)\n            }\n\n            ele.render(ctx, currnetPos, graphScale, scaledEleSize);\n            currnetPos.y += scaledEleSize.y;\n        }\n    }\n}", "import { Text } from \"../types/text\";\nimport { CopyVector2, ScaleVector, Vector2, Zero } from \"../types/vector2\";\nimport { RenderElementBase, RenderElementBaseStyling } from \"./base\";\n\nexport enum TextAlign {\n    Left = \"left\",\n    Right = \"right\",\n    Center = \"center\",\n}\n\nexport enum VerticalAlign {\n    Top = \"top\",\n    Center = \"center\",\n    Bottom = \"bottom\"\n}\n\nexport interface TextElementStyling extends RenderElementBaseStyling {\n    Align?: TextAlign\n    VerticalAlign?: VerticalAlign\n    LineHeight?: number\n}\n\nexport class TextElement extends RenderElementBase {\n    #text: Text;\n\n    #align: TextAlign;\n\n    #verticalAlign: VerticalAlign;\n\n    #lineHeight: number;\n\n    constructor(text: Text, styling?: TextElementStyling) {\n        super(styling);\n        this.#text = text;\n        this.#align = styling?.Align ?? TextAlign.Left;\n        this.#verticalAlign = styling?.VerticalAlign ?? VerticalAlign.Top;\n        this.#lineHeight = styling?.LineHeight ?? 1;\n    }\n\n    doRender(ctx: CanvasRenderingContext2D, position: Vector2, graphScale: number, scaledFillableSpace: Vector2): void {\n        const scale = Zero();\n        this.calcSize(ctx, scale, scaledFillableSpace);\n        ScaleVector(scale, graphScale);\n\n        const justifiedPosition = Zero();\n        CopyVector2(justifiedPosition, position)\n\n        ctx.textAlign = \"left\";\n        ctx.textBaseline = \"top\"\n\n        switch (this.#align) {\n            case TextAlign.Left:\n                // Do nothing. This is default\n                break;\n\n            case TextAlign.Right:\n                justifiedPosition.x += scaledFillableSpace.x - scale.x;\n                break;\n\n            case TextAlign.Center:\n                justifiedPosition.x += (scaledFillableSpace.x - scale.x) / 2;\n                break;\n\n            default:\n                throw new Error(\"unimplemented justification: \" + this.#align);\n        }\n\n        switch (this.#verticalAlign) {\n            case VerticalAlign.Top:\n                // Do nothing. This is default\n                break;\n\n            case VerticalAlign.Bottom:\n                justifiedPosition.y += scaledFillableSpace.y - scale.y;\n                break;\n\n            case VerticalAlign.Center:\n                justifiedPosition.y += (scaledFillableSpace.y - scale.y) / 2;\n                break;\n\n            default:\n                throw new Error(\"unimplemented justification: \" + this.#align);\n        }\n\n        if (scaledFillableSpace.x <= 0) {\n            this.#text.render(ctx, graphScale, justifiedPosition);\n        } else {\n            const eles = this.#text.breakIntoLines(ctx, scaledFillableSpace.x);\n\n            const tempSize = { x: 0, y: 0 };\n            for (let i = 0; i < eles.length; i++) {\n                eles[i].render(ctx, graphScale, justifiedPosition);\n                eles[i].size(ctx, 1, tempSize)\n                justifiedPosition.y += this.#text.style().getSize() * this.#lineHeight\n            }\n        }\n    }\n\n    calcSize(ctx: CanvasRenderingContext2D, out: Vector2, limitations: Vector2): void {\n        if (limitations.x <= 0) {\n            this.#text.size(ctx, 1, out);\n            return;\n        }\n\n        const eles = this.#text.breakIntoLines(ctx, limitations.x);\n        const tempSize = { x: 0, y: 0 };\n        out.x = 0;\n        out.y = this.#text.style().getSize() * eles.length * this.#lineHeight;\n        for (let i = 0; i < eles.length; i++) {\n            eles[i].size(ctx, 1, tempSize)\n            out.x = Math.max(tempSize.x, out.x);\n        }\n    }\n}\n", "const binarySearch = ({ max, getValue, match }) => {\n    let min = 0;\n\n    while (min <= max) {\n        let guess = Math.floor((min + max) / 2);\n        const compareVal = getValue(guess);\n\n        if (compareVal === match) return guess;\n        if (compareVal < match) min = guess + 1;\n        else max = guess - 1;\n    }\n\n    return max;\n};\n\nexport function fitString(ctx: CanvasRenderingContext2D, str: string, maxWidth: number): string {\n    let width = ctx.measureText(str).width;\n    const ellipsis = '\u2026';\n    const ellipsisWidth = ctx.measureText(ellipsis).width;\n    if (width <= maxWidth || width <= ellipsisWidth) {\n        return str;\n    }\n\n    const index = binarySearch({\n        max: str.length,\n        getValue: guess => ctx.measureText(str.substring(0, guess)).width,\n        match: maxWidth - ellipsisWidth,\n    });\n\n    return str.substring(0, index) + ellipsis;\n};\n\nexport function splitString(ctx: CanvasRenderingContext2D, str: string, maxWidth: number): Array<string> {\n    let width = ctx.measureText(str).width;\n    if (width <= maxWidth) {\n        return [str];\n    }\n\n    let index = binarySearch({\n        max: str.length,\n        getValue: guess => ctx.measureText(str.substring(0, guess)).width,\n        match: maxWidth,\n    });\n\n    for (let backward = index - 1; backward >= 1; backward--) {\n        if (str.charAt(backward) === \" \") {\n            index = backward + 1;\n            break;\n        }\n    }\n\n    return [str.substring(0, index), str.substring(index)];\n};\n\n\nexport function splitStringIntoLines(ctx: CanvasRenderingContext2D, str: string, maxWidth: number): Array<string> {\n    let width = ctx.measureText(str).width;\n    if (width <= maxWidth) {\n        return [str];\n    }\n\n    const strings = new Array<string>;\n    let remaining = str;\n    while (remaining !== \"\") {\n        let index = binarySearch({\n            max: remaining.length,\n            getValue: guess => ctx.measureText(remaining.substring(0, guess)).width,\n            match: maxWidth,\n        });\n\n        if (index === remaining.length) {\n            strings.push(remaining.substring(0, index))\n            break;\n        }\n\n        for (let backward = index - 1; backward >= 1; backward--) {\n            if (remaining.charAt(backward) === \" \") {\n                index = backward + 1;\n                break;\n            }\n        }\n\n        strings.push(remaining.substring(0, index))\n        remaining = remaining.substring(index)\n    }\n\n    return strings;\n};\n\n// https://stackoverflow.com/a/18234317/4974261\nexport function Format(str: string, ...args: Array<string>): string {\n    if (arguments.length) {\n        for (let key in args) {\n            str = str.replace(new RegExp(\"\\\\{\" + key + \"\\\\}\", \"gi\"), args[key]);\n        }\n    }\n    return str;\n};", "import { FontWeight, TextStyle, TextStyleConfig } from \"../styles/text\";\nimport { splitString, splitStringIntoLines } from \"../utils/string\";\nimport { CopyVector2, ScaleVector, Vector2, Zero } from \"./vector2\";\n\nexport interface MultilineTextConfig {\n    MaxWidth?: number;\n    LineSpacing?: number;\n}\n\nexport class Text {\n\n    #measured: boolean\n\n    #size: Vector2;\n\n    #style: TextStyle;\n\n    #value: string\n\n    #maxWidth: number;\n\n    #lineSpacing: number;\n\n    #textToRender: Array<string>;\n\n    constructor(value: string, style?: TextStyleConfig, config?: MultilineTextConfig) {\n        this.#value = value;\n        this.#measured = false;\n        this.#size = Zero();\n        this.#style = new TextStyle(style);\n        this.#maxWidth = config?.MaxWidth ? config?.MaxWidth : -1;\n        this.#lineSpacing = config?.LineSpacing ? config?.LineSpacing : 5;\n        this.#textToRender = [value];\n\n        if (!document.fonts.check(`16px \"${this.#style.getFont()}\"`)) {\n            document.fonts.addEventListener(\"loadingdone\", (event) => {\n                this.#measured = false;\n            });\n        }\n    }\n\n    set(newValue: string): void {\n        this.#value = newValue;\n        this.#measured = false;\n    }\n\n    get(): string {\n        return this.#value;\n    }\n\n    breakIntoLines(ctx: CanvasRenderingContext2D, maxWidth: number): Array<Text> {\n        const results = new Array<Text>();\n\n        this.#style.setupStyle(ctx, 1);\n        const entries = splitStringIntoLines(ctx, this.#value, maxWidth);\n        if (entries.length === 1) {\n            return [this];\n        }\n        for (let i = 0; i < entries.length; i++) {\n            const text = new Text(entries[i])\n            text.#style = this.#style;\n            results.push(text)\n        }\n\n        return results;\n    }\n\n    split(char: string): Array<Text> {\n        const entries = this.#value.split(char)\n        const results = new Array<Text>();\n        for (let i = 0; i < entries.length; i++) {\n            const text = new Text(entries[i])\n            text.#style = this.#style;\n            results.push(text)\n        }\n        return results;\n    }\n\n    splitAtIndex(index: number): Array<Text> {\n        const results = [\n            new Text(this.#value.substring(0, index)),\n            new Text(this.#value.substring(index, 0)),\n        ];\n\n\n        for (let i = 0; i < results.length; i++) {\n            results[i].#style = this.#style;\n        }\n        return results;\n    }\n\n    splitAtWidth(ctx: CanvasRenderingContext2D, maxWidth: number): Array<Text> {\n        this.#style.setupStyle(ctx, 1);\n        const entries = splitString(ctx, this.#value, maxWidth);\n        if (entries.length === 1) {\n            return [this];\n        }\n\n        const results = new Array<Text>();\n        for (let i = 0; i < entries.length; i++) {\n            const text = new Text(entries[i])\n            text.#style = this.#style;\n            results.push(text)\n        }\n        return results;\n    }\n\n    #measure(ctx: CanvasRenderingContext2D): void {\n        if (this.#measured) {\n            return;\n        }\n\n\n        this.#style.setupStyle(ctx, 1);\n\n        if (this.#maxWidth == -1) {\n            const measurements = ctx.measureText(this.#value);\n            this.#size.x = measurements.width;\n            this.#size.y = measurements.actualBoundingBoxAscent + measurements.actualBoundingBoxDescent;\n            this.#textToRender = [this.#value];\n            this.#measured = true;\n            return;\n        }\n\n        this.#textToRender = splitStringIntoLines(ctx, this.#value, this.#maxWidth);\n\n        this.#size.x = 0;\n        this.#size.y = 0;\n        for (let i = 0; i < this.#textToRender.length; i++) {\n            const measurements = ctx.measureText(this.#textToRender[i]);\n            this.#size.x = Math.max(this.#size.x, measurements.width);\n        }\n\n        this.#size.y += ((this.#textToRender.length - 1) * this.#lineSpacing) + (this.#style.getSize() * this.#textToRender.length);\n        this.#measured = true;\n    }\n\n    size(ctx: CanvasRenderingContext2D, scale: number, out: Vector2): void {\n        this.#measure(ctx);\n        CopyVector2(out, this.#size);\n        ScaleVector(out, scale);\n    }\n\n    height(ctx: CanvasRenderingContext2D): number {\n        this.#measure(ctx);\n        return this.#size.y;\n    }\n\n    setColor(color: string): void {\n        this.#style.setColor(color);\n    }\n\n    getColor(): string {\n        return this.#style.getColor();\n    }\n\n    setSize(size: number): void {\n        this.#style.setSize(size);\n    }\n\n    setWeight(weight: FontWeight): void {\n        this.#style.setWeight(weight);\n    }\n\n    render(ctx: CanvasRenderingContext2D, scale: number, position: Vector2): void {\n        this.#measure(ctx);\n        this.#style.setupStyle(ctx, scale);\n        let yOffset = 0;\n        for (let i = 0; i < this.#textToRender.length; i++) {\n            ctx.fillText(\n                this.#textToRender[i],\n                position.x,\n                position.y + yOffset\n            );\n            yOffset += (this.#style.getSize() + this.#lineSpacing) * scale\n        }\n    }\n\n    style(): TextStyle {\n        return this.#style;\n    }\n}", "export function Clamp(v: number, min: number, max: number): number {\n    return Math.min(Math.max(v, min), max)\n}\n\nexport function Clamp01(v: number): number {\n    return Clamp(v, 0, 1);\n}\n\n", "import { Clamp01 } from './math';\n\nexport interface Color {\n    r: number, // 0 - 1\n    g: number, // 0 - 1\n    b: number, // 0 - 1\n}\n\nexport interface HSV {\n    h: number,  // angle in degrees\n    s: number,  // 0 - 1\n    v: number,  // 0 - 1\n}\n\nfunction componentToHex(c: number) {\n    var hex = c.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nexport function RgbToHex(c: Color): string {\n    return \"#\" + componentToHex(Math.round(c.r * 255)) + componentToHex(Math.round(c.g * 255)) + componentToHex(Math.round(c.b * 255));\n}\n\nexport function HexToColor(hex: string): Color | null {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16) / 255,\n        g: parseInt(result[2], 16) / 255,\n        b: parseInt(result[3], 16) / 255\n    } : null;\n}\n\n\nexport function HSV2RGB(hsv: HSV, out: Color): void {\n    if (hsv.s <= 0.0) {       // < is bogus, just shuts up warnings\n        out.r = hsv.v;\n        out.g = hsv.v;\n        out.b = hsv.v;\n        return;\n    }\n    let hh = hsv.h;\n    if (hh >= 360.0) {\n        hh = 0.0;\n    }\n    hh /= 60.0;\n\n    const i = Math.round(hh);\n    const ff = hh - i;\n    const p = hsv.v * (1.0 - hsv.s);\n    const q = hsv.v * (1.0 - (hsv.s * ff));\n    const t = hsv.v * (1.0 - (hsv.s * (1.0 - ff)));\n\n    switch (i) {\n        case 0:\n            out.r = hsv.v;\n            out.g = t;\n            out.b = p;\n            break;\n        case 1:\n            out.r = q;\n            out.g = hsv.v;\n            out.b = p;\n            break;\n        case 2:\n            out.r = p;\n            out.g = hsv.v;\n            out.b = t;\n            break;\n\n        case 3:\n            out.r = p;\n            out.g = q;\n            out.b = hsv.v;\n            break;\n        case 4:\n            out.r = t;\n            out.g = p;\n            out.b = hsv.v;\n            break;\n        // case 5:\n        default:\n            out.r = hsv.v;\n            out.g = p;\n            out.b = q;\n            break;\n    }\n\n    out.r = Clamp01(out.r)\n    out.g = Clamp01(out.g)\n    out.b = Clamp01(out.b)\n}\n\nexport function RGB2HSV(rgb: Color, out: HSV): void {\n    out.h = 0;\n    out.s = 0;\n    out.v = 0;\n    let min: number = 0;\n    let max: number = 0;\n    let delta: number = 0;\n\n    min = rgb.r < rgb.g ? rgb.r : rgb.g;\n    min = min < rgb.b ? min : rgb.b;\n\n    max = rgb.r > rgb.g ? rgb.r : rgb.g;\n    max = max > rgb.b ? max : rgb.b;\n\n    out.v = max;                                // v\n    delta = max - min;\n    if (delta < 0.00001) {\n        out.s = 0;\n        out.h = 0; // undefined, maybe nan?\n        return;\n    }\n    if (max > 0.0) { // NOTE: if Max is == 0, this divide would cause a crash\n        out.s = (delta / max);                  // s\n    } else {\n        // if max is 0, then r = g = b = 0              \n        // s = 0, h is undefined\n        out.s = 0.0;\n        out.h = NaN;                            // its now undefined\n        return;\n    }\n    if (rgb.r >= max)                           // > is bogus, just keeps compilor happy\n        out.h = (rgb.g - rgb.b) / delta;        // between yellow & magenta\n    else\n        if (rgb.g >= max)\n            out.h = 2.0 + (rgb.b - rgb.r) / delta;  // between cyan & yellow\n        else\n            out.h = 4.0 + (rgb.r - rgb.g) / delta;  // between magenta & cyan\n\n    out.h *= 60.0;                              // degrees\n\n    if (out.h < 0.0)\n        out.h += 360.0;\n\n}\n", "import { Camera } from \"./camera\";\nimport { Connection } from './connection';\nimport { RenderElementBase } from \"./elements/base\";\nimport { ContainerRenderElement, AlignItems } from './elements/container';\nimport { TextAlign, TextElement } from \"./elements/text\";\nimport { FlowNode } from \"./node\";\nimport { PassSubsystem } from \"./pass/subsystem\";\nimport { FontStyle } from \"./styles/text\";\nimport { Box, InBox } from \"./types/box\";\nimport { Text } from \"./types/text\";\nimport { Vector2 } from \"./types/vector2\";\nimport { Color, HSV, HSV2RGB, RgbToHex } from './utils/color';\n\nexport enum PortType {\n    Input = \"INPUT\",\n    Output = \"OUTPUT\",\n    InputArray = \"INPUTARRAY\",\n}\n\nexport interface PortStyle {\n    size?: number;\n    fillColor?: string;\n    borderColor?: string;\n    borderSize?: number;\n}\n\ntype ConnectionChangeCallback = (connection: Connection, connectionIndex: number, port: Port, portType: PortType, node: FlowNode) => void\n\nexport interface PortConfig {\n    name?: string;\n    type?: string;\n    description?: string;\n    array?: boolean;\n    emptyStyle?: PortStyle;\n    filledStyle?: PortStyle;\n    onConnectionAdded?: ConnectionChangeCallback;\n    onConnectionRemoved?: ConnectionChangeCallback;\n};\n\n// Calculate a color hash for an arbirary type\nfunction fallbackColor(type: string, s: number): string {\n    let value = 0;\n    for (var i = 0; i < type.length; i++) {\n        value += type.charCodeAt(i) * (i + 1);\n    }\n\n    const mod = 24;\n    value = Math.round(value) % mod;\n\n    const hsv: HSV = { h: (value / (mod - 1)) * 360, s: s, v: 1 };\n    const color: Color = { r: 0, g: 0, b: 0 };\n    HSV2RGB(hsv, color);\n    return RgbToHex(color);\n}\n\nexport class Port {\n\n    #node: FlowNode;\n\n    #displayName: string;\n\n    #emptyStyle: PortStyle;\n\n    #filledStyle: PortStyle;\n\n    #connections: Array<Connection>;\n\n    #portType: PortType\n\n    #dataType: string;\n\n    #dataTypePopupElement: RenderElementBase;\n\n    #onConnectionAdded: Array<ConnectionChangeCallback>;\n\n    #onConnectionRemoved: Array<ConnectionChangeCallback>;\n\n    constructor(node: FlowNode, portType: PortType, config?: PortConfig) {\n        this.#node = node;\n        this.#connections = new Array<Connection>();\n        this.#portType = portType;\n        this.#displayName = config?.name === undefined ? \"Port\" : config?.name;\n        this.#dataType = config?.type === undefined ? \"\" : config?.type;\n\n        this.#emptyStyle = {\n            borderColor: config?.emptyStyle?.borderColor === undefined ? \"#1c1c1c\" : config.emptyStyle?.borderColor,\n            fillColor: config?.emptyStyle?.fillColor === undefined ? fallbackColor(this.#dataType, 0.3) : config.emptyStyle?.fillColor,\n            borderSize: config?.emptyStyle?.borderSize === undefined ? 1 : config.emptyStyle?.borderSize,\n            size: config?.emptyStyle?.size === undefined ? 4 : config.emptyStyle?.size\n        }\n\n        this.#filledStyle = {\n            borderColor: config?.filledStyle?.borderColor === undefined ? \"#1c1c1c\" : config.filledStyle?.borderColor,\n            fillColor: config?.filledStyle?.fillColor === undefined ? fallbackColor(this.#dataType, 1) : config.filledStyle?.fillColor,\n            borderSize: config?.filledStyle?.borderSize === undefined ? 1 : config.filledStyle?.borderSize,\n            size: config?.filledStyle?.size === undefined ? 5 : config.filledStyle?.size\n        }\n\n        this.#onConnectionAdded = new Array<ConnectionChangeCallback>();\n        if (config?.onConnectionAdded) {\n            this.#onConnectionAdded.push(config?.onConnectionAdded);\n        }\n\n        this.#onConnectionRemoved = new Array<ConnectionChangeCallback>();\n        if (config?.onConnectionRemoved) {\n            this.#onConnectionRemoved.push(config?.onConnectionRemoved);\n        }\n\n        const containerElements = new Array<RenderElementBase>();\n        let dataTypeDisplay = this.#dataType;\n        if (config?.array === true) {\n            dataTypeDisplay = \"Array<\" + dataTypeDisplay + \">\"\n        }\n        containerElements.push(new TextElement(\n            new Text(dataTypeDisplay, {\n                color: \"white\",\n            }),\n            {\n                Align: TextAlign.Center,\n            }\n        ));\n\n        const description = config?.description;\n        if (description && description !== \"\") {\n            containerElements.push(new TextElement(\n                new Text(description, { color: \"white\", style: FontStyle.Italic }),\n                {\n                    Align: TextAlign.Center,\n                    Padding: { Top: 16 },\n                    MaxWidth: 400,\n                    LineHeight: 1.5\n                }\n            ));\n        }\n\n        this.#dataTypePopupElement = new ContainerRenderElement(\n            containerElements,\n            {\n                BackgroundColor: \"rgba(0, 0, 0, 0.85)\",\n                Border: {\n                    Radius: 6,\n                },\n                Padding: 13,\n            }\n        );\n    }\n\n    addConnection(connection: Connection): void {\n        const c = this.#connections.length;\n        this.#connections.push(connection);\n        for (let i = 0; i < this.#onConnectionAdded.length; i++) {\n            this.#onConnectionAdded[i](connection, c, this, this.#portType, this.#node);\n        }\n    }\n\n    replaceConnection(connection: Connection, index: number): void {\n        const c = this.#connections.length;\n        this.#connections[index] = connection;\n        for (let i = 0; i < this.#onConnectionAdded.length; i++) {\n            this.#onConnectionAdded[i](connection, c, this, this.#portType, this.#node);\n        }\n    }\n\n    addConnectionAddedListener(callback: ConnectionChangeCallback) {\n        if (callback === undefined) {\n            return;\n        }\n        this.#onConnectionAdded.push(callback);\n    }\n\n    connections(): Array<Connection> {\n        return this.#connections;\n    }\n\n    addConnectionRemovedListener(callback: ConnectionChangeCallback) {\n        if (callback === undefined) {\n            return;\n        }\n        this.#onConnectionRemoved.push(callback);\n    }\n\n    clearConnection(connection: Connection): void {\n        const index = this.#connections.indexOf(connection);\n        if (index > -1) {\n            this.#connections.splice(index, 1);\n            for (let i = 0; i < this.#onConnectionRemoved.length; i++) {\n                this.#onConnectionRemoved[i](connection, index, this, this.#portType, this.#node);\n            }\n        } else {\n            console.error(\"no connection found to remove\");\n        }\n    }\n\n    getDataType(): string {\n        return this.#dataType;\n    }\n\n    getPortType(): PortType {\n        return this.#portType;\n    }\n\n    getDisplayName(): string {\n        return this.#displayName;\n    }\n\n    filledStyleColor(): string {\n        if (this.#filledStyle.fillColor === undefined) {\n            console.error(\"There's no fill color!!!!!!!!!\")\n            return \"black\";\n        }\n        return this.#filledStyle.fillColor;\n    }\n\n    #box: Box = { Position: { x: 0, y: 0 }, Size: { x: 0, y: 0 } };\n\n    render(ctx: CanvasRenderingContext2D, position: Vector2, camera: Camera, mousePosition: Vector2 | undefined, postProcess: PassSubsystem): Box {\n        let style = this.#emptyStyle;\n        if (this.#connections.length > 0) {\n            style = this.#filledStyle;\n        }\n\n        let scaledRadius = style.size as number * camera.zoom\n\n        if (mousePosition && InBox(this.#box, mousePosition)) {\n            scaledRadius *= 1.25;\n\n            // Redeclare so lambda is ensured to use these values\n            const xPos = position.x;\n            const yPos = position.y;\n\n            // TODO: Make it so we're not creating a new lambda each frame\n            postProcess.queue(() => {\n                const size = { x: 0, y: 0 }\n                this.#dataTypePopupElement.calcSize(ctx, size, { x: -1, y: -1 });\n                // size.x = Math.min(150, size.x)\n                this.#dataTypePopupElement.render(ctx, { x: xPos - (size.x / 2), y: yPos }, 1, size)\n            })\n        }\n\n        this.#box.Position.x = position.x - scaledRadius;\n        this.#box.Position.y = position.y - scaledRadius;\n        this.#box.Size.x = scaledRadius * 2;\n        this.#box.Size.y = scaledRadius * 2;\n\n        ctx.strokeStyle = style.borderColor as string;\n        ctx.fillStyle = style.fillColor as string;\n\n        ctx.beginPath();\n        if (this.#portType === PortType.InputArray) {\n            ctx.rect(position.x - scaledRadius, position.y - scaledRadius, scaledRadius * 2, scaledRadius * 2)\n        } else {\n            ctx.arc(position.x, position.y, scaledRadius, 0, 2 * Math.PI);\n        }\n        ctx.fill();\n        ctx.stroke();\n\n\n        return this.#box;\n    }\n}", "export interface StrokeStyleConfig {\n    size?: number;\n    color?: string;\n}\n\nexport function StrokeStyleWithFallback(input?: StrokeStyleConfig, fallback?: StrokeStyleConfig): StrokeStyleConfig {\n    return {\n        color: input?.color === undefined ? fallback?.color : input?.color,\n        size: input?.size === undefined ? fallback?.size : input?.size,\n    };\n}\n\nexport class StrokeStyle {\n    #size: number;\n\n    #color: string;\n\n    constructor(config?: StrokeStyleConfig) {\n        this.#size = config?.size === undefined ? 0.5 : config.size;\n        this.#color = config?.color === undefined ? \"black\" : config.color;\n    }\n\n    setupStyle(ctx: CanvasRenderingContext2D, scale: number): void {\n        ctx.strokeStyle = this.#color;\n        ctx.lineWidth = scale * this.#size;\n    }\n\n    setColor(newColor: string): void {\n        this.#color = newColor;\n    }\n\n    setSize(newSize: number): void {\n        this.#size = newSize;\n    }\n\n    size(): number {\n        return this.#size;\n    }\n}", "import { Box } from \"../types/box\";\nimport { StrokeStyle, StrokeStyleConfig, StrokeStyleWithFallback } from \"./stroke\";\n\nexport interface BoxStyleConfig {\n    border?: StrokeStyleConfig;\n    color?: string;\n    radius?: number;\n}\n\nexport function BoxStyleWithFallback(input?: BoxStyleConfig, fallback?: BoxStyleConfig): BoxStyleConfig {\n    return {\n        radius: input?.radius === undefined ? fallback?.radius : input?.radius,\n        color: input?.color === undefined ? fallback?.color : input?.color,\n        border: StrokeStyleWithFallback(input?.border, fallback?.border)\n    };\n}\n\nexport class BoxStyle {\n    #border: StrokeStyle | null;\n\n    #color: string;\n\n    #radius: number;\n\n    constructor(config?: BoxStyleConfig) {\n        this.#color = config?.color === undefined ? \"#CCCCCC\" : config.color;\n        this.#border = config?.border === undefined ? null : new StrokeStyle(config.border);\n        this.#radius = config?.radius === undefined ? 2 : config.radius;\n    }\n\n    #box(ctx: CanvasRenderingContext2D, box: Box, scale: number, radius: any): void {\n        ctx.fillStyle = this.#color\n        this.#border?.setupStyle(ctx, scale);\n        ctx.beginPath();\n        ctx.roundRect(\n            box.Position.x,\n            box.Position.y,\n            box.Size.x,\n            box.Size.y,\n            radius\n        );\n        ctx.fill();\n    }\n\n    #draw(ctx: CanvasRenderingContext2D, box: Box, scale: number, radius: any): void {\n        this.#box(ctx, box, scale, radius);\n        ctx.stroke();\n    }\n\n    Outline(ctx: CanvasRenderingContext2D, box: Box, scale: number, radius: any): void {\n        this.#border?.setupStyle(ctx, scale);\n        ctx.beginPath();\n        ctx.roundRect(\n            box.Position.x,\n            box.Position.y,\n            box.Size.x,\n            box.Size.y,\n            radius\n        );\n        ctx.stroke();\n    }\n\n    Draw(ctx: CanvasRenderingContext2D, box: Box, scale: number): void {\n        this.#draw(ctx, box, scale, this.#radius * scale)\n    }\n\n    DrawRoundedTopOnly(ctx: CanvasRenderingContext2D, box: Box, scale: number): void {\n        this.#draw(ctx, box, scale, [this.#radius * scale * 2, this.#radius * scale * 2, 0, 0])\n    }\n\n    DrawUnderline(ctx: CanvasRenderingContext2D, box: Box, scale: number): void {\n        this.#box(ctx, box, scale, [this.#radius * scale * 2, this.#radius * scale * 2, 0, 0]);\n        ctx.beginPath();\n        ctx.moveTo(box.Position.x, box.Position.y + box.Size.y)\n        ctx.lineTo(box.Position.x + box.Size.x, box.Position.y + box.Size.y);\n        ctx.stroke();\n    }\n\n    borderSize(): number {\n        if (this.#border === null) {\n            return 0;\n        }\n        return this.#border.size();\n    }\n\n    radius(): number {\n        return this.#radius;\n    }\n\n    setColor(color: string): void {\n        this.#color = color;\n    }\n\n    setBorderColor(color: string): void {\n        if (this.#border === null) {\n            this.#border = new StrokeStyle({\n                color: color\n            })\n        } else {\n            this.#border.setColor(color);\n        }\n    }\n\n}", "export interface PopupConfig {\n    title: string;\n    options: Array<string>;\n\n    onClose?: (button: string | null) => void;\n    content?: () => Element;\n    buttonCSS?: string;\n}\n\nexport class Popup {\n\n    #title: string;\n\n    #options: Array<string>;\n\n    #content?: () => Element;\n\n    #onClose?: (button: string | null) => void;\n\n    // Styling ================================================================\n\n    #buttonCSS: string;\n\n    // Runtime ================================================================\n\n    #popup: HTMLDivElement | null;\n\n    constructor(config: PopupConfig) {\n        this.#title = config.title;\n        this.#options = config.options;\n        this.#content = config.content;\n        this.#onClose = config.onClose;\n        this.#buttonCSS = config.buttonCSS === undefined ? \"flex-grow: 1; margin-right: 8px;\" : config.buttonCSS;\n        this.#popup = null;\n    }\n\n    Hide(): void {\n        if (this.#popup === null) {\n            return;\n        }\n        document.body.removeChild(this.#popup);\n        this.#popup = null;\n    }\n\n    Show(): void {\n        this.#popup = document.createElement('div');\n        this.#popup.style.cssText = 'position:absolute;top:0;width:100%;display:flex;height:100%;justify-content:center;align-items:center;background-color:#00000070;';\n        document.body.appendChild(this.#popup);\n\n        const container = document.createElement('div');\n        container.style.cssText = 'background-color:#000;color:white;font-family:Verdana;border-radius:8px;padding:16px;';\n        this.#popup.appendChild(container);\n\n        const title = document.createElement(\"h2\");\n        title.textContent = this.#title;\n        title.style.cssText = \"margin-top:0;margin-bottom:16px;\";\n        container.appendChild(title)\n\n        if (this.#content !== undefined) {\n            container.appendChild(this.#content());\n        }\n\n        const buttonContainer = document.createElement(\"div\");\n        buttonContainer.style.cssText = 'margin-top:16px;justify-content:space-around;align-items:center;flex-direction:row;display:flex;';\n        container.appendChild(buttonContainer);\n\n        for (let i = 0; i < this.#options.length; i++) {\n            const button = document.createElement(\"button\");\n            button.style.cssText = this.#buttonCSS;\n            button.textContent = this.#options[i];\n            button.onclick = () => {\n                this.Hide();\n                if (this.#onClose !== undefined) {\n                    this.#onClose(this.#options[i]);\n                }\n            };\n            buttonContainer.appendChild(button);\n        }\n    }\n\n} ", "import { Box } from \"../types/box\";\nimport { BoxStyle, BoxStyleConfig, BoxStyleWithFallback } from \"./box\";\nimport { TextAlign } from \"./canvasTextAlign\";\nimport { TextBaseline } from \"./canvasTextBaseline\";\nimport { TextStyle, TextStyleConfig, TextStyleFallback } from './text';\n\n\nexport interface TextBoxStyleConfig {\n    box?: BoxStyleConfig;\n    text?: TextStyleConfig;\n\n    textAlign?: CanvasTextAlign;\n    textBaseline?: CanvasTextBaseline;\n}\n\nexport function TextBoxStyleWithFallback(input?: TextBoxStyleConfig, fallback?: TextBoxStyleConfig): TextBoxStyleConfig {\n    return {\n        box: BoxStyleWithFallback(input?.box, fallback?.box),\n        text: TextStyleFallback(input?.text, fallback?.text),\n        \n        textAlign: input?.textAlign === undefined ? fallback?.textAlign : input?.textAlign,\n        textBaseline: input?.textBaseline === undefined ? fallback?.textBaseline : input?.textBaseline,\n    };\n}\n\nexport class TextBoxStyle {\n    #box: BoxStyle;\n\n    #text: TextStyle;\n\n    #textAlign: CanvasTextAlign;\n\n    #textBaseline: CanvasTextBaseline;\n\n    constructor(config?: TextBoxStyleConfig) {\n        this.#box = new BoxStyle(config?.box);\n        this.#text = new TextStyle(config?.text);\n\n        this.#textAlign = config?.textAlign === undefined ? TextAlign.Center : config.textAlign;\n        this.#textBaseline = config?.textBaseline === undefined ? TextBaseline.Middle : config.textBaseline;\n    }\n\n    Draw(ctx: CanvasRenderingContext2D, box: Box, scale: number, text: string) {\n        this.#box.Draw(ctx, box, scale);\n\n        ctx.textAlign = this.#textAlign;\n        ctx.textBaseline = this.#textBaseline;\n        this.#text.setupStyle(ctx, scale);\n\n        ctx.fillText(\n            text,\n            box.Position.x + (box.Size.x / 2),\n            box.Position.y + (box.Size.y / 2),\n        );\n    }\n\n    DrawUnderline(ctx: CanvasRenderingContext2D, box: Box, scale: number, text: string) {\n        this.#box.DrawUnderline(ctx, box, scale);\n\n        ctx.textAlign = this.#textAlign;\n        ctx.textBaseline = this.#textBaseline;\n        this.#text.setupStyle(ctx, scale);\n\n        ctx.fillText(\n            text,\n            box.Position.x + (box.Size.x / 2),\n            box.Position.y + (box.Size.y / 2),\n        );\n    }\n\n    setTextColor(color: string): void {\n        this.#text.setColor(color);\n    }\n\n    setBoxColor(color: string): void {\n        this.#box.setColor(color);\n    }\n\n    setBorderColor(color: string): void {\n        this.#box.setBorderColor(color);\n    }\n}", "import { Box } from '../types/box';\nimport { Vector2 } from '../types/vector2';\n\nexport const width = 150;\nexport const height = 25;\n\nexport interface Widget {\n    Size(): Vector2\n    Draw(ctx: CanvasRenderingContext2D, position: Vector2, scale: number, mousePosition: Vector2 | undefined): Box\n    ClickStart(): void\n    ClickEnd(): void\n}", "import { Theme } from \"../theme\";\nimport { Popup } from \"../popup\";\nimport { TextBoxStyle, TextBoxStyleConfig, TextBoxStyleWithFallback } from \"../styles/textBox\";\nimport { Box, InBox } from '../types/box';\nimport { CopyVector2, Vector2 } from \"../types/vector2\";\nimport { height, width } from \"./widget\";\nimport { FlowNode } from \"../node\";\n\nexport interface NumberWidgetConfig {\n    value?: number;\n\n    property?: string;\n\n    idleBoxStyle?: TextBoxStyleConfig;\n\n    highlightBoxStyle?: TextBoxStyleConfig;\n\n    callback?: (newNumber: number) => void;\n}\n\nexport class NumberWidget {\n\n    #node: FlowNode;\n\n    #nodeProperty: string | undefined;\n\n    #value: number;\n\n    #idleBoxStyle: TextBoxStyle;\n\n    #highlightBoxStyle: TextBoxStyle;\n\n    #text: string;\n\n    #callback?: (newNumber: number) => void;\n\n    constructor(node: FlowNode, config?: NumberWidgetConfig) {\n        this.#value = 0;\n        this.#text = \"0\";\n\n        this.#node = node;\n        this.#nodeProperty = config?.property;\n        this.#idleBoxStyle = new TextBoxStyle(TextBoxStyleWithFallback(config?.idleBoxStyle, {\n            box: {\n                color: Theme.Widget.BackgroundColor,\n                border: {\n                    size: Theme.Widget.Border.Size,\n                    color: Theme.Widget.Border.Color,\n                },\n                radius: Theme.Widget.Border.Radius\n            },\n            text: { color: Theme.Widget.FontColor },\n        }));\n        this.#highlightBoxStyle = new TextBoxStyle(TextBoxStyleWithFallback(config?.highlightBoxStyle, {\n            box: {\n                color: Theme.Widget.Hover.BackgroundColor,\n                border: {\n                    size: Theme.Widget.Border.Size,\n                    color: Theme.Widget.Border.Color,\n                },\n                radius: Theme.Widget.Border.Radius\n            },\n            text: { color: Theme.Widget.FontColor },\n        }));\n        this.Set(config?.value === undefined ? 0 : config?.value);\n        this.#callback = config?.callback;\n\n        if (this.#nodeProperty !== undefined) {\n            this.#node.addPropertyChangeListener(this.#nodeProperty, (oldVal, newVal) => {\n                this.Set(newVal);\n            });\n        }\n\n    }\n\n    Size(): Vector2 {\n        return { \"x\": width, \"y\": height }\n    }\n\n    Set(newNumber: number): void {\n        if (this.#value === newNumber) {\n            return;\n        }\n\n        this.#value = newNumber;\n\n        if (this.#nodeProperty !== undefined) {\n            this.#node.setProperty(this.#nodeProperty, this.#value);\n        }\n\n        if (this.#callback !== undefined) {\n            this.#callback(this.#value);\n        }\n\n        // https://stackoverflow.com/questions/5765398/whats-the-best-way-to-convert-a-number-to-a-string-in-javascript\n        this.#text = '' + parseFloat(this.#value.toPrecision(6));\n    }\n\n    ClickStart(): void {\n    }\n\n    ClickEnd(): void {\n        let input: HTMLInputElement | null = null;\n\n        const setOption = \"Set\";\n        const cancelOption = \"Cancel\";\n        const popup = new Popup({\n            title: \"Set Number\",\n            options: [setOption, cancelOption],\n            content: () => {\n                const container = document.createElement('div');\n                input = document.createElement('input')\n                input.type = \"number\";\n                input.valueAsNumber = this.#value;\n                container.append(input);\n                return container;\n            },\n            onClose: (button: string | null): void => {\n                if (button !== setOption || input === null) {\n                    return;\n                }\n\n                this.Set(input.valueAsNumber);\n            },\n        });\n\n        popup.Show();\n    }\n\n\n    Draw(ctx: CanvasRenderingContext2D, position: Vector2, scale: number, mousePosition: Vector2 | undefined): Box {\n        const box = {\n            Position: { x: 0, y: 0 },\n            Size: {\n                x: width * scale,\n                y: height * scale\n            }\n        };\n        CopyVector2(box.Position, position);\n\n        let style: TextBoxStyle = this.#idleBoxStyle;\n\n        if (mousePosition !== undefined) {\n            if (InBox(box, mousePosition)) {\n                style = this.#highlightBoxStyle;\n            }\n        }\n\n        style.DrawUnderline(ctx, box, scale, this.#text)\n\n        return box;\n    }\n}", "import { Theme } from \"../theme\";\nimport { TextBoxStyle, TextBoxStyleConfig, TextBoxStyleWithFallback } from \"../styles/textBox\";\nimport { Box, InBox } from \"../types/box\";\nimport { CopyVector2, Vector2 } from \"../types/vector2\";\nimport { height, width } from \"./widget\";\n\n\nexport interface ButtonWidgetConfig {\n    text?: string;\n    callback?: () => void;\n    idleStyle?: TextBoxStyleConfig;\n    hoverStyle?: TextBoxStyleConfig;\n    clickStyle?: TextBoxStyleConfig;\n}\n\nexport class ButtonWidget {\n\n    #text: string;\n\n    #idleStyle: TextBoxStyle;\n\n    #hoverStyle: TextBoxStyle;\n\n    #clickStyle: TextBoxStyle;\n\n    #callback?: () => void;\n\n    #gettingClicked: boolean;\n\n    constructor(config?: ButtonWidgetConfig) {\n        this.#text = config?.text === undefined ? \"Button\" : config?.text;\n        this.#callback = config?.callback\n        this.#gettingClicked = false;\n\n        this.#idleStyle = new TextBoxStyle(TextBoxStyleWithFallback(config?.idleStyle, {\n            box: {\n                color: Theme.Widget.BackgroundColor,\n                border: {\n                    size: Theme.Widget.Border.Size,\n                    color: Theme.Widget.Border.Color,\n                }\n            },\n            text: { color: Theme.Widget.FontColor },\n        }));\n        this.#hoverStyle = new TextBoxStyle(TextBoxStyleWithFallback(config?.hoverStyle, {\n            box: {\n                color: Theme.Widget.Hover.BackgroundColor,\n                border: {\n                    size: Theme.Widget.Border.Size,\n                    color: Theme.Widget.Border.Color,\n                }\n            },\n            text: { color: Theme.Widget.FontColor },\n        }));\n        this.#clickStyle = new TextBoxStyle(TextBoxStyleWithFallback(config?.clickStyle, {\n            box: { \n                color: Theme.Widget.Button.Click.BackgroundColor,\n                border: {\n                    size: Theme.Widget.Border.Size,\n                    color: Theme.Widget.Border.Color,\n                }\n            },\n            text: { color: Theme.Widget.FontColor },\n        }))\n    }\n\n    Size(): Vector2 {\n        return { \"x\": width, \"y\": height }\n    }\n\n    Draw(ctx: CanvasRenderingContext2D, position: Vector2, scale: number, mousePosition: Vector2 | undefined): Box {\n        const box = {\n            Position: { x: 0, y: 0 },\n            Size: {\n                x: width * scale,\n                y: height * scale\n            }\n        };\n        CopyVector2(box.Position, position);\n\n        let style: TextBoxStyle = this.#idleStyle;\n\n        if (mousePosition !== undefined && !this.#gettingClicked) {\n            if (InBox(box, mousePosition)) {\n                style = this.#hoverStyle;\n            }\n        }\n\n        if (this.#gettingClicked) {\n            style = this.#clickStyle;\n        }\n        style.Draw(ctx, box, scale, this.#text);\n\n        return box\n    }\n\n    ClickStart(): void {\n        this.#gettingClicked = true;\n    }\n\n    ClickEnd(): void {\n        this.#gettingClicked = false;\n        if (this.#callback !== undefined) {\n            this.#callback();\n        }\n    }\n}", "import { HexToColor } from \"../utils/color\";\nimport { TextStyleConfig } from \"../styles/text\";\nimport { Box } from \"../types/box\";\nimport { CopyVector2, Vector2 } from \"../types/vector2\";\nimport { height, width } from \"./widget\";\nimport { Popup } from \"../popup\";\nimport { TextBoxStyle } from '../styles/textBox';\nimport { Theme } from \"../theme\";\nimport { FlowNode } from \"../node\";\n\nexport interface ColorWidgetConfig {\n    value?: string;\n\n    property?: string;\n\n    textStyle?: TextStyleConfig;\n\n    callback?: (newColor: string) => void;\n}\n\nfunction contrastColor(color: string): string {\n    const c = HexToColor(color);\n    if (c === null) {\n        return \"black\";\n    }\n\n    if ((c.r + c.g + c.b) / 3 > 0.5) {\n        return \"black\"\n    }\n\n    return \"white\";\n}\n\nexport class ColorWidget {\n\n    #node: FlowNode;\n\n    #nodeProperty: string | undefined;\n\n    #value: string;\n\n    #contrast: string;\n\n    #textBoxStyle: TextBoxStyle;\n\n    #callback?: (newColor: string) => void;\n\n    constructor(node: FlowNode, config?: ColorWidgetConfig) {\n        this.#value = \"#000000\"\n        this.#contrast = contrastColor(this.#value);\n        this.Set(config?.value === undefined ? \"#000000\" : config?.value);\n        \n        this.#node = node;\n        this.#nodeProperty = config?.property;\n        this.#textBoxStyle = new TextBoxStyle({\n            box: {\n                color: this.#value,\n                border: {\n                    color: this.#contrast,\n                    size: Theme.Widget.Border.Size\n                }\n            },\n            text: config?.textStyle\n        });\n        this.#callback = config?.callback;\n\n        if (this.#nodeProperty !== undefined) {\n            this.#node.addPropertyChangeListener(this.#nodeProperty, (oldVal, newVal) => {\n                this.Set(newVal);\n            });\n        }\n    }\n\n    Size(): Vector2 {\n        return { \"x\": width, \"y\": height }\n    }\n\n    Set(value: string): void {\n        if (this.#value === value) {\n            return;\n        }\n\n        this.#value = value;\n\n        if (this.#callback !== undefined) {\n            this.#callback(this.#value);\n        }\n\n        if (this.#nodeProperty !== undefined) {\n            this.#node.setProperty(this.#nodeProperty, this.#value);\n        }\n\n        // Update Styling\n        this.#contrast = contrastColor(this.#value);\n        this.#textBoxStyle.setBoxColor(this.#value);\n        this.#textBoxStyle.setBorderColor(this.#contrast);\n        this.#textBoxStyle.setTextColor(this.#contrast);\n    }\n\n    ClickStart(): void {\n    }\n\n    ClickEnd(): void {\n        let input: HTMLInputElement | null = null;\n\n        const popup = new Popup({\n            title: \"Set Color\",\n            options: [\"Set\", \"Cancel\"],\n            content: () => {\n                const container = document.createElement('div');\n\n                input = document.createElement('input')\n                input.type = \"color\";\n                input.value = this.#value;\n                input.name = \"color\"\n                container.append(input);\n\n                const label = document.createElement(\"label\");\n                label.htmlFor = \"color\";\n                label.textContent = \"Color\";\n                container.append(label);\n\n                return container;\n            },\n            onClose: (button: string | null): void => {\n                if (button !== \"Set\" || input === null) {\n                    return;\n                }\n\n                this.Set(input.value);\n            },\n        });\n\n        popup.Show();\n    }\n\n    Draw(ctx: CanvasRenderingContext2D, position: Vector2, scale: number, mousePosition: Vector2 | undefined): Box {\n        const box = {\n            Position: { x: 0, y: 0 },\n            Size: {\n                x: width * scale,\n                y: height * scale\n            }\n        };\n        CopyVector2(box.Position, position);\n\n        this.#textBoxStyle.Draw(ctx, box, scale, this.#value)\n\n        return box;\n    }\n}", "import { Theme } from \"../theme\";\nimport { TextAlign } from \"../styles/canvasTextAlign\";\nimport { TextStyle, TextStyleConfig, TextStyleFallback } from \"../styles/text\";\nimport { Box } from '../types/box';\nimport { CopyVector2, Vector2, Zero } from \"../types/vector2\";\nimport { Clamp, Clamp01 } from \"../utils/math\";\nimport { height, width } from \"./widget\";\nimport { TextBaseline } from \"../styles/canvasTextBaseline\";\nimport { FlowNode } from \"../node\";\n\nexport interface SliderWidgetConfig {\n\n    property?: string;\n\n    min?: number;\n\n    max?: number;\n\n    value?: number;\n\n    backgroundColor?: string;\n\n    borderColor?: string;\n\n    fillColor?: string;\n\n    textStyle?: TextStyleConfig;\n\n    change?: (newValue: number) => void;\n\n    release?: (newValue: number) => void;\n\n    snapIncrement?: number;\n\n}\n\nexport class SliderWidget {\n\n    // Data Variables =========================================================\n\n    #min: number;\n\n    #max: number;\n\n    #value: number;\n\n    #text: string;\n\n    #snapIncrement?: number;\n\n    #node: FlowNode;\n\n    #nodeProperty: string | undefined;\n\n    // Callbacks ==============================================================\n\n    #change?: (newValue: number) => void;\n\n    #release?: (newValue: number) => void;\n\n    // Styling Variables ======================================================\n\n    #textStyle: TextStyle\n\n    #backgroundColor: string;\n\n    #borderColor: string;\n\n    #fillColor: string;\n\n    // Runtime Variables ======================================================\n\n    #lastMousePosition: Vector2;\n\n    #clickStartMousePosition: Vector2;\n\n    #clicking: boolean;\n\n    constructor(node: FlowNode, config?: SliderWidgetConfig) {\n        this.#node = node;\n        this.#value = 0;\n        this.#min = config?.min === undefined ? 0 : config?.min;\n        this.#max = config?.max === undefined ? 1 : config?.max;\n        this.#snapIncrement = config?.snapIncrement;\n        this.#nodeProperty = config?.property;\n        this.#text = \"\";\n        \n        this.#release = config?.release;\n\n        this.#backgroundColor = config?.backgroundColor === undefined ? Theme.Widget.BackgroundColor : config?.backgroundColor;\n        this.#fillColor = config?.fillColor === undefined ? Theme.Widget.Slider.FillColor : config?.fillColor;\n        this.#borderColor = config?.borderColor === undefined ? Theme.Widget.Border.Color : config?.borderColor;\n        this.#textStyle = new TextStyle(TextStyleFallback(config?.textStyle, {\n            color: Theme.Widget.FontColor,\n        }));\n        this.#lastMousePosition = Zero();\n        this.#clickStartMousePosition = Zero();\n        this.#clicking = false;\n\n\n        if (config?.property !== undefined && config?.property !== null) {\n            node.addPropertyChangeListener(config.property, (oldVal, newVal) => {\n                this.SetValue(newVal);\n            });\n        }\n\n        this.SetValue(config?.value === undefined ? 0 : config?.value);\n\n        // Setup change callback after we set the initial value to prevent the callback from being \n        this.#change = config?.change;\n    }\n\n    SetValue(newValue: number): void {\n        const cleanedValue = Clamp(newValue, this.#min, this.#max);\n        if (this.#value === cleanedValue) {\n            return;\n        }\n\n        this.#value = cleanedValue;\n\n        if (this.#nodeProperty) {\n            this.#node.setProperty(this.#nodeProperty, this.#value);\n        }\n\n        this.#text = this.#value.toFixed(3);\n        if (this.#change !== undefined) {\n            this.#change(this.#value);\n        }\n    }\n\n    Size(): Vector2 {\n        return { \"x\": width, \"y\": height }\n    }\n\n    ClickStart(): void {\n        this.#clicking = true;\n        CopyVector2(this.#clickStartMousePosition, this.#lastMousePosition)\n    }\n\n    ClickEnd(): void {\n        this.#clicking = false;\n        if (this.#release !== undefined) {\n            this.#release(this.#value);\n        }\n    }\n\n    Draw(ctx: CanvasRenderingContext2D, position: Vector2, scale: number, mousePosition: Vector2 | undefined): Box {\n        const scaledWidth = width * scale;\n        const scaledHeight = height * scale;\n\n        const scaledBorderThickness = Theme.Widget.Border.Size * scale;\n\n        // Render background\n        ctx.fillStyle = this.#backgroundColor;\n        ctx.strokeStyle = this.#borderColor;\n        ctx.lineWidth = scaledBorderThickness;\n        ctx.beginPath();\n        ctx.roundRect(\n            position.x,\n            position.y,\n            scaledWidth,\n            scaledHeight,\n            Theme.Widget.Border.Radius * scale\n        );\n        ctx.fill();\n        ctx.stroke();\n\n        // Render Fill\n        const fill = Clamp01((this.#value - this.#min) / (this.#max - this.#min));\n        ctx.fillStyle = this.#fillColor;\n        ctx.beginPath();\n        ctx.roundRect(\n            position.x + (scaledBorderThickness / 2),\n            position.y + (scaledBorderThickness / 2),\n            (scaledWidth * fill) - scaledBorderThickness,\n            scaledHeight - scaledBorderThickness,\n            Theme.Widget.Border.Radius * scale\n        );\n        ctx.fill();\n\n        // Render Number\n        ctx.textAlign = TextAlign.Center;\n        ctx.textBaseline = TextBaseline.Middle;\n        this.#textStyle.setupStyle(ctx, scale);\n        ctx.fillText(\n            this.#text,\n            position.x + (scaledWidth / 2),\n            position.y + (scaledHeight / 2),\n        );\n\n        // Update value based on mouse position\n        if (mousePosition !== undefined) {\n            CopyVector2(this.#lastMousePosition, mousePosition);\n            if (this.#clicking) {\n                const min = position.x + (scaledBorderThickness / 2);\n                const max = min + scaledWidth - scaledBorderThickness;\n                const p = Clamp01((this.#lastMousePosition.x - min) / (max - min));\n\n                let value = (p * (this.#max - this.#min)) + this.#min;\n                if (this.#snapIncrement !== undefined) {\n                    value = Math.round(value / this.#snapIncrement) * this.#snapIncrement;\n                }\n\n                this.SetValue(value);\n            }\n        }\n\n        return {\n            Position: { x: position.x, y: position.y },\n            Size: {\n                x: scaledWidth,\n                y: scaledHeight\n            }\n        };\n    }\n}", "import { Popup } from \"../popup\";\n\ninterface Config {\n    title: string;\n    startingValue: string;\n    onUpdate: (newValue: string) => void;\n    onCancel?: () => void;\n}\n\nexport function SetStringPopup(config: Config): Popup {\n    let input: HTMLInputElement | null = null;\n\n    return new Popup({\n        title: config.title,\n        options: [\"Set\", \"Cancel\"],\n        content: () => {\n            const container = document.createElement('div');\n            input = document.createElement('input')\n            input.value = config.startingValue;\n            container.append(input);\n            return container;\n        },\n        onClose: (button: string | null): void => {\n            if (button !== \"Set\" || input === null) {\n                if(config.onCancel) {\n                    config.onCancel();\n                }\n                return;\n            }\n            config.onUpdate(input.value);\n        },\n    });\n}", "import { Theme } from \"../theme\";\nimport { TextBoxStyle, TextBoxStyleConfig, TextBoxStyleWithFallback } from \"../styles/textBox\";\nimport { Box, InBox } from \"../types/box\";\nimport { CopyVector2, Vector2 } from \"../types/vector2\";\nimport { fitString } from \"../utils/string\";\nimport { height, width } from \"./widget\";\nimport { FlowNode } from '../node';\nimport { SetStringPopup } from \"../popups/string\";\n\nexport interface StringWidgetConfig {\n    property?: string;\n\n    value?: string;\n\n    textBoxStyle?: TextBoxStyleConfig;\n\n    callback?: (newString: string) => void;\n}\n\nexport class StringWidget {\n\n    #value: string;\n\n    #idleStyle: TextBoxStyle;\n\n    #hoverStyle: TextBoxStyle;\n\n    #callback?: (newString: string) => void;\n\n    #node: FlowNode\n\n    #nodeProperty: string | undefined;\n\n    constructor(node: FlowNode, config?: StringWidgetConfig) {\n        this.#value = \"\";\n        \n        this.#node = node;\n        this.#nodeProperty = config?.property;\n        this.#idleStyle = new TextBoxStyle(TextBoxStyleWithFallback(config?.textBoxStyle, {\n            box: {\n                color: Theme.Widget.BackgroundColor,\n                border: {\n                    size: Theme.Widget.Border.Size,\n                    color: Theme.Widget.Border.Color,\n                },\n                radius: Theme.Widget.Border.Radius\n            },\n            text: { color: Theme.Widget.FontColor },\n        }));\n\n        this.#hoverStyle = new TextBoxStyle(TextBoxStyleWithFallback(config?.textBoxStyle, {\n            box: {\n                color: Theme.Widget.Hover.BackgroundColor,\n                border: {\n                    size: Theme.Widget.Border.Size,\n                    color: Theme.Widget.Border.Color,\n                },\n                radius: Theme.Widget.Border.Radius\n            },\n            text: { color: Theme.Widget.FontColor },\n        }));\n\n        this.Set(config?.value === undefined ? \"\" : config?.value);\n        this.#callback = config?.callback;\n        if (this.#nodeProperty !== undefined) {\n            this.#node.addPropertyChangeListener(this.#nodeProperty, (oldVal, newVal) => {\n                this.Set(newVal);\n            });\n        }\n    }\n\n    Size(): Vector2 {\n        return { \"x\": width, \"y\": height }\n    }\n\n    Set(value: string): void {\n        if (this.#value === value) {\n            return;\n        }\n        this.#value = value;\n\n        if (this.#nodeProperty !== undefined) {\n            this.#node.setProperty(this.#nodeProperty, this.#value)\n        }\n\n        if (this.#callback !== undefined) {\n            this.#callback(this.#value);\n        }\n    }\n\n    ClickStart(): void {\n    }\n\n    ClickEnd(): void {\n        const popup = SetStringPopup({\n            title: \"Set String\",\n            startingValue: this.#value,\n            onUpdate: (value: string): void => {\n                this.Set(value);\n            },\n        });\n        popup.Show();\n    }\n\n    Draw(ctx: CanvasRenderingContext2D, position: Vector2, scale: number, mousePosition: Vector2 | undefined): Box {\n        const box = {\n            Position: { x: 0, y: 0 },\n            Size: {\n                x: width * scale,\n                y: height * scale\n            }\n        };\n        CopyVector2(box.Position, position);\n\n\n        let style: TextBoxStyle = this.#idleStyle;\n\n        if (mousePosition !== undefined) {\n            if (InBox(box, mousePosition)) {\n                style = this.#hoverStyle;\n            }\n        }\n\n        style.DrawUnderline(ctx, box, scale, fitString(ctx, this.#value, box.Size.x - (20 * scale)))\n\n        return box;\n    }\n}", "import { Theme } from \"../theme\";\nimport { Box, InBox } from \"../types/box\";\nimport { CopyVector2, Vector2 } from \"../types/vector2\";\nimport { height, width } from \"./widget\";\nimport { TextBoxStyle, TextBoxStyleConfig, TextBoxStyleWithFallback } from \"../styles/textBox\";\nimport { FlowNode } from \"../node\";\n\nexport interface ToggleStyleConfig {\n    idle?: TextBoxStyleConfig,\n    hover?: TextBoxStyleConfig,\n    lightColor?: string;\n    lightBorderColor?: string;\n    lightBlur?: number;\n}\n\nexport interface ToggleWidgetConfig {\n    property?: string;\n    value?: boolean;\n    text?: string;\n    callback?: () => void;\n    enabledStyle?: ToggleStyleConfig;\n    disabledStyle?: ToggleStyleConfig;\n}\n\nclass ToggleStyle {\n\n    #idleStyle: TextBoxStyle;\n\n    #hoverStyle: TextBoxStyle;\n\n    #lightColor: string;\n\n    #lightBorderColor: string;\n\n    #lightBlur?: number;\n\n    #box: Box;\n\n    constructor(config?: ToggleStyleConfig) {\n        this.#idleStyle = new TextBoxStyle(TextBoxStyleWithFallback(config?.idle, {\n            box: {\n                color: Theme.Widget.BackgroundColor,\n                border: {\n                    size: Theme.Widget.Border.Size,\n                    color: Theme.Widget.Border.Color,\n                }\n            },\n            text: { color: Theme.Widget.FontColor },\n        }));\n        this.#hoverStyle = new TextBoxStyle(TextBoxStyleWithFallback(config?.hover, {\n            box: {\n                color: Theme.Widget.Hover.BackgroundColor,\n                border: {\n                    size: Theme.Widget.Border.Size,\n                    color: Theme.Widget.Border.Color,\n                }\n            },\n            text: { color: Theme.Widget.FontColor },\n        }));\n        this.#lightColor = config?.lightColor === undefined ? \"#222222\" : config.lightColor;\n        this.#lightBorderColor = config?.lightBorderColor === undefined ? \"black\" : config.lightBorderColor;\n        this.#lightBlur = config?.lightBlur;\n\n        this.#box = {Position: { x: 0, y: 0 }, Size: { x: 0, y: 0 } };\n    }\n\n    Draw(ctx: CanvasRenderingContext2D, pos: Vector2, scale: number, text: string, mousePosition: Vector2 | undefined): Box {\n        const scaledWidth = width * scale;\n        const scaledHeight = height * scale;\n        this.#box.Size.x = scaledWidth;\n        this.#box.Size.y = scaledHeight;\n        CopyVector2(this.#box.Position, pos);\n\n        // Background\n        let style: TextBoxStyle = this.#idleStyle;\n        if (mousePosition !== undefined) {\n            if (InBox(this.#box, mousePosition)) {\n                style = this.#hoverStyle;\n            }\n        }\n        style.Draw(ctx, this.#box, scale, text);\n\n        // Light\n        const lightScale = Math.min(scaledWidth, scaledHeight);\n        ctx.strokeStyle = this.#lightBorderColor;\n        ctx.fillStyle = this.#lightColor\n        ctx.beginPath();\n        ctx.roundRect(\n            pos.x + (lightScale * .2),\n            pos.y + (lightScale * .2),\n            lightScale * .6,\n            lightScale * .6,\n            Theme.Widget.Border.Radius * scale\n        );\n        if (this.#lightBlur) {\n            ctx.shadowBlur = this.#lightBlur * scale;\n            ctx.shadowColor = this.#lightColor;\n        }\n        ctx.fill();\n        if (this.#lightBlur) {\n            ctx.shadowBlur = 0;\n        }\n        // ctx.stroke();\n\n        return this.#box\n    }\n}\n\nexport class ToggleWidget {\n\n    #node: FlowNode;\n\n    #nodeProperty: string | undefined;\n\n    #value: boolean;\n\n    #text: string;\n\n    #enabledStyle: ToggleStyle;\n\n    #disabledStyle: ToggleStyle;\n\n    #callback?: (value: boolean) => void;\n\n    constructor(node: FlowNode, config?: ToggleWidgetConfig) {\n        this.#value = false;\n\n        this.#node = node;\n        this.#nodeProperty = config?.property;\n        this.#text = config?.text === undefined ? \"Toggle\" : config?.text;\n\n        this.#enabledStyle = new ToggleStyle({\n            idle: TextBoxStyleWithFallback(config?.enabledStyle?.idle, {\n                box: {\n                    color: Theme.Widget.BackgroundColor,\n                    border: {\n                        size: Theme.Widget.Border.Size,\n                        color: Theme.Widget.Border.Color,\n                    }\n                },\n                text: { color: Theme.Widget.FontColor },\n            }),\n            lightBorderColor: config?.enabledStyle?.lightBorderColor,\n            lightColor: config?.enabledStyle?.lightColor === undefined ? \"#00FF00\" : config?.enabledStyle?.lightColor,\n            lightBlur: config?.enabledStyle?.lightBlur === undefined ? 15 : config?.enabledStyle?.lightBlur\n        });\n        this.#disabledStyle = new ToggleStyle({\n            idle: TextBoxStyleWithFallback(config?.disabledStyle?.idle, {\n                box: {\n                    color: Theme.Widget.BackgroundColor,\n                    border: {\n                        size: Theme.Widget.Border.Size,\n                        color: Theme.Widget.Border.Color,\n                    }\n                },\n                text: { color: Theme.Widget.FontColor },\n            }),\n            lightBorderColor: config?.disabledStyle?.lightBorderColor,\n            lightColor: config?.disabledStyle?.lightColor === undefined ? \"#004400\" : config?.enabledStyle?.lightColor,\n        });\n\n        this.Set(config?.value === undefined ? false : config?.value);\n        this.#callback = config?.callback;\n        if (this.#nodeProperty !== undefined) {\n            this.#node.addPropertyChangeListener(this.#nodeProperty, (oldVal, newVal) => {\n                this.Set(newVal);\n            });\n        }\n    }\n\n    Size(): Vector2 {\n        return { \"x\": width, \"y\": height }\n    }\n\n    Draw(ctx: CanvasRenderingContext2D, position: Vector2, scale: number, mousePosition: Vector2 | undefined): Box {\n        let style = this.#value ? this.#enabledStyle : this.#disabledStyle;\n        return style.Draw(ctx, position, scale, this.#text, mousePosition);\n    }\n\n    Toggle(): void {\n        this.Set(!this.#value);\n    }\n\n    Set(value: boolean): void {\n        if (this.#value === value) {\n            return;\n        }\n        this.#value = value;\n\n        if (this.#nodeProperty !== undefined) {\n            this.#node.setProperty(this.#nodeProperty, this.#value);\n        }\n\n        if (this.#callback !== undefined) {\n            this.#callback(this.#value);\n        }\n    }\n\n    ClickStart(): void {\n        this.Toggle();\n    }\n\n    ClickEnd(): void {\n    }\n}", "import { Box } from \"../types/box\";\nimport { CopyVector2, Vector2 } from \"../types/vector2\";\n\nconst margin = 15;\n\nexport interface ImageWidgetConfig {\n    image?: string;\n    maxWidth?: number\n    maxHeight?: number\n    blob?: Blob;\n}\n\n/**\n *   constructor(lightNode, nodeManager, id, parameterData, app) {\n        this.lightNode = lightNode;\n        this.id = id;\n        this.app = app;\n        this.lightNode.title = parameterData.name;\n\n        this.lightNode.onDropFile = (file) => {\n            // console.log(file)\n            var reader = new FileReader();\n            reader.onload = (evt) => {\n                console.log(evt.target.result)\n                nodeManager.nodeParameterChanged({\n                    id: id,\n                    data: evt.target.result,\n                    binary: true\n                });\n            }\n            reader.readAsArrayBuffer(file);\n\n            const url = URL.createObjectURL(file);\n            // this.loadImage(this._url, function (img) {\n            //     that.size[1] = (img.height / img.width) * that.size[0];\n            // });\n            this.loadImgFromURL(url);\n        }\n    }\n\n    loadImgFromURL(url) {\n        const img = document.createElement(\"img\");\n        img.src = url;\n        img.onload = () => {\n            // if (callback) {\n            // callback(this);\n            // }\n            // console.log(\"Image loaded, size: \" + img.width + \"x\" + img.height);\n            // this.dirty = true;\n            // that.boxcolor = \"#9F9\";f\n            // that.setDirtyCanvas(true);\n            this.lightNode.widgets[0].image = img\n            this.lightNode.setSize(this.lightNode.computeSize());\n        };\n        img.onerror = () => {\n            console.log(\"error loading the image:\" + url);\n        }\n    }\n\n    update(parameterData) {\n        console.log(\"image parameter\", parameterData)\n        const curVal = parameterData.currentValue;\n        this.app.RequestManager.getParameterValue(this.id, (response) => {\n            const url = URL.createObjectURL(response);\n            this.loadImgFromURL(url)\n        })\n    }\n */\n\nexport class ImageWidget {\n\n    #url: string | undefined;\n\n    #image: HTMLImageElement | undefined;\n\n    #maxWidth: number;\n\n    #maxHeight: number;\n\n    constructor(config?: ImageWidgetConfig) {\n        this.#maxWidth = config?.maxWidth === undefined ? 150 : config?.maxWidth;\n        this.#maxHeight = config?.maxHeight === undefined ? 150 : config?.maxHeight;\n        if (config?.image) {\n            this.SetUrl(config?.image);\n        } else if (config?.blob) {\n            this.SetBlob(config?.blob);\n        }\n    }\n\n    SetBlob(blob: Blob) {\n        const urlCreator = window.URL || window.webkitURL;\n        const imageUrl = urlCreator.createObjectURL(blob);\n        this.SetUrl(imageUrl);\n    }\n\n    SetUrl(url: string) {\n        this.#image = undefined;\n        this.#url = url;\n\n        const img = document.createElement(\"img\");\n        img.src = url;\n        img.onload = () => {\n            this.#image = img;\n        };\n        img.onerror = (event) => {\n            console.log(\"error loading image:\", url, event);\n        }\n    }\n\n    Size(): Vector2 {\n        if (this.#image === undefined) {\n            return { \"x\": 0, \"y\": 0 }\n        }\n\n        let adjust = 1;\n        if (this.#image.width > this.#maxWidth) {\n            adjust = this.#maxWidth / this.#image.width\n        }\n\n        if (this.#image.height > this.#maxHeight) {\n            let heightAdjust = this.#maxHeight / this.#image.height\n            if (heightAdjust < adjust) {\n                adjust = heightAdjust;\n            }\n        }\n\n        return {\n            \"x\": adjust * this.#image.width,\n            \"y\": adjust * this.#image.height\n        }\n    }\n\n    ClickStart(): void {\n    }\n\n    ClickEnd(): void {\n    }\n\n    Draw(ctx: CanvasRenderingContext2D, position: Vector2, scale: number, mousePosition: Vector2 | undefined): Box {\n        const size = this.Size();\n        const box: Box = {\n            Position: { x: 0, y: 0 },\n            Size: {\n                x: size.x * scale,\n                y: size.y * scale,\n            }\n        }\n        CopyVector2(box.Position, position);\n\n        if (!this.#image) {\n            return box;\n        }\n\n        ctx.drawImage(\n            this.#image,\n            position.x,\n            position.y,\n            box.Size.x,\n            box.Size.y\n        );\n        return box;\n    }\n}", "import { Theme } from \"../theme\";\nimport { Box, InBox } from \"../types/box\";\nimport { CopyVector2, Vector2, Zero } from \"../types/vector2\";\nimport { FlowNode } from '../node';\nimport { Text } from \"../types/text\";\nimport { TextStyle, TextStyleConfig, TextStyleFallback } from \"../styles/text\";\n\nexport interface TextWidgetConfig {\n    property?: string;\n\n    value?: string;\n\n    textBoxStyle?: TextStyleConfig;\n\n    callback?: (newString: string) => void;\n}\n\nexport class TextWidget {\n\n    #value: Text;\n\n    #callback?: (newString: string) => void;\n\n    #node: FlowNode\n\n    #nodeProperty: string | undefined;\n\n    #size: Vector2;\n\n    constructor(node: FlowNode, config?: TextWidgetConfig) {\n        this.#size = Zero();\n        this.#node = node;\n        this.#nodeProperty = config?.property;\n        this.#value = new Text(\"\", TextStyleFallback(config?.textBoxStyle, {\n            font: Theme.FontFamily,\n            color: Theme.Widget.FontColor,\n            size: Theme.Note.FontSize,\n        }))\n\n        this.Set(config?.value === undefined ? \"\" : config?.value);\n        this.#callback = config?.callback;\n        if (this.#nodeProperty !== undefined) {\n            this.#node.addPropertyChangeListener(this.#nodeProperty, (oldVal, newVal) => {\n                this.Set(newVal);\n            });\n        }\n    }\n\n    Size(): Vector2 {\n        return this.#size;\n    }\n\n    Set(value: string): void {\n        if (this.#value.get() === value) {\n            return;\n        }\n        this.#value.set(value);\n\n        if (this.#nodeProperty !== undefined) {\n            this.#node.setProperty(this.#nodeProperty, value)\n        }\n\n        if (this.#callback !== undefined) {\n            this.#callback(value);\n        }\n    }\n\n    ClickStart(): void {\n        // Left blank for implementing Widget interface\n    }\n\n    ClickEnd(): void {\n        // Left blank for implementing Widget interface\n    }\n\n\n    Draw(ctx: CanvasRenderingContext2D, position: Vector2, scale: number, mousePosition: Vector2 | undefined): Box {\n        this.#value.size(ctx, scale, this.#size);\n        const box = {\n            Position: { x: 0, y: 0 },\n            Size: this.#size\n        };\n        CopyVector2(box.Position, position);\n        this.#value.size(ctx, 1, this.#size);\n        \n        ctx.textAlign = \"left\";\n        this.#value.render(ctx, scale, box.Position);\n        // this.#idleStyle.DrawUnderline(ctx, box, scale, fitString(ctx, this.#value, box.Size.x - (20 * scale)))\n\n        return box;\n    }\n}", "import { Widget } from \"./widget\";\nimport { NumberWidget, NumberWidgetConfig } from './number';\nimport { ButtonWidget, ButtonWidgetConfig } from './button';\nimport { ColorWidget, ColorWidgetConfig } from './color';\nimport { SliderWidget, SliderWidgetConfig } from './slider';\nimport { StringWidget, StringWidgetConfig } from './string';\nimport { ToggleWidget, ToggleWidgetConfig } from './toggle';\nimport { FlowNode } from \"../node\";\nimport { ImageWidget, ImageWidgetConfig } from \"./image\";\nimport { TextWidget, TextWidgetConfig } from \"./text\";\n\nexport type WidgetBuilder = (node: FlowNode, confg?: any) => Widget;\n\nclass WidgetFactory {\n\n    #registeredWidgets: Map<string, WidgetBuilder>\n\n    constructor() {\n        this.#registeredWidgets = new Map<string, WidgetBuilder>();\n    }\n\n    register(widgetType: string, builder: WidgetBuilder): void {\n        this.#registeredWidgets.set(widgetType, builder);\n    }\n\n    create(node: FlowNode, widgetType: string, config: any): Widget {\n        const builder = this.#registeredWidgets.get(widgetType)\n        if (builder === undefined) {\n            throw new Error(\"no builder registered for widget: \" + widgetType);\n        }\n        return builder(node, config);\n    }\n}\n\nconst GlobalWidgetFactory = new WidgetFactory();\n\nGlobalWidgetFactory.register(\"button\", (node: FlowNode, config?: ButtonWidgetConfig) => new ButtonWidget(config));\nGlobalWidgetFactory.register(\"number\", (node: FlowNode, config?: NumberWidgetConfig) => new NumberWidget(node, config));\nGlobalWidgetFactory.register(\"color\", (node: FlowNode, config?: ColorWidgetConfig) => new ColorWidget(node, config));\nGlobalWidgetFactory.register(\"slider\", (node: FlowNode, config?: SliderWidgetConfig) => new SliderWidget(node, config));\nGlobalWidgetFactory.register(\"string\", (node: FlowNode, config?: StringWidgetConfig) => new StringWidget(node, config));\nGlobalWidgetFactory.register(\"toggle\", (node: FlowNode, config?: ToggleWidgetConfig) => new ToggleWidget(node, config));\nGlobalWidgetFactory.register(\"image\", (node: FlowNode, config?: ImageWidgetConfig) => new ImageWidget(config));\nGlobalWidgetFactory.register(\"text\", (node: FlowNode, config?: TextWidgetConfig) => new TextWidget(node, config));\n\nexport { GlobalWidgetFactory };", "import { FlowNode } from \"./node\";\nimport { Port } from \"./port\";\nimport { BoxCenter, InBox } from \"./types/box\";\nimport { Vector2, Zero } from \"./types/vector2\";\n\nexport interface ConnectionRendererParams {\n    ctx: CanvasRenderingContext2D;\n    start: Vector2;\n    end: Vector2;\n    graphScale: number;\n    mouseOver: boolean;\n\n    inNode: FlowNode | null;\n    inPort: Port | null;\n    outNode: FlowNode | null;\n    outPort: Port | null;\n}\n\nexport type ConnectionRenderer = (params: ConnectionRendererParams) => void\n\nexport function DefaultConnectionRenderer(connectionSize: number, connectionColor: string | undefined, mouseOverSize: number, mouseOverColor: string | undefined): ConnectionRenderer {\n    return (params: ConnectionRendererParams) => {\n\n        let color = \"#00FF00\";\n        if (params.outPort !== null) {\n            color = params.outPort.filledStyleColor()\n        } else if (params.inPort !== null) {\n            color = params.inPort.filledStyleColor()\n        }\n\n        let lineSize = connectionSize * params.graphScale;\n        if (connectionColor !== undefined) {\n            color = connectionColor;\n        }\n\n        if (params.mouseOver  || params.inNode?.selected() || params.outNode?.selected()) {\n            lineSize = mouseOverSize * params.graphScale;\n            params.ctx.shadowBlur = 25 * params.graphScale;\n\n            if (mouseOverColor !== undefined) {\n                color = mouseOverColor;\n            }\n\n            params.ctx.shadowColor = color;\n        }\n\n        params.ctx.strokeStyle = color;\n        params.ctx.lineWidth = lineSize;\n\n        // Draw\n        params.ctx.beginPath();\n        params.ctx.moveTo(params.start.x, params.start.y);\n        const midX = (params.start.x + params.end.x) / 2;\n        params.ctx.bezierCurveTo(midX, params.start.y, midX, params.end.y, params.end.x, params.end.y);\n        params.ctx.stroke();\n        params.ctx.shadowBlur = 0;\n    }\n}\n\nexport class Connection {\n\n    // Variables for holding temp data, preventing object allocations each\n    // frame\n    #inPos: Vector2;\n    #outPos: Vector2;\n\n    #inNode: FlowNode | null;\n    #inNodePortIndex: number;\n    #outNode: FlowNode | null;\n    #outNodePortIndex: number;\n    #renderer: ConnectionRenderer;\n\n    constructor(\n        inNode: FlowNode | null,\n        inNodePortIndex: number,\n        outNode: FlowNode | null,\n        outNodePortIndex: number,\n        renderer: ConnectionRenderer,\n    ) {\n\n        this.#inNode = inNode;\n        this.#inNodePortIndex = inNodePortIndex;\n        this.#outNode = outNode;\n        this.#outNodePortIndex = outNodePortIndex;\n        this.#renderer = renderer;\n        \n        this.#inPos = Zero();\n        this.#outPos = Zero();\n\n        if (inNode !== null) {\n            inNode.inputPort(this.#inNodePortIndex).addConnection(this);\n        }\n\n        if (outNode !== null) {\n            outNode.outputPort(this.#outNodePortIndex).addConnection(this);\n        }\n    }\n\n    render(ctx: CanvasRenderingContext2D, graphScale: number, mouseOver: boolean, mousePosition: Vector2 | undefined): void {\n\n        // Not sure what to do here? Maybe we should throw an error in the \n        // future?\n        if (this.#inNode === null && this.#outNode === null) {\n            return;\n        }\n\n        if (this.#inNode !== null) {\n            const inPortBox = this.#inNode.inputPortPosition(this.#inNodePortIndex)\n            if (inPortBox === undefined) {\n                return;\n            }\n            BoxCenter(inPortBox, this.#inPos);\n        } else if (mousePosition !== undefined) {\n            this.#inPos.x = mousePosition.x;\n            this.#inPos.y = mousePosition.y;\n        } else {\n            return;\n        }\n\n        if (this.#outNode !== null) {\n            const outPortBox = this.#outNode.outputPortPosition(this.#outNodePortIndex);\n            if (outPortBox === undefined) {\n                return;\n            }\n            BoxCenter(outPortBox, this.#outPos);\n        } else if (mousePosition !== undefined) {\n            this.#outPos.x = mousePosition.x;\n            this.#outPos.y = mousePosition.y;\n        } else {\n            return;\n        }\n\n        this.#renderer({\n            ctx: ctx,\n            start: this.#inPos,\n            end: this.#outPos,\n            graphScale: graphScale,\n            mouseOver: mouseOver,\n\n            inPort: this.inPort(),\n            inNode: this.#inNode,\n            outPort: this.outPort(),\n            outNode: this.#outNode,\n        });\n    }\n\n    inNode(): FlowNode | null {\n        return this.#inNode;\n    }\n\n    outNode(): FlowNode | null {\n        return this.#outNode;\n    }\n\n    clearPort(mousePosition: Vector2): void {\n        if (this.#inNode !== null) {\n            const inPortBox = this.#inNode.inputPortPosition(this.#inNodePortIndex)\n            if (inPortBox !== undefined && InBox(inPortBox, mousePosition)) {\n                this.clearInput();\n            }\n        }\n\n        if (this.#outNode !== null) {\n            const outPortBox = this.#outNode.outputPortPosition(this.#outNodePortIndex);\n            if (outPortBox !== undefined && InBox(outPortBox, mousePosition)) {\n                this.clearOutput();\n            }\n        }\n    }\n\n    clearPorts(): void {\n        this.clearInput();\n        this.clearOutput();\n    }\n\n    setInput(node: FlowNode, portIndex: number, replace?: boolean): void {\n        this.#inNode = node;\n        this.#inNodePortIndex = portIndex;\n\n        const port = this.#inNode.inputPort(portIndex);\n        if(!!replace && port.connections().length > 0) {\n            port.replaceConnection(this, 0);\n        } else {\n            port.addConnection(this);\n        }\n    }\n\n    setOutput(node: FlowNode, portIndex: number): void {\n        this.#outNode = node;\n        this.#outNodePortIndex = portIndex;\n        this.#outNode.outputPort(portIndex).addConnection(this);\n    }\n\n    clearInput() {\n        this.#inNode?.inputPort(this.#inNodePortIndex).clearConnection(this);\n        this.#inNode = null;\n        this.#inNodePortIndex = -1;\n    }\n\n    clearOutput() {\n        this.#outNode?.outputPort(this.#outNodePortIndex).clearConnection(this);\n        this.#outNode = null;\n        this.#outNodePortIndex = -1;\n    }\n\n    mouseOverPort(mousePosition: Vector2): Port | null {\n        if (this.#inNode !== null) {\n            const inPortBox = this.#inNode.inputPortPosition(this.#inNodePortIndex)\n            if (inPortBox !== undefined && InBox(inPortBox, mousePosition)) {\n                return this.#inNode.inputPort(this.#inNodePortIndex)\n            }\n        }\n\n        if (this.#outNode !== null) {\n            const outPortBox = this.#outNode.outputPortPosition(this.#outNodePortIndex);\n            if (outPortBox !== undefined && InBox(outPortBox, mousePosition)) {\n                return this.#outNode.outputPort(this.#outNodePortIndex)\n            }\n        }\n\n        return null;\n    }\n\n    outPort(): Port | null {\n        if (this.#outNode === null) {\n            return null;\n        }\n        return this.#outNode.outputPort(this.#outNodePortIndex);\n    }\n\n    inPort(): Port | null {\n        if (this.#inNode === null) {\n            return null;\n        }\n        return this.#inNode.inputPort(this.#inNodePortIndex);\n    }\n\n    referencesNode(node: FlowNode): boolean {\n        if (this.#inNode === node) {\n            return true;\n        }\n\n        if (this.#outNode === node) {\n            return true;\n        }\n\n        return false;\n    }\n}", "import { Vector2, Zero } from \"./types/vector2\";\n\nexport class Camera {\n\n    zoom: number;\n\n    position: Vector2;\n\n    constructor() {\n        this.zoom = 1;\n        this.position = Zero();\n    }\n\n    screenSpaceToGraphSpace(screenPosition: Vector2, out: Vector2): void {\n        const scale = this.zoom;\n        out.x = (screenPosition.x / scale) - (this.position.x / scale);\n        out.y = (screenPosition.y / scale) - (this.position.y / scale);\n    }\n\n    graphSpaceToScreenSpace(graphPosition: Vector2, out: Vector2): void {\n        out.x = this.position.x + (graphPosition.x * this.zoom);\n        out.y = this.position.y + (graphPosition.y * this.zoom);\n    }\n\n    reset(): void {\n        this.zoom = 1;\n        this.position.x = 0;\n        this.position.y = 0;\n    }\n}", "import { Camera } from \"./camera\";\nimport { NodeFlowGraph } from \"./graph\";\nimport { FlowNode } from \"./node\";\nimport { NodeSubsystem } from \"./nodes/subsystem\";\nimport { Box } from \"./types/box\";\n\n// TODO: Cyclical dependencies will end our life\n\nfunction MarkInputs(graph: NodeSubsystem, positions: Array<number>, nodeLUT: Map<FlowNode, number>, node: number, depth: number, shouldSort: Map<FlowNode, boolean>) {\n    const inputs = graph.connectedInputsNodeReferencesByIndex(node);\n    for (let i = 0; i < inputs.length; i++) {\n        const nodeIndex = nodeLUT.get(inputs[i]) as number;\n\n        if (!shouldSort.has(inputs[i])) {\n            continue;\n        }\n\n        positions[nodeIndex] = depth;\n        MarkInputs(graph, positions, nodeLUT, nodeIndex, depth - 1, shouldSort);\n    }\n}\n\nfunction MarkOutputs(graph: NodeSubsystem, positions: Array<number>, nodeLUT: Map<FlowNode, number>, node: number, depth: number, shouldSort: Map<FlowNode, boolean>) {\n    const outputs = graph.connectedInputsNodeReferencesByIndex(node);\n    for (let i = 0; i < outputs.length; i++) {\n        const nodeIndex = nodeLUT.get(outputs[i]) as number;\n\n        if (!shouldSort.has(outputs[i])) {\n            continue;\n        }\n\n        positions[nodeIndex] = depth;\n        MarkOutputs(graph, positions, nodeLUT, nodeIndex, depth + 1, shouldSort);\n    }\n}\n\nexport function Organize(ctx: CanvasRenderingContext2D, graph: NodeSubsystem, nodesToSort?: Array<number>): void {\n    const nodes = graph.getNodes();\n    const nodeLUT = new Map<FlowNode, number>();\n    const bounds = new Array<Box>(nodes.length);\n    const relativePosition = new Array<Array<number>>(nodes.length);\n    const claimed = new Array<boolean>(nodes.length);\n    const shouldSort = new Map<FlowNode, boolean>(); // TODO: we don't really need a Map, is their a Set data structure?\n\n    if (nodesToSort) {\n        if (nodesToSort.length < 2) {\n            return;\n        }\n        for (let i = 0; i < nodesToSort.length; i++) {\n            shouldSort.set(nodes[nodesToSort[i]], true);\n        }\n    } else {\n        for (let i = 0; i < nodes.length; i++) {\n            shouldSort.set(nodes[i], true);\n        }\n    }\n\n    const camera = new Camera();\n\n    // Initialize everything\n    for (let i = 0; i < nodes.length; i++) {\n        bounds[i] = nodes[i].calculateBounds(ctx, camera);\n        relativePosition[i] = new Array<number>(nodes.length);\n        nodeLUT.set(nodes[i], i);\n        claimed[i] = false;\n    }\n\n    for (let i = 0; i < nodes.length; i++) {\n        relativePosition[i][i] = 0;\n        MarkInputs(graph, relativePosition[i], nodeLUT, i, -1, shouldSort);\n        MarkOutputs(graph, relativePosition[i], nodeLUT, i, 1, shouldSort);\n    }\n\n    interface entry {\n        node: number;\n        length: number;\n        min: number;\n        max: number\n    }\n\n    let entries = new Array<entry>(shouldSort.size);\n\n    let nodeIndex = 0;\n    for (let i = 0; i < nodes.length; i++) {\n        if (!shouldSort.has(nodes[i])) {\n            continue;\n        }\n\n        let min = 0;\n        let max = 0;\n        for (let x = 0; x < nodes.length; x++) {\n            const val = relativePosition[i][x];\n            if (val === undefined) {\n                continue;\n            }\n\n            min = Math.min(min, val);\n            max = Math.max(max, val);\n        }\n        entries[nodeIndex] = {\n            length: max - min,\n            node: i,\n            min: min,\n            max: max\n        }\n        nodeIndex++\n    }\n\n\n    entries.sort((a, b) => b.length - a.length);\n\n    interface Column {\n        Nodes: Array<FlowNode>;\n        Width: number;\n    }\n\n    const columns = Array<Column>(entries[0].length + 1);\n    for (let i = 0; i < columns.length; i++) {\n        columns[i] = {\n            Nodes: new Array<FlowNode>(),\n            Width: 0\n        };\n    }\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n        if (claimed[entry.node] === true) {\n            continue;\n        }\n\n        const positions = relativePosition[entry.node];\n\n        for (let p = 0; p < positions.length; p++) {\n            const position = positions[p];\n            if (position === undefined) {\n                continue;\n            }\n\n            if (claimed[p] === true) {\n                continue;\n            }\n\n            const nodeBounds = bounds[p];\n            const column = columns[position - entry.min];\n            column.Nodes.push(nodes[p])\n            column.Width = Math.max(column.Width, nodeBounds.Size.x)\n\n            claimed[p] = true;\n        }\n    }\n\n    let allColumnsWidths = 0;\n    for (let c = 0; c < columns.length; c++) {\n        allColumnsWidths += columns[c].Width;\n    }\n\n    const widthSpacing = 100;\n    const heightSpacing = 50;\n\n    let widthOffset = 0;\n    for (let c = 0; c < columns.length; c++) {\n        var column = columns[c];\n        let heightOffset = 0;\n\n        widthOffset -= widthSpacing + column.Width;\n\n        for (let n = 0; n < column.Nodes.length; n++) {\n            const node = column.Nodes[n];\n            const nodeBounds = bounds[nodeLUT.get(node) as number];\n\n            let pos = {\n                x: widthOffset + allColumnsWidths + (columns.length * widthSpacing),\n                y: heightOffset\n            }\n\n            heightOffset += nodeBounds.Size.y + heightSpacing\n            node.setPosition(pos);\n        }\n    }\n\n}", "export function TimeExecution(name: string, callback: Function) {\n    const start = name + \"_Start\";\n    const end = name + \"_End\";\n\n    performance.mark(start);\n    callback();\n    performance.mark(end);\n    performance.measure(name, start, end);\n}", "import { ContextMenuConfig, ContextMenuItemConfig } from \"../contextMenu\";\nimport { FlowNode, FlowNodeConfig } from '../node';\nimport { Vector2 } from \"../types/vector2\";\nimport { NodeSubsystem } from \"./subsystem\";\n\ninterface PublisherNodes {\n    [name: string]: FlowNodeConfig\n}\n\nexport interface PublisherConfig {\n    name?: string;\n    description?: string;\n    version?: string;\n    nodes?: PublisherNodes\n}\n\nexport class Publisher {\n\n    #name: string;\n\n    #description: string;\n\n    #version: string;\n\n    #registeredNodes: Map<string, FlowNodeConfig>\n\n    constructor(config?: PublisherConfig) {\n        this.#name = config?.name === undefined ? \"Unknown\" : config.name;\n        this.#description = config?.description === undefined ? \"\" : config.description;\n        this.#version = config?.version === undefined ? \"v0.0.0\" : config.version;\n\n        this.#registeredNodes = new Map<string, FlowNodeConfig>();\n\n        if (config?.nodes !== undefined) {\n            for (const nodeKey in config.nodes) {\n                this.register(nodeKey, config.nodes[nodeKey]);\n            }\n        }\n    }\n\n    nodes(): Map<string, FlowNodeConfig> {\n        return this.#registeredNodes;\n    }\n\n    register(nodeType: string, config: FlowNodeConfig): void {\n        this.#registeredNodes.set(nodeType, config);\n    }\n\n    unregister(nodeType: string): boolean {\n        return this.#registeredNodes.delete(nodeType);\n    }\n\n    #recurseBuildMenu(graph: NodeSubsystem, name: string, subMenu: Map<string, FlowNodeConfig>, position: Vector2): ContextMenuConfig {\n        const items: Array<ContextMenuItemConfig> = [];\n        const subMenus = new Map<string, Map<string, FlowNodeConfig>>();\n\n        for (let [key, nodeConfig] of subMenu) {\n            const slashIndex = key.indexOf(\"/\")\n            const bracketIndex = key.indexOf(\"[\")\n\n            if (slashIndex === -1 || (bracketIndex !== -1 && bracketIndex < slashIndex)) {\n                items.push({\n                    name: key,\n                    callback: () => {\n                        const node = new FlowNode(nodeConfig);\n                        node.setPosition(position);\n                        graph.addNode(node);\n                    },\n                });\n            } else {\n                const elements = key.split(\"/\");\n                if (!subMenus.has(elements[0])) {\n                    subMenus.set(elements[0], new Map<string, FlowNodeConfig>());\n                }\n\n                const menu = subMenus.get(elements[0]);\n                elements.shift();\n                menu?.set(elements.join(\"/\"), nodeConfig)\n            }\n        }\n\n        const menus: Array<ContextMenuConfig> = [];\n        for (let [key, nodes] of subMenus) {\n            menus.push(this.#recurseBuildMenu(graph, key, nodes, position))\n        }\n\n        return {\n            name: name,\n            items: items,\n            subMenus: menus\n        }\n    }\n\n    contextMenu(graph: NodeSubsystem, position: Vector2): ContextMenuConfig {\n        return this.#recurseBuildMenu(graph, this.#name, this.#registeredNodes, position);\n    }\n\n    create(nodeType: string): FlowNode {\n        const config = this.#registeredNodes.get(nodeType)\n        if (config === undefined) {\n            throw new Error(\"no builder registered for node: \" + nodeType);\n        }\n        return new FlowNode(config);\n    }\n}", "import { FlowNode } from \"../node\";\nimport { Publisher, PublisherConfig } from \"./publisher\";\nimport { ContextMenuConfig } from \"../contextMenu\";\nimport { Vector2 } from \"../types/vector2\";\nimport { nodeFlowGroup as nodeFlowContextMenuGroup, NodeSubsystem } from \"./subsystem\";\n\nexport type NodeCreatedCallback = (publisher: string, nodeType: string, node: FlowNode) => void;\n\ninterface NodeFactoryPublishers {\n    [name: string]: PublisherConfig\n}\n\nexport interface NodeFactoryConfig {\n    publishers?: NodeFactoryPublishers\n    onNodeCreated?: NodeCreatedCallback;\n}\n\nexport class NodeFactory {\n    #registeredPublishers: Map<string, Publisher>;\n\n    #registeredCallbacks: Array<NodeCreatedCallback>;\n\n    constructor(config?: NodeFactoryConfig) {\n        this.#registeredPublishers = new Map<string, Publisher>();\n        this.#registeredCallbacks = new Array<NodeCreatedCallback>();\n\n        if (config?.onNodeCreated) {\n            this.#registeredCallbacks.push(config?.onNodeCreated);\n        }\n\n        if (config?.publishers !== undefined) {\n            for (let entry in config.publishers) {\n                this.addPublisher(entry, new Publisher(config.publishers[entry]));\n            }\n        }\n    }\n\n    public addOnNodeCreatedListener(callback: NodeCreatedCallback): void {\n        this.#registeredCallbacks.push(callback);\n    }\n\n    public addPublisher(identifier: string, publisher: Publisher): void {\n        this.#registeredPublishers.set(identifier, publisher);\n    }\n\n    // I'm not even sure if I want this here? You can register on Publishers...\n    // So why not just make people register with the publisher.\n    // public register(publisher: string, nodeType: string, config: FlowNodeConfiguration): void {\n    //     const foundPublisher = this.#registeredPublishers.get(publisher);\n    //     if (foundPublisher === undefined) {\n    //         console.error(\"no publisher registered with identifier:\" + publisher);\n    //         return;\n    //     }\n\n    //     foundPublisher.register(nodeType, config);\n    // }\n\n    public create(publisher: string, nodeType: string): FlowNode {\n        const publisherIdentifier = this.#registeredPublishers.get(publisher)\n        if (publisherIdentifier === undefined) {\n            throw new Error(\"no publisher registered with identifier: \" + publisher);\n        }\n        const node = publisherIdentifier.create(nodeType);\n\n        for (let i = 0; i < this.#registeredCallbacks.length; i++) {\n            const callback = this.#registeredCallbacks[i];\n            callback(publisher, nodeType, node);\n        }\n        return node;\n    }\n\n    public newNodeSubmenus(graph: NodeSubsystem, position: Vector2): Array<ContextMenuConfig> {\n        const menus: Array<ContextMenuConfig> = [];\n        for (let [_, publisher] of this.#registeredPublishers) {\n            menus.push(publisher.contextMenu(graph, position))\n        }\n        return menus;\n    }\n\n    public openMenu(graph: NodeSubsystem, position: Vector2): ContextMenuConfig {\n        return {\n            name: \"New Node\",\n            group: nodeFlowContextMenuGroup,\n            subMenus: this.newNodeSubmenus(graph, position),\n        };\n    }\n} \n", "import { Camera } from \"../camera\";\nimport { Connection, ConnectionRenderer, DefaultConnectionRenderer } from \"../connection\";\nimport { CombineContextMenus, ContextMenuConfig } from \"../contextMenu\";\nimport { RenderResults } from \"../graphSubsystem\";\nimport { FlowNode, NodeState } from \"../node\";\nimport { Organize } from \"../organize\";\nimport { PassSubsystem } from \"../pass/subsystem\";\nimport { TimeExecution } from \"../performance\";\nimport { Port, PortType } from \"../port\";\nimport { BoxStyle } from \"../styles/box\";\nimport { CursorStyle } from \"../styles/cursor\";\nimport { Theme } from \"../theme\";\nimport { Box, BoxIntersection } from \"../types/box\";\nimport { List } from \"../types/list\";\nimport { Pool, VectorPool } from \"../types/pool\";\nimport { AddVector2, CopyVector2, SubVector2, Vector2, Zero } from \"../types/vector2\";\nimport { Widget } from \"../widgets/widget\";\nimport { NodeCreatedCallback, NodeFactory, NodeFactoryConfig } from \"./factory\";\nimport { Publisher } from \"./publisher\";\n\nexport type NodeAddedCallback = (node: FlowNode) => void;\nexport type NodeRemovedCallback = (node: FlowNode) => void;\n\nexport const nodeFlowGroup = \"node-flow-graph-node-menu\";\n\nexport interface ConnectionRendererConfiguration {\n    size?: number;\n    color?: string;\n\n    mouseOverSize?: number;\n    mouseOverColor?: string;\n\n    renderer?: ConnectionRenderer;\n}\n\nfunction BuildConnectionRenderer(config: ConnectionRendererConfiguration | undefined): ConnectionRenderer {\n    if (config?.renderer !== undefined) {\n        return config.renderer;\n    }\n\n    return DefaultConnectionRenderer(\n        config?.size === undefined ? 2 : config.size,\n        undefined, // config?.color === undefined ? \"#00FF00\" : config.color,\n        config?.mouseOverSize === undefined ? 4 : config.mouseOverSize,\n        undefined, // config?.mouseOverColor === undefined ? \"#00FF22\" : config.mouseOverColor\n    );\n}\n\ninterface PortIntersection {\n    Node: FlowNode;\n    Port: Port;\n    Index: number;\n    InputPort: boolean;\n}\n\ninterface NodeSubsystemConfig {\n    idleConnection?: ConnectionRendererConfiguration\n    nodes?: NodeFactoryConfig\n}\n\nexport class NodeSubsystem {\n\n    #postProcessPass: PassSubsystem;\n\n    #nodes: Array<FlowNode>;\n\n    #connections: Array<Connection>;\n\n    #nodeHovering: number;\n\n    #nodesGrabbed: List<number>;\n\n    #connectionSelected: Connection | null;\n\n    #idleConnectionRenderer: ConnectionRenderer\n\n    #portHovering: PortIntersection | null;\n\n    #widgetHovering: Widget | null;\n\n    #widgetCurrentlyClicking: Widget | null;\n\n    #cursor: CursorStyle;\n\n    #nodeFactory: NodeFactory;\n\n    #boxSelect: boolean;\n\n    #boxSelectStart_graphSpace: Vector2;\n\n    #boxSelectEnd_graphSpace: Vector2;\n\n    #boxSelectionNodes: List<number>;\n\n    #boxSelectStyle: BoxStyle;\n\n    // LISTENERS ==============================================================\n\n    #nodeRemovedCallbacks: Array<NodeRemovedCallback>;\n\n    #registeredNodeAddedCallbacks: Array<NodeAddedCallback>;\n\n    // ========================================================================\n\n    constructor(postProcessPass: PassSubsystem, config?: NodeSubsystemConfig) {\n        this.#postProcessPass = postProcessPass;\n        this.#nodes = [];\n        this.#nodeHovering = -1;\n        this.#nodesGrabbed = new List<number>();\n        this.#connectionSelected = null;\n        this.#portHovering = null;\n        this.#widgetHovering = null;\n        this.#widgetCurrentlyClicking = null;\n        this.#connections = new Array<Connection>();\n        this.#nodeFactory = new NodeFactory(config?.nodes);\n        this.#idleConnectionRenderer = BuildConnectionRenderer(config?.idleConnection);\n        this.#registeredNodeAddedCallbacks = new Array<NodeAddedCallback>();\n        this.#nodeRemovedCallbacks = new Array<NodeRemovedCallback>();\n        this.#cursor = CursorStyle.Default;\n\n        this.#boxSelect = false;\n        this.#boxSelectStart_graphSpace = Zero();\n        this.#boxSelectEnd_graphSpace = Zero();\n        this.#boxSelectionNodes = new List<number>();\n        this.#boxSelectStyle = new BoxStyle({\n            border: {\n                color: Theme.BoxSelect.Color,\n                size: Theme.BoxSelect.Size,\n            },\n            color: \"rgba(0,0,0,0)\",\n            radius: Theme.BoxSelect.Radius\n        });\n    }\n\n    public addPublisher(identifier: string, publisher: Publisher): void {\n        this.#nodeFactory.addPublisher(identifier, publisher);\n    }\n\n    public addOnNodeCreatedListener(callback: NodeCreatedCallback): void {\n        this.#nodeFactory.addOnNodeCreatedListener(callback);\n    }\n\n    public nodeFactory(): NodeFactory {\n        return this.#nodeFactory;\n    }\n\n    public addOnNodeAddedListener(callback: NodeAddedCallback): void {\n        if (callback === null || callback === undefined) {\n            return;\n        }\n        this.#registeredNodeAddedCallbacks.push(callback);\n    }\n\n    public addOnNodeRemovedListener(callback: NodeRemovedCallback): void {\n        if (callback === null || callback === undefined) {\n            return;\n        }\n        this.#nodeRemovedCallbacks.push(callback);\n    }\n\n    clickStart(mousePosition: Vector2, camera: Camera, ctrlKey: boolean): boolean {\n        this.#boxSelect = false;\n\n        let hoveringSomething = false;\n        if (this.#nodeHovering > -1) {\n            this.#selectNodeByIndex(this.#nodeHovering, !ctrlKey);\n\n            for (let i = 0; i < this.#nodes.length; i++) {\n                if (this.#nodes[i].selected()) {\n                    this.#nodesGrabbed.Push(i);\n                }\n            }\n\n            hoveringSomething = true;\n        }\n\n        if (this.#widgetHovering !== null) {\n            this.#widgetHovering.ClickStart();\n            this.#widgetCurrentlyClicking = this.#widgetHovering;\n            hoveringSomething = true;\n        }\n\n        if (this.#portHovering === null) {\n\n            if (ctrlKey && !hoveringSomething) {\n                camera.screenSpaceToGraphSpace(mousePosition, this.#boxSelectStart_graphSpace)\n                CopyVector2(this.#boxSelectEnd_graphSpace, this.#boxSelectStart_graphSpace);\n                this.#boxSelect = true;\n            }\n\n            return hoveringSomething || ctrlKey;\n        }\n\n        if (this.#portHovering.InputPort) {\n            for (let i = 0; i < this.#connections.length; i++) {\n                if (this.#connections[i].inPort() === this.#portHovering.Port) {\n                    this.#connections[i].clearInput();\n                    this.#connectionSelected = this.#connections[i];\n                    break;\n                }\n            }\n        } else {\n            let inNode: FlowNode | null = this.#portHovering.Node\n            let inNodeIndex = this.#portHovering.Index\n            let outNode: FlowNode | null = this.#portHovering.Node\n            let outNodeIndex = this.#portHovering.Index\n\n            if (this.#portHovering.InputPort) {\n                outNode = null;\n                outNodeIndex = -1;\n            } else {\n                inNode = null;\n                inNodeIndex = -1;\n            }\n\n            const connection = new Connection(inNode, inNodeIndex, outNode, outNodeIndex, this.#idleConnectionRenderer);\n            this.#connectionSelected = connection;\n            this.#connections.push(connection);\n        }\n\n        return true;\n    }\n\n    mouseDragEvent(delta: Vector2, scale: number): boolean {\n        let nodeMoved = false;\n\n        VectorPool.run(() => {\n            const scaledDelta = VectorPool.get();\n            scaledDelta.x = delta.x / scale;\n            scaledDelta.y = delta.y / scale;\n            AddVector2(this.#boxSelectEnd_graphSpace, this.#boxSelectEnd_graphSpace, scaledDelta);\n\n            if (this.#interactingWithNode()) {\n                for (let i = 0; i < this.#nodesGrabbed.Count(); i++) {\n                    const node = this.#nodes[this.#nodesGrabbed.At(i)];\n                    if (node.locked()) {\n                        continue;\n                    }\n                    node.translate(scaledDelta);\n                    nodeMoved = true;\n                }\n            }\n        });\n\n        if (nodeMoved) {\n            return true;\n        }\n        return this.#interactingWithConnection() || this.#interactingWithWidget() || this.#boxSelect;\n    }\n\n    clearNodeInputConnection(node: FlowNode, index: number): void {\n        const port = node.inputPort(index);\n        for (let i = this.#connections.length - 1; i >= 0; i--) {\n            if (this.#connections[i].inPort() === port) {\n                this.#removeConnection(this.#connections[i], true);\n            }\n        }\n    }\n\n    clickEnd(): void {\n\n        for (let i = 0; i < this.#nodesGrabbed.Count(); i++) {\n            const node = this.#nodes[this.#nodesGrabbed.At(i)];\n            node.raiseDragStoppedEvent();\n        }\n        this.#nodesGrabbed.Clear();\n\n        if (this.#boxSelect) {\n            for (let i = 0; i < this.#boxSelectionNodes.Count(); i++) {\n                this.#selectNode(this.#nodes[this.#boxSelectionNodes.At(i)], false);\n            }\n\n            this.#boxSelectionNodes.Clear();\n            this.#boxSelect = false;\n        }\n\n        if (this.#widgetCurrentlyClicking !== null) {\n            this.#widgetCurrentlyClicking.ClickEnd();\n            this.#widgetCurrentlyClicking = null;\n        }\n\n        if (this.#connectionSelected === null) {\n            return;\n        }\n\n        if (this.#portHovering === null) {\n            this.#clearCurrentlySelectedConnection();\n            return;\n        }\n\n        const port = this.#portHovering.Port;\n        const conn = this.#connectionSelected;\n\n        // If the port we're hovering is the one we started the connection \n        // with...\n        if (port === conn.inPort() || port === conn.outPort()) {\n            this.#clearCurrentlySelectedConnection();\n            return;\n        }\n\n        // If the port we're hoving is input, and also we started the \n        // connection with an input, we can't do anything. We can't connect\n        // input to input\n        if (this.#portHovering.InputPort && conn.inPort() !== null) {\n            this.#clearCurrentlySelectedConnection();\n            return;\n        }\n\n        // Same with out. Can't connect output to output\n        if (!this.#portHovering.InputPort && conn.outPort() !== null) {\n            this.#clearCurrentlySelectedConnection();\n            return;\n        }\n\n        // Different types, can't connect\n        if (this.#portHovering.InputPort && this.#portHovering.Port.getDataType() !== conn.outPort()?.getDataType()) {\n            this.#clearCurrentlySelectedConnection();\n            return;\n        }\n\n        // Different types, can't connect\n        if (!this.#portHovering.InputPort && this.#portHovering.Port.getDataType() !== conn.inPort()?.getDataType()) {\n            this.#clearCurrentlySelectedConnection();\n            return;\n        }\n\n        // Ight. Let's make the connection.\n        if (this.#portHovering.InputPort) {\n            let replace = false;\n            const inputPort = this.#portHovering.Node.inputPort(this.#portHovering.Index);\n            if (this.#portHovering.Port.getPortType() !== PortType.InputArray && inputPort.connections().length > 0) {\n                replace = true;\n            }\n\n            if (replace) {\n                // Remove input port's connection's output\n                inputPort.connections()[0].clearOutput();\n\n                // Remove connection from this subsystem\n                this.#removeConnection(inputPort.connections()[0], false);\n            }\n            conn.setInput(this.#portHovering.Node, this.#portHovering.Index, replace);\n\n        } else {\n            conn.setOutput(this.#portHovering.Node, this.#portHovering.Index);\n        }\n\n        this.#connectionSelected = null;\n    }\n\n    connectNodes(nodeOut: FlowNode, outPort: number, nodeIn: FlowNode, inPort: number): Connection | undefined {\n        const outType = nodeOut.outputPort(outPort).getDataType();\n        const inType = nodeIn.inputPort(inPort).getDataType();\n        if (outType !== inType) {\n            console.error(\"can't connect nodes of different types\", outType, inType);\n            return;\n        }\n\n        // Check and make sure the nodes aren't already connected\n        const existingInputConnections = nodeIn.inputPort(inPort).connections();\n        for (let i = 0; i < existingInputConnections.length; i++) {\n            const connection = existingInputConnections[i];\n\n\n            if (connection.outNode() !== nodeOut) {\n                continue;\n            }\n\n            if (connection.outPort() !== nodeOut.outputPort(outPort)) {\n                continue;\n            }\n\n            // This kind of connection already *exists*. Let's not add a duplicate\n            return;\n        }\n\n        const connection = new Connection(\n            nodeIn, inPort,\n            nodeOut, outPort,\n            this.#idleConnectionRenderer,\n        );\n        this.#connections.push(connection);\n        return connection;\n    }\n\n    getNodes(): Array<FlowNode> {\n        return this.#nodes;\n    }\n\n    /**\n     * Returns all nodes who are connected to the inputs of the \n     * node in question\n     * \n     * @param nodeIndex index of the node to examine inputs to\n     */\n    connectedInputsNodeReferencesByIndex(nodeIndex: number): Array<FlowNode> {\n        return this.connectedInputsNodeReferences(this.#nodes[nodeIndex]);\n    }\n\n    connectedInputsNodeReferences(node: FlowNode): Array<FlowNode> {\n        const connections = new Array<FlowNode>();\n        for (let i = 0; i < this.#connections.length; i++) {\n            const connection = this.#connections[i];\n            if (node !== connection.inNode()) {\n                continue;\n            }\n\n            const outNode = connection.outNode();\n            if (outNode === null) {\n                continue;\n            }\n\n            connections.push(outNode);\n        }\n        return connections;\n    }\n\n    connectedOutputsNodeReferences(nodeIndex: number): Array<FlowNode> {\n        const node = this.#nodes[nodeIndex]\n        const connections = new Array<FlowNode>();\n        for (let i = 0; i < this.#connections.length; i++) {\n            const connection = this.#connections[i];\n            if (node !== connection.outNode()) {\n                continue;\n            }\n\n            const inNode = connection.inNode();\n            if (inNode === null) {\n                continue;\n            }\n\n            connections.push(inNode);\n        }\n        return connections;\n    }\n\n    addNode(node: FlowNode): void {\n        this.#nodes.push(node);\n        for (let i = 0; i < this.#registeredNodeAddedCallbacks.length; i++) {\n            const callback = this.#registeredNodeAddedCallbacks[i];\n            if (!callback) {\n                continue;\n            }\n            callback(node);\n        }\n    }\n\n    fileDrop(file: File): boolean {\n        if (this.#nodeHovering === -1) {\n            return false;\n        }\n        this.#nodes[this.#nodeHovering].dropFile(file);\n        return true;\n    }\n\n    #removeNodeConnections(nodeIndex: number): void {\n        if (nodeIndex >= this.#nodes.length || nodeIndex < 0) {\n            console.error(\"invalid node connection\");\n            return;\n        }\n        for (let i = this.#connections.length - 1; i >= 0; i--) {\n            if (this.#connections[i].referencesNode(this.#nodes[nodeIndex])) {\n                this.#removeConnectionByIndex(i, true);\n            }\n        }\n    }\n\n    #interactingWithNode(): boolean {\n        return this.#nodesGrabbed.Count() > 0;\n    }\n\n    #interactingWithConnection(): boolean {\n        return this.#connectionSelected !== null;\n    }\n\n    #interactingWithWidget(): boolean {\n        return this.#widgetCurrentlyClicking !== null;\n    }\n\n    removeNode(node: FlowNode): void {\n        for (let i = 0; i < this.#nodes.length; i++) {\n            if (this.#nodes[i] === node) {\n                this.#removeNodeByIndex(i);\n            }\n        }\n    }\n\n    #removeNodeByIndex(nodeIndex: number): void {\n        this.#removeNodeConnections(nodeIndex);\n        const node = this.#nodes[nodeIndex];\n        this.#nodes.splice(nodeIndex, 1);\n        for (let i = 0; i < this.#nodeRemovedCallbacks.length; i++) {\n            this.#nodeRemovedCallbacks[i](node);\n        }\n    }\n\n    #removeConnectionByIndex(index: number, clearPorts: boolean): void {\n        if (clearPorts) {\n            this.#connections[index].clearPorts();\n        }\n        this.#connections.splice(index, 1);\n    }\n\n    #removeConnection(connection: Connection, clearPorts: boolean): void {\n        const index = this.#connections.indexOf(connection);\n        if (index > -1) {\n            this.#removeConnectionByIndex(index, clearPorts);\n        } else {\n            console.error(\"no connection found to remove\");\n        }\n    }\n\n    organize(ctx: CanvasRenderingContext2D): void {\n        Organize(ctx, this);\n    }\n\n    #nodesSelected(): Array<number> {\n        const selected = new Array<number>();\n        for (let i = 0; i < this.#nodes.length; i++) {\n            if (this.#nodes[i].selected()) {\n                selected.push(i);\n            }\n        }\n        return selected;\n    }\n\n    #organizeSelected(ctx: CanvasRenderingContext2D): void {\n        Organize(ctx, this, this.#nodesSelected());\n    }\n\n    openContextMenu(ctx: CanvasRenderingContext2D, position: Vector2): ContextMenuConfig | null {\n\n        const organizeNodesSubMenu: ContextMenuConfig = {\n            name: \"Organize\",\n            group: nodeFlowGroup,\n            items: [\n                {\n                    name: \"All Nodes\",\n                    group: nodeFlowGroup,\n                    callback: () => {\n                        this.organize(ctx);\n                    }\n                }\n            ]\n        }\n\n        let config: ContextMenuConfig = {\n            items: [],\n            subMenus: [\n                organizeNodesSubMenu,\n                this.#nodeFactory.openMenu(this, position)\n            ]\n        }\n\n        if (this.#nodesSelected().length > 0) {\n            organizeNodesSubMenu.items?.push({\n                name: \"Selected Nodes\",\n                group: nodeFlowGroup,\n                callback: () => {\n                    this.#organizeSelected(ctx)\n                }\n            })\n        }\n\n        if (this.#nodeHovering > -1) {\n            const nodeToReview = this.#nodeHovering;\n            const nodeToReviewNode = this.#nodes[nodeToReview];\n\n            config.subMenus?.push({\n                group: nodeFlowGroup,\n                name: \"Select\",\n                items: [\n                    {\n                        name: \"Direct Connected Nodes\",\n                        group: nodeFlowGroup,\n                        callback: () => {\n                            this.#selectConnectedNodes(nodeToReview);\n                        }\n                    },\n                    {\n                        name: \"Input Nodes + Descendents\",\n                        group: nodeFlowGroup,\n                        callback: () => {\n                            this.#selectInputNodesAndDescendents(nodeToReviewNode);\n                        }\n                    },\n                ]\n            })\n\n            config.subMenus?.push({\n                group: nodeFlowGroup,\n                name: \"Delete\",\n                items: [\n                    {\n                        name: \"Node\",\n                        group: nodeFlowGroup,\n                        callback: () => {\n                            this.#removeNodeByIndex(nodeToReview);\n                        }\n                    },\n                    {\n                        name: \"Connections\",\n                        group: nodeFlowGroup,\n                        callback: () => {\n                            this.#removeNodeConnections(nodeToReview);\n                        }\n                    }\n                ]\n            })\n            config = CombineContextMenus(config, nodeToReviewNode.contextMenu());\n        }\n        return config;\n    }\n\n    #selectInputNodesAndDescendents(node: FlowNode): void {\n        if (node === undefined) {\n            return;\n        }\n        this.#selectNode(node, false);\n\n        const inputs = this.connectedInputsNodeReferences(node);\n        for (let i = 0; i < inputs.length; i++) {\n            this.#selectInputNodesAndDescendents(inputs[i]);\n        }\n    }\n\n    #selectConnectedNodes(nodeIndex: number): void {\n        const node = this.#nodes[nodeIndex];\n        if (node === undefined) {\n            return;\n        }\n        this.#selectNode(node, false);\n\n        const outputs = this.connectedOutputsNodeReferences(nodeIndex);\n        for (let i = 0; i < outputs.length; i++) {\n            this.#selectNode(outputs[i], false);\n        }\n\n        const inputs = this.connectedInputsNodeReferencesByIndex(nodeIndex);\n        for (let i = 0; i < inputs.length; i++) {\n            this.#selectNode(inputs[i], false);\n        }\n    }\n\n    #selectNodeByIndex(nodeIndex: number, unselectOthers: boolean): void {\n        this.#selectNode(this.#nodes[nodeIndex], unselectOthers);\n    }\n\n    #selectNode(node: FlowNode, unselectOthers: boolean): void {\n        node.select();\n\n        if (!unselectOthers) {\n            return;\n        }\n\n        for (let i = 0; i < this.#nodes.length; i++) {\n            if (node === this.#nodes[i]) {\n                continue\n            }\n            this.#nodes[i].unselect();\n        }\n    }\n\n    #clearCurrentlySelectedConnection(): void {\n        if (this.#connectionSelected === null) {\n            return;\n        }\n        this.#removeConnection(this.#connectionSelected, true);\n        this.#connectionSelected = null;\n    }\n\n    #renderConnections(ctx: CanvasRenderingContext2D, camera: Camera, mousePosition: Vector2 | undefined): void {\n        for (let i = 0; i < this.#connections.length; i++) {\n            let portMousedOver = false;\n            if (mousePosition !== undefined) {\n                portMousedOver = this.#connections[i].mouseOverPort(mousePosition) !== null;\n            }\n            this.#connections[i].render(ctx, camera.zoom, portMousedOver, mousePosition);\n        }\n    }\n\n    #renderNodes(ctx: CanvasRenderingContext2D, camera: Camera, mousePosition: Vector2 | undefined) {\n        this.#portHovering = null;\n        this.#widgetHovering = null;\n        this.#nodeHovering = -1;\n        this.#boxSelectionNodes.Clear();\n\n        const selectedBox_Screenspace = this.#boxSelectionScreenspaceBox(camera);\n\n        for (let i = 0; i < this.#nodes.length; i++) {\n            let state = NodeState.Idle;\n\n            if (mousePosition !== undefined && !this.#boxSelect) {\n                const intersection = this.#nodes[i].inBounds(ctx, camera, mousePosition);\n\n                if (intersection.Node !== undefined && intersection.PortIndex === undefined && intersection.Widget === undefined) {\n                    state = NodeState.MouseOver;\n                    this.#nodeHovering = i;\n                    this.#cursor = CursorStyle.Grab;\n                }\n\n                if (intersection.Widget !== undefined) {\n                    // console.log(i, this.#nodes[i].title(), \"widget\")\n                    this.#widgetHovering = intersection.Widget\n                    this.#cursor = CursorStyle.Pointer;\n                }\n\n                if (intersection.Port !== undefined && intersection.Node !== undefined && intersection.PortIndex !== undefined && intersection.PortIsInput !== undefined) {\n                    this.#portHovering = {\n                        Index: intersection.PortIndex,\n                        Node: intersection.Node,\n                        Port: intersection.Port,\n                        InputPort: intersection.PortIsInput\n                    };\n                }\n            } else if (this.#boxSelect) {\n                const nodeBounds = this.#nodes[i].calculateBounds(ctx, camera);\n\n                if (BoxIntersection(selectedBox_Screenspace, nodeBounds)) {\n                    state = NodeState.MouseOver;\n                    this.#boxSelectionNodes.Push(i);\n                }\n            }\n\n            // if (i === this.#nodeSelected) {\n            //     state = NodeState.Selected;\n            // }\n\n            if (this.#nodes[i].selected() && this.#nodesGrabbed.Count() > 0) {\n                state = NodeState.Grabbed;\n                this.#cursor = CursorStyle.Grabbing;\n            }\n\n            this.#nodes[i].render(ctx, camera, state, mousePosition, this.#postProcessPass);\n        }\n    }\n\n    #boxSelectionScreenspaceBox(camera: Camera): Box {\n        const box = { Position: Zero(), Size: Zero() }\n\n        camera.graphSpaceToScreenSpace(this.#boxSelectStart_graphSpace, box.Position);\n        camera.graphSpaceToScreenSpace(this.#boxSelectEnd_graphSpace, box.Size);\n\n        SubVector2(box.Size, box.Size, box.Position);\n\n        return box;\n    }\n\n    render(ctx: CanvasRenderingContext2D, camera: Camera, mousePosition: Vector2 | undefined): RenderResults | undefined {\n        this.#cursor = CursorStyle.Default;\n        TimeExecution(\"Render_Connections\", () => {\n            this.#renderConnections(ctx, camera, mousePosition);\n        })\n        TimeExecution(\"Render_Nodes\", () => {\n            this.#renderNodes(ctx, camera, mousePosition);\n        })\n\n        if (this.#boxSelect) {\n            const box = this.#boxSelectionScreenspaceBox(camera);\n            ctx.setLineDash([Theme.BoxSelect.LineDashLength]);\n            this.#boxSelectStyle.Draw(ctx, box, 1);\n            ctx.setLineDash([]);\n        }\n\n        return { cursorStyle: this.#cursor }\n    }\n\n}", "import { Popup } from \"../popup\";\n\ninterface FormValue {\n    name: string;\n\n    // https://html.spec.whatwg.org/multipage/input.html#dom-input-type\n    type: string;\n\n    startingValue: any;\n}\n\ninterface Config {\n    title: string;\n    form: Array<FormValue>;\n    onUpdate: (newValue: Array<any>) => void;\n    onCancel?: () => void;\n}\n\nexport function FormPopup(config: Config): Popup {\n    let input = new Array<HTMLInputElement | null>();\n\n    const setOption = \"Set\";\n    const cancelOption = \"Cancel\";\n\n    return new Popup({\n        title: config.title,\n        options: [setOption, cancelOption],\n        content: () => {\n            const container = document.createElement('div');\n            container.style.flexDirection = \"column\";\n            container.style.display = \"flex\";\n\n            for (let i = 0; i < config.form.length; i++) {\n                const title = document.createElement(\"h4\");\n                title.innerText = config.form[i].name;\n                container.append(title);\n\n                const ele = document.createElement('input');\n                ele.value = config.form[i].startingValue;\n                ele.type = config.form[i].type;\n                container.append(ele);\n                input.push(ele);\n                container.append(document.createElement(\"br\"));\n            }\n\n            return container;\n        },\n        onClose: (button: string | null): void => {\n            if (button !== setOption || input === null) {\n                if (config.onCancel) {\n                    config.onCancel();\n                }\n                return;\n            }\n\n            const values = new Array<any>();\n            for (let i = 0; i < config.form.length; i++) {\n                values[i] = input[i]?.value;\n            }\n            config.onUpdate(values);\n        },\n    });\n}\n", "import { Port, PortConfig, PortType } from \"./port\";\nimport { FontWeight, TextStyle, TextStyleConfig, TextStyleFallback } from \"./styles/text\";\nimport { Box, InBox } from \"./types/box\";\nimport { CopyVector2, Distance, ScaleVector, Vector2, Zero } from \"./types/vector2\";\nimport { Widget } from './widgets/widget';\nimport { List } from './types/list';\nimport { BoxStyle, BoxStyleConfig, BoxStyleWithFallback } from \"./styles/box\";\nimport { Text } from \"./types/text\";\nimport { GlobalWidgetFactory } from \"./widgets/factory\";\nimport { Theme } from \"./theme\";\nimport { TextAlign } from \"./styles/canvasTextAlign\";\nimport { TextBaseline } from \"./styles/canvasTextBaseline\";\nimport { CombineContextMenus, ContextMenuConfig, ContextMenuItemConfig } from \"./contextMenu\";\nimport { nodeFlowGroup } from \"./nodes/subsystem\";\nimport { SetStringPopup } from \"./popups/string\";\nimport { ButtonWidget } from \"./widgets/button\";\nimport { FormPopup } from \"./popups/form\";\nimport { NumberWidget } from \"./widgets/number\";\nimport { StringWidget } from \"./widgets/string\";\nimport { ToggleWidget } from \"./widgets/toggle\";\nimport { ColorWidget } from \"./widgets/color\";\nimport { SliderWidget } from \"./widgets/slider\";\nimport { ImageWidget } from \"./widgets/image\";\nimport { VectorPool } from \"./types/pool\";\nimport { Camera } from \"./camera\";\nimport { PassSubsystem } from \"./pass/subsystem\";\nimport { splitString, splitStringIntoLines } from \"./utils/string\";\nimport { Metadata } from './metadata';\n\nconst MINIMUM_NODE_WIDTH = 150;\n\ntype AnyPropertyChangeCallback = (propertyName: string, oldValue: any, newValue: any) => void\ntype PropertyChangeCallback = (oldValue: any, newValue: any) => void\ntype TitleChangeCallback = (node: FlowNode, oldTitle: string, newTitle: string) => void\ntype InfoChangeCallback = (node: FlowNode, oldInfo: string, newInfo: string) => void\n\n\nexport interface WidgetConfig {\n    type?: string,\n    config?: any\n}\n\nexport interface FlowNodeTitleConfig {\n    textStyle?: TextStyleConfig;\n    color?: string;\n    padding?: number;\n}\n\nexport interface FlowNodeStyle {\n    title?: FlowNodeTitleConfig;\n    idle?: BoxStyleConfig;\n    mouseOver?: BoxStyleConfig;\n    grabbed?: BoxStyleConfig;\n    selected?: BoxStyleConfig;\n    portText?: TextStyleConfig;\n}\n\nexport enum MessageType {\n    Info = \"info\",\n    Warning = \"warning\",\n    Error = \"error\"\n};\n\nfunction MessageTypeColor(messageType: MessageType): string {\n    switch (messageType) {\n        case MessageType.Info:\n            return Theme.Node.Message.InfoColor;\n\n        case MessageType.Warning:\n            return Theme.Node.Message.WarnColor;\n\n        case MessageType.Error:\n            return Theme.Node.Message.ErrorColor;\n\n        default:\n            throw new Error(`unrecognized message type ${messageType}`)\n    }\n}\n\nexport interface NodeMessageConfig {\n    message: string;\n    type?: MessageType;\n    alwaysShow?: boolean;\n    color?: string;\n}\n\nexport interface FlowNodeConfig {\n    position?: Vector2;\n    title?: string;\n    subTitle?: string;\n    info?: string;\n    messages?: Array<NodeMessageConfig>\n    locked?: boolean;\n    data?: Metadata;\n    contextMenu?: ContextMenuConfig;\n    metadata?: any;\n\n    canEditTitle?: boolean;\n    canEditInfo?: boolean;\n    canEditPorts?: boolean;\n\n    // Ports\n    inputs?: Array<PortConfig>;\n    outputs?: Array<PortConfig>;\n\n    // Callbacks\n    onGrab?: () => void;\n    onRelease?: () => void;\n    onSelect?: () => void;\n    onUnselect?: () => void;\n    onDragStop?: (FlowNode: FlowNode) => void;\n    onFileDrop?: (file: File) => void;\n    onTitleChange?: TitleChangeCallback;\n    onInfoChange?: InfoChangeCallback;\n\n    // Widgets\n    widgets?: Array<WidgetConfig>;\n\n    // Styling\n    style?: FlowNodeStyle;\n}\n\nexport enum NodeState {\n    Idle,\n    MouseOver,\n    Grabbed\n}\n\nexport interface NodeIntersection {\n    Node?: FlowNode\n\n    // Port\n    Port?: Port\n    PortIndex?: number\n    PortIsInput?: boolean\n\n    // Widget\n    Widget?: Widget\n    WidgetIndex?: number\n\n}\n\nclass MessageRenderer {\n\n    #text: Text;\n\n    #alwaysShow: boolean;\n\n    constructor(config: NodeMessageConfig) {\n        this.#alwaysShow = config.alwaysShow ? config.alwaysShow : false;\n        this.#text = new Text(config.message,\n            {\n                color: config.color ? config.color : MessageTypeColor(config.type ? config.type : MessageType.Info),\n            },\n            {\n                LineSpacing: 2.5,\n                MaxWidth: 200\n            }\n        );\n    }\n\n    render(ctx: CanvasRenderingContext2D, scale: number, position: Vector2, hovering: boolean): number {\n        if (!this.#alwaysShow && !hovering) {\n            return 0;\n        }\n        ctx.textAlign = TextAlign.Center;\n        this.#text.render(ctx, scale, position);\n        return this.#text.height(ctx) * scale;\n    }\n}\n\nexport class FlowNode {\n\n    #position: Vector2;\n\n    #title: Text;\n\n    #subTitle: Text;\n\n    #infoSymbol: Text;\n\n    #infoText: string;\n\n    #messages: Array<MessageRenderer>\n\n    #input: Array<Port>;\n\n    #output: Array<Port>;\n\n    #widgets: Array<Widget>;\n\n    #locked: boolean;\n\n    #canEditTitle: boolean;\n\n    #canEditInfo: boolean;\n\n    #canEditPorts: boolean;\n\n    #contextMenu: ContextMenuConfig | null;\n\n    #metadata: any;\n\n    // Callbacks\n\n    #onSelect: Array<() => void>;\n\n    #onUnselect: Array<() => void>;\n\n    #onFiledrop: Array<(file: File) => void>;\n\n    #onDragStop: Array<(node: FlowNode) => void>;\n\n    #titleChangeCallback: Array<TitleChangeCallback>;\n\n    #infoChangeCallback: Array<InfoChangeCallback>;\n\n    // Styling ================================================================\n\n    #titleColor: string;\n\n    #selectedStyle: BoxStyle;\n\n    #stateStyles: Map<NodeState, BoxStyle>;\n\n    #padding: number;\n\n    #portTextStyle: TextStyle;\n\n    #elementSpacing: number;\n\n    // Runtime ================================================================\n\n    #selected: boolean;\n\n    #inputPortPositions: List<Box>;\n\n    #outputPortPositions: List<Box>;\n\n    #widgetPositions: List<Box>;\n\n    #data: Metadata;\n\n    #registeredAnyPropertyChangeCallbacks: Array<AnyPropertyChangeCallback>;\n\n    #registeredPropertyChangeCallbacks: Map<string, Array<PropertyChangeCallback>>;\n\n    constructor(config?: FlowNodeConfig) {\n        this.#input = new Array<Port>();\n        this.#output = new Array<Port>();\n        this.#widgets = new Array<Widget>();\n        this.#inputPortPositions = new List<Box>();\n        this.#outputPortPositions = new List<Box>();\n        this.#widgetPositions = new List<Box>();\n        this.#elementSpacing = 15;\n        this.#locked = config?.locked === undefined ? false : config.locked;\n        this.#data = config?.data === undefined ? {} : config?.data;\n        this.#registeredPropertyChangeCallbacks = new Map<string, Array<PropertyChangeCallback>>();\n        this.#registeredAnyPropertyChangeCallbacks = new Array<AnyPropertyChangeCallback>();\n        this.#canEditPorts = config?.canEditPorts === undefined ? false : config.canEditPorts;\n        this.#canEditTitle = config?.canEditTitle === undefined ? false : config.canEditTitle;\n        this.#canEditInfo = config?.canEditInfo === undefined ? false : config.canEditInfo;\n        this.#contextMenu = config?.contextMenu === undefined ? null : config.contextMenu;\n        this.#metadata = config?.metadata;\n\n        this.#messages = [];\n        if (config?.messages) {\n            for (let i = 0; i < config.messages.length; i++) {\n                const message = config.messages[i];\n                this.#messages.push(new MessageRenderer(message));\n            }\n        }\n\n        this.#selected = false;\n        this.#onSelect = new Array<() => void>();\n        this.#onUnselect = new Array<() => void>();\n        this.#onFiledrop = new Array<(file: File) => void>();\n        this.#onDragStop = new Array<() => void>();\n        this.#titleChangeCallback = new Array<TitleChangeCallback>();\n        this.#infoChangeCallback = new Array<InfoChangeCallback>();\n\n        if (config?.onSelect) {\n            this.#onSelect.push(config?.onSelect);\n        }\n\n        if (config?.onUnselect) {\n            this.#onUnselect.push(config?.onUnselect);\n        }\n\n        if (config?.onFileDrop) {\n            this.#onFiledrop.push(config?.onFileDrop);\n        }\n\n        if (config?.onDragStop) {\n            this.#onDragStop.push(config.onDragStop);\n        }\n\n        if (config?.onTitleChange) {\n            this.#titleChangeCallback.push(config.onTitleChange);\n        }\n\n        if (config?.onInfoChange) {\n            this.#infoChangeCallback.push(config.onInfoChange);\n        }\n\n        this.#position = config?.position === undefined ? { x: 0, y: 0 } : config.position;\n        this.#title = new Text(\n            config?.title === undefined ? \"\" : config.title,\n            TextStyleFallback(config?.style?.title?.textStyle, {\n                size: 16,\n                weight: FontWeight.Bold,\n                color: Theme.Node.FontColor\n            })\n        );\n\n        this.#subTitle = new Text(\n            config?.subTitle === undefined ? \"\" : config.subTitle,\n            TextStyleFallback(config?.style?.title?.textStyle, {\n                size: 10,\n                weight: FontWeight.Bold,\n                color: Theme.Node.FontColor\n            })\n        );\n\n        this.#infoSymbol = new Text(\n            \"i\",\n            {\n                size: 13,\n                weight: FontWeight.Bold,\n                color: Theme.Node.FontColor\n            }\n        );\n        this.#infoText = config?.info ? config?.info : \"\";\n\n        this.#titleColor = config?.style?.title?.color === undefined ? \"#154050\" : config?.style?.title?.color;\n\n        this.#padding = config?.style?.title?.padding === undefined ? 15 : config?.style?.title?.padding;\n\n        this.#stateStyles = new Map<NodeState, BoxStyle>();\n        this.#stateStyles.set(NodeState.Idle, new BoxStyle(BoxStyleWithFallback(config?.style?.idle, {\n            border: { color: Theme.Node.Border.Idle, size: 1 },\n            radius: Theme.Node.BorderRadius,\n            color: Theme.Node.BackgroundColor,\n        })));\n        this.#stateStyles.set(NodeState.MouseOver, new BoxStyle(BoxStyleWithFallback(config?.style?.mouseOver, {\n            border: { color: Theme.Node.Border.MouseOver, size: 1.1, },\n            radius: Theme.Node.BorderRadius,\n            color: Theme.Node.BackgroundColor,\n        })));\n        this.#stateStyles.set(NodeState.Grabbed, new BoxStyle(BoxStyleWithFallback(config?.style?.grabbed, {\n            border: { color: Theme.Node.Border.Grabbed, size: 2, },\n            radius: Theme.Node.BorderRadius,\n            color: Theme.Node.BackgroundColor,\n        })));\n\n        this.#selectedStyle = new BoxStyle(BoxStyleWithFallback(config?.style?.selected, {\n            border: { color: Theme.Node.Border.Selected, size: 1, },\n            radius: Theme.Node.BorderRadius,\n            color: Theme.Node.BackgroundColor,\n        }));\n\n        this.#portTextStyle = new TextStyle({\n            size: config?.style?.portText?.size === undefined ? 14 : config?.style?.portText?.size,\n            color: config?.style?.portText?.color === undefined ? Theme.Node.Port.FontColor : config?.style?.portText?.color,\n            font: config?.style?.portText?.font,\n            weight: config?.style?.portText?.weight,\n        });\n\n        if (config?.inputs !== undefined) {\n            for (let i = 0; i < config.inputs.length; i++) {\n                this.addInput(config.inputs[i]);\n            }\n        }\n\n        if (config?.outputs !== undefined) {\n            for (let i = 0; i < config.outputs.length; i++) {\n                this.addOutput(config.outputs[i]);\n            }\n        }\n\n        if (config?.widgets !== undefined) {\n            for (let i = 0; i < config.widgets.length; i++) {\n                const widget = config.widgets[i];\n                if (widget.type === undefined) {\n                    continue;\n                }\n                this.addWidget(GlobalWidgetFactory.create(this, widget.type, widget.config))\n            }\n        }\n    }\n\n    public metadata(): any {\n        return this.#metadata;\n    }\n\n    public selected(): boolean {\n        return this.#selected;\n    }\n\n    public select(): void {\n        if (this.#selected) {\n            return;\n        }\n        this.#selected = true;\n        for (let i = 0; i < this.#onSelect.length; i++) {\n            this.#onSelect[i]();\n        }\n    }\n\n    public raiseDragStoppedEvent() {\n        for (let i = 0; i < this.#onDragStop.length; i++) {\n            this.#onDragStop[i](this);\n        }\n    }\n\n    public addTitleChangeListener(callback: TitleChangeCallback): void {\n        if (callback === undefined || callback === null) {\n        }\n        this.#titleChangeCallback.push(callback);\n    }\n\n    public addInfoChangeListener(callback: InfoChangeCallback): void {\n        if (callback === undefined || callback === null) {\n        }\n        this.#infoChangeCallback.push(callback);\n    }\n\n\n    public addDragStoppedListener(callback: (node: FlowNode) => void): void {\n        if (callback === undefined || callback === null) {\n        }\n        this.#onDragStop.push(callback);\n    }\n\n    public addAnyPropertyChangeListener(callback: AnyPropertyChangeCallback): void {\n        if (callback === undefined || callback === null) {\n        }\n        this.#registeredAnyPropertyChangeCallbacks.push(callback);\n    }\n\n    public addPropertyChangeListener(name: string, callback: PropertyChangeCallback): void {\n        if (!this.#registeredPropertyChangeCallbacks.has(name)) {\n            this.#registeredPropertyChangeCallbacks.set(name, []);\n        }\n\n        const callbacks = this.#registeredPropertyChangeCallbacks.get(name);\n        if (callbacks === undefined) {\n            return;\n        }\n        callbacks.push(callback);\n    }\n\n    public setProperty(name: string, value: any): void {\n        const oldValue = this.#data[name];\n        if (oldValue === value) {\n            return;\n        }\n\n        this.#data[name] = value;\n\n        for (let i = 0; i < this.#registeredAnyPropertyChangeCallbacks.length; i++) {\n            this.#registeredAnyPropertyChangeCallbacks[i](name, oldValue, value);\n        }\n\n        const callbacks = this.#registeredPropertyChangeCallbacks.get(name);\n        if (callbacks === undefined) {\n            return;\n        }\n\n        for (let i = 0; i < callbacks.length; i++) {\n            callbacks[i](oldValue, value);\n        }\n    }\n\n    public getProperty(name: string): any {\n        return this.#data[name];\n    }\n\n    #popupNodeTitleSelection(): void {\n        SetStringPopup({\n            title: \"Set Node Title\",\n            startingValue: this.title(),\n            onUpdate: (value: string): void => {\n                this.setTitle(value);\n            },\n        }).Show();\n    }\n\n    #popupNodeInfoSelection(): void {\n        SetStringPopup({\n            title: \"Set Node Info\",\n            startingValue: this.#infoText,\n            onUpdate: (value: string): void => {\n                this.setInfo(value);\n            },\n        }).Show();\n    }\n\n    #popupNewButtonWidget(): void {\n        SetStringPopup({\n            title: \"New Button Widget Text\",\n            startingValue: \"My Button\",\n            onUpdate: (value: string): void => {\n                this.addWidget(new ButtonWidget({\n                    text: value\n                }));\n            },\n        }).Show()\n    }\n\n    #widgetSubmenu(): ContextMenuConfig {\n        return {\n            name: \"Widget\",\n            items: [\n                {\n                    name: \"Button\",\n                    callback: this.#popupNewButtonWidget.bind(this),\n                },\n                {\n                    name: \"Number\",\n                    callback: () => {\n                        this.addWidget(new NumberWidget(this))\n                    }\n                },\n                {\n                    name: \"Color\",\n                    callback: () => {\n                        this.addWidget(new ColorWidget(this))\n                    }\n                },\n                {\n                    name: \"Slider\",\n                    callback: () => {\n                        FormPopup({\n                            title: \"New Slider\",\n                            form: [\n                                {\n                                    name: \"min\",\n                                    type: \"number\",\n                                    startingValue: 0\n                                },\n                                {\n                                    name: \"max\",\n                                    type: \"number\",\n                                    startingValue: 100\n                                }\n                            ],\n                            onUpdate: (data: Array<any>) => {\n                                this.addWidget(new SliderWidget(this, {\n                                    min: data[0],\n                                    max: data[1],\n                                }));\n                            }\n                        }).Show();\n                    }\n                },\n                {\n                    name: \"String\",\n                    callback: () => {\n                        this.addWidget(new StringWidget(this))\n                    }\n                },\n                {\n                    name: \"Toggle\",\n                    callback: () => {\n                        this.addWidget(new ToggleWidget(this))\n                    }\n                },\n                {\n                    name: \"Image\",\n                    callback: () => {\n                        FormPopup({\n                            title: \"New Image\",\n                            form: [\n                                {\n                                    name: \"URL\",\n                                    type: \"text\",\n                                    startingValue: \"https://pbs.twimg.com/media/GYabtu6bsAA7m99?format=jpg&name=medium\"\n                                },\n                                {\n                                    name: \"Max Width\",\n                                    type: \"number\",\n                                    startingValue: MINIMUM_NODE_WIDTH\n                                },\n                                {\n                                    name: \"Max Height\",\n                                    type: \"number\",\n                                    startingValue: MINIMUM_NODE_WIDTH\n                                }\n                            ],\n                            onUpdate: (data: Array<any>) => {\n                                this.addWidget(new ImageWidget({\n                                    image: data[0],\n                                    maxWidth: data[1],\n                                    maxHeight: data[2],\n                                }));\n                            }\n                        }).Show();\n                    }\n                }\n            ]\n        };\n    }\n\n    public contextMenu(): ContextMenuConfig {\n        let config: ContextMenuConfig = {\n            group: nodeFlowGroup,\n            items: [\n                // {\n                //     name: \"Debug\",\n                //     callback: () => {\n                //         console.log(this);\n                //     }\n                // }\n            ],\n            subMenus: [],\n        }\n\n        if (this.canEditPorts() || this.canEditTitle() || this.#canEditInfo) {\n\n            const items = new Array<ContextMenuItemConfig>();\n            if (this.canEditTitle()) {\n                items.push({\n                    name: \"Title\",\n                    callback: () => {\n                        this.#popupNodeTitleSelection();\n                    }\n                })\n            }\n\n            if (this.#canEditInfo) {\n                items.push({\n                    name: \"Info\",\n                    callback: () => {\n                        this.#popupNodeInfoSelection();\n                    }\n                })\n            }\n\n            const submenus = new Array<ContextMenuConfig>();\n            if (this.canEditPorts()) {\n                submenus.push({\n                    name: \"Add\",\n                    items: [\n                        {\n                            name: \"Input\",\n                            callback: () => {\n                                FormPopup({\n                                    title: \"New Input\",\n                                    form: [\n                                        {\n                                            name: \"name\",\n                                            type: \"text\",\n                                            startingValue: \"input\"\n                                        },\n                                        {\n                                            name: \"type\",\n                                            type: \"text\",\n                                            startingValue: \"string\"\n                                        }\n                                    ],\n                                    onUpdate: (data: Array<any>) => {\n                                        this.addInput({\n                                            name: data[0],\n                                            type: data[1]\n                                        })\n                                    }\n                                }).Show();\n                            }\n                        },\n                        {\n                            name: \"Output\",\n                            callback: () => {\n                                FormPopup({\n                                    title: \"New Output\",\n                                    form: [\n                                        {\n                                            name: \"name\",\n                                            type: \"text\",\n                                            startingValue: \"output\"\n                                        },\n                                        {\n                                            name: \"type\",\n                                            type: \"text\",\n                                            startingValue: \"string\"\n                                        }\n                                    ],\n                                    onUpdate: (data: Array<any>) => {\n                                        this.addOutput({\n                                            name: data[0],\n                                            type: data[1]\n                                        })\n                                    }\n                                }).Show();\n                            }\n                        },\n                    ],\n                    subMenus: [\n                        this.#widgetSubmenu(),\n                    ]\n                });\n            }\n\n            config.subMenus?.push({\n                group: nodeFlowGroup,\n                name: \"Edit\",\n                items: items,\n                subMenus: submenus,\n            })\n        }\n\n        if (this.locked()) {\n            config.items?.push({\n                name: \"Unlock Node Position\",\n                group: nodeFlowGroup,\n                callback: this.unlock.bind(this),\n            });\n        } else {\n            config.items?.push({\n                name: \"Lock Node Position\",\n                group: nodeFlowGroup,\n                callback: this.lock.bind(this),\n            })\n        }\n\n        if (this.#contextMenu !== null) {\n            config = CombineContextMenus(config, this.#contextMenu)\n        }\n\n        return config;\n    }\n\n    public unselect(): void {\n        if (!this.#selected) {\n            return;\n        }\n        this.#selected = false;\n        for (let i = 0; i < this.#onUnselect.length; i++) {\n            this.#onUnselect[i]();\n        }\n    }\n\n    public addUnselectListener(callback: () => void): void {\n        this.#onUnselect.push(callback);\n    }\n\n    public addSelectListener(callback: () => void): void {\n        this.#onSelect.push(callback);\n    }\n\n    public dropFile(file: File): void {\n        for (let i = 0; i < this.#onFiledrop.length; i++) {\n            this.#onFiledrop[i](file);\n        }\n    }\n\n    public addFileDropListener(callback: (file: File) => void): void {\n        this.#onFiledrop.push(callback);\n    }\n\n    public locked(): boolean {\n        return this.#locked;\n    }\n\n    public lock(): void {\n        this.#locked = true;\n    }\n\n    public unlock(): void {\n        this.#locked = false;\n    }\n\n    public setPosition(position: Vector2): void {\n        CopyVector2(this.#position, position);\n    }\n\n    public getPosition(): Vector2 {\n        return this.#position;\n    }\n\n    // #measureTitleText(ctx: CanvasRenderingContext2D, scale: number): Vector2 {\n    //     return this.#titleTextStyle.measure(ctx, scale, this.#title);\n    // }\n\n    public calculateBounds(ctx: CanvasRenderingContext2D, camera: Camera): Box {\n        const tempMeasurement = Zero();\n\n        const doublePadding = this.#padding * 2;\n\n        const screenSpacePosition = Zero();\n        camera.graphSpaceToScreenSpace(this.#position, screenSpacePosition);\n\n        const size = Zero();\n        this.#title.size(ctx, 1, size);\n\n        const subtitleSize = Zero();\n        this.#subTitle.size(ctx, 1, subtitleSize);\n        size.x = Math.max(size.x, subtitleSize.x);\n\n        if (this.#infoText !== \"\") {\n            size.x += (size.y * 4);\n        }\n\n        size.x += doublePadding;\n        size.y += doublePadding + (this.#elementSpacing * this.#input.length);\n\n        for (let i = 0; i < this.#input.length; i++) {\n            const port = this.#input[i];\n            this.#portTextStyle.measure(ctx, 1, port.getDisplayName(), tempMeasurement);\n            size.y += tempMeasurement.y;\n            size.x = Math.max(size.x, tempMeasurement.x + doublePadding)\n        }\n\n        size.y += (this.#elementSpacing * this.#output.length);\n\n        for (let i = 0; i < this.#output.length; i++) {\n            const port = this.#output[i];\n            this.#portTextStyle.measure(ctx, 1, port.getDisplayName(), tempMeasurement);\n            size.y += tempMeasurement.y;\n            size.x = Math.max(size.x, tempMeasurement.x + doublePadding)\n        }\n\n        size.y += (this.#elementSpacing * this.#widgets.length);\n        for (let i = 0; i < this.#widgets.length; i++) {\n            const element = this.#widgets[i];\n            const eleSize = element.Size();\n            size.y += eleSize.y\n            size.x = Math.max(size.x, (eleSize.x) + doublePadding)\n        }\n\n        // Add some padding at the end!\n        size.y += this.#elementSpacing\n\n        size.x = Math.max(size.x, MINIMUM_NODE_WIDTH)\n        ScaleVector(size, camera.zoom);\n\n        return {\n            Position: screenSpacePosition,\n            Size: size,\n        }\n    }\n\n    addInput(config: PortConfig): Port {\n        const port = new Port(this, config.array ? PortType.InputArray : PortType.Input, config);\n        this.#input.push(port);\n        return port;\n    }\n\n    addOutput(config: PortConfig): Port {\n        const port = new Port(this, PortType.Output, config);\n        this.#output.push(port);\n        return port;\n    }\n\n    addWidget(widget: Widget): void {\n        this.#widgets.push(widget);\n    }\n\n    getWidget(index: number): Widget {\n        return this.#widgets[index];\n    }\n\n    widgetCount(): number {\n        return this.#widgets.length;\n    }\n\n    translate(delta: Vector2): void {\n        this.#position.x += delta.x;\n        this.#position.y += delta.y;\n    }\n\n    inBounds(ctx: CanvasRenderingContext2D, camera: Camera, position: Vector2): NodeIntersection {\n        var intersection: NodeIntersection = {}\n\n        const box = this.calculateBounds(ctx, camera);\n        if (InBox(box, position)) {\n            intersection.Node = this;\n        }\n\n        for (let i = 0; i < this.#inputPortPositions.Count(); i++) {\n            if (InBox(this.#inputPortPositions.At(i), position)) {\n                intersection.Node = this;\n                intersection.PortIndex = i;\n                intersection.PortIsInput = true;\n                intersection.Port = this.#input[i]\n            }\n        }\n\n        for (let i = 0; i < this.#outputPortPositions.Count(); i++) {\n            if (InBox(this.#outputPortPositions.At(i), position)) {\n                intersection.Node = this;\n                intersection.PortIndex = i;\n                intersection.PortIsInput = false;\n                intersection.Port = this.#output[i];\n            }\n        }\n\n        for (let i = 0; i < this.#widgetPositions.Count(); i++) {\n            if (InBox(this.#widgetPositions.At(i), position)) {\n                intersection.Node = this;\n                intersection.WidgetIndex = i;\n                intersection.Widget = this.#widgets[i];\n            }\n        }\n\n        return intersection;\n    }\n\n    canEditTitle(): boolean {\n        return this.#canEditTitle;\n    }\n\n    canEditPorts(): boolean {\n        return this.#canEditPorts;\n    }\n\n    title(): string {\n        return this.#title.get();\n    }\n\n    setTitle(newTitle: string): void {\n        if (!this.#canEditTitle) {\n            console.warn(\"setTitle instruction ignored, as node has been marked un-editable\");\n            return;\n        }\n\n        let cleaned = newTitle;\n        if (cleaned === null || cleaned === undefined) {\n            cleaned = \"\";\n        }\n\n        const old = this.title();\n        if (cleaned === old) {\n            return;\n        }\n\n        this.#title.set(cleaned);\n\n        for (let i = 0; i < this.#titleChangeCallback.length; i++) {\n            const callback = this.#titleChangeCallback[i];\n            callback(this, old, cleaned);\n        }\n    }\n\n    setInfo(newInfo: string): void {\n        if (!this.#canEditInfo) {\n            console.warn(\"setInfo instruction ignored, as node has been marked un-editable\");\n        }\n\n        let cleaned = newInfo;\n        if (cleaned === null || cleaned === undefined) {\n            cleaned = \"\";\n        }\n\n        if (cleaned === this.#infoText) {\n            return;\n        }\n\n        const old = this.#infoText;\n        this.#infoText = cleaned;\n\n        for (let i = 0; i < this.#infoChangeCallback.length; i++) {\n            const callback = this.#infoChangeCallback[i];\n            callback(this, old, cleaned);\n        }\n    }\n\n    inputPortPosition(index: number): Box {\n        return this.#inputPortPositions.At(index);\n    }\n\n    inputPort(index: number): Port {\n        return this.#input[index];\n    }\n\n    inputs(): number {\n        return this.#input.length;\n    }\n\n    outputPortPosition(index: number): Box {\n        return this.#outputPortPositions.At(index);\n    }\n\n    outputPort(index: number): Port {\n        return this.#output[index];\n    }\n\n    outputs(): number {\n        return this.#output.length;\n    }\n\n    #calculateStyle(state: NodeState): BoxStyle {\n        // Let the node being selected override the idle style\n        if (this.#selected && state === NodeState.Idle) {\n            return this.#selectedStyle;\n        }\n\n        let boxStyle = this.#stateStyles.get(state);\n        if (boxStyle === undefined) {\n            throw new Error(\"no registered border style for state: \" + state)\n        }\n        return boxStyle;\n    }\n\n    addMessage(message: NodeMessageConfig): void {\n        this.#messages.push(new MessageRenderer(message));\n    }\n\n    clearMessages(): void {\n        this.#messages = [];\n    }\n\n    render(ctx: CanvasRenderingContext2D, camera: Camera, state: NodeState, mousePosition: Vector2 | undefined, postProcess: PassSubsystem): void {\n        VectorPool.run(() => {\n            const tempMeasurement = VectorPool.get();\n\n            this.#inputPortPositions.Clear();\n            this.#outputPortPositions.Clear();\n            this.#widgetPositions.Clear();\n            const scaledPadding = this.#padding * camera.zoom;\n            const scaledElementSpacing = this.#elementSpacing * camera.zoom;\n\n            const nodeBounds = this.calculateBounds(ctx, camera);\n\n            // Background\n            const nodeStyle = this.#calculateStyle(state);\n            nodeStyle.Draw(ctx, nodeBounds, camera.zoom);\n\n            // Title\n            const borderSize = nodeStyle.borderSize();\n            ctx.textAlign = TextAlign.Center;\n            ctx.textBaseline = TextBaseline.Middle;\n\n            const titleSize = VectorPool.get();\n            this.#title.size(ctx, camera.zoom, titleSize);\n\n            const subtitleSize = VectorPool.get();\n            this.#subTitle.size(ctx, camera.zoom, subtitleSize);\n\n            const titleBoxSize = VectorPool.get();\n            titleBoxSize.x = nodeBounds.Size.x;\n            titleBoxSize.y = titleSize.y + (scaledPadding * 2);\n\n            ctx.fillStyle = this.#titleColor;\n            ctx.beginPath();\n            const titleX = nodeBounds.Position.x + (borderSize * camera.zoom * 0.5)\n            const titleY = nodeBounds.Position.y + (borderSize * camera.zoom * 0.5)\n            const titleWidth = titleBoxSize.x - (borderSize * camera.zoom);\n            const titleHeight = titleBoxSize.y - (borderSize * camera.zoom * 0.5);\n            ctx.roundRect(\n                titleX, titleY, titleWidth, titleHeight,\n                [nodeStyle.radius() * camera.zoom, nodeStyle.radius() * camera.zoom, 0, 0]\n            );\n            ctx.fill();\n            // ctx.stroke();\n\n            const titlePosition = VectorPool.get();\n            titlePosition.x = nodeBounds.Position.x + (nodeBounds.Size.x / 2)\n            titlePosition.y = nodeBounds.Position.y + scaledPadding + (titleSize.y / 2)\n\n            if (this.#subTitle.get() !== \"\") {\n                const subtitlePosition = VectorPool.get();\n                CopyVector2(subtitlePosition, titlePosition);\n\n                // TODO: I'm fudging a bunch of numbers ot make it fit nicely \n                // together. \n                // \n                // Need to come up with like, proper logic about how we ensure \n                // title and subtitle fit together\n                subtitlePosition.y -= titleSize.y / 1.5;\n                titlePosition.y += scaledPadding / 2\n\n                this.#subTitle.render(ctx, camera.zoom, subtitlePosition);\n            }\n\n            this.#title.render(ctx, camera.zoom, titlePosition);\n\n            // Info symbol\n            if (this.#infoText !== \"\") {\n                const infoRadius = titleHeight * .25;\n                const centerX = titleX + titleWidth - (titleHeight * .25) - infoRadius;\n                const centerY = titleY + (titleHeight * .25) + infoRadius;\n\n                const infoPosition = VectorPool.get();\n                infoPosition.x = centerX;\n                infoPosition.y = centerY + (titleHeight * .025);\n\n                let infoLineThickness = 1.5 * camera.zoom;\n\n                if (mousePosition && Distance(infoPosition, mousePosition) <= infoRadius) {\n                    infoLineThickness *= 1.5;\n\n                    // This is a slightly expensive function if we're not \n                    // caching, but it only executes while we're mousing over \n                    // the info symbol, so I'm not particularly obligated to\n                    // optimize it. \n                    //\n                    // If you're just bored, def cache the split string method,\n                    // and figure out a system to recalculate as a node has its\n                    // title, port, or widgets change.\n                    //\n                    // Should probably break out the lambda into a proper \n                    // function as well. I think as it is, we're creating a new\n                    // lambda function per frame?\n                    postProcess.queue(() => {\n                        this.#infoSymbol.style().setupStyle(ctx, camera.zoom);\n                        ctx.textAlign = TextAlign.Center;\n\n                        const infoBoxWidth = titleWidth * 1.5;\n                        const textEntries = splitStringIntoLines(ctx, this.#infoText, infoBoxWidth);\n\n                        const lineHeight = (this.#infoSymbol.style().getSize() + 2);\n                        const infoBoxHeight = lineHeight * textEntries.length * camera.zoom;\n                        const scaledLineHeight = lineHeight * camera.zoom;\n                        const start = titleY - infoBoxHeight - (scaledLineHeight / 2);\n\n                        // Draw box\n                        ctx.fillStyle = this.#titleColor;\n                        ctx.beginPath();\n                        ctx.roundRect(\n                            centerX - (infoBoxWidth / 2) - (scaledLineHeight / 2),\n                            start - scaledLineHeight,\n                            infoBoxWidth + scaledLineHeight,\n                            infoBoxHeight + scaledLineHeight,\n                            nodeStyle.radius() * camera.zoom\n                        );\n                        ctx.fill();\n\n                        // Render Text\n                        this.#infoSymbol.style().setupStyle(ctx, camera.zoom);\n                        for (let i = 0; i < textEntries.length; i++) {\n                            const entry = textEntries[i];\n                            ctx.fillText(entry, centerX, start + (i * lineHeight * camera.zoom));\n                        }\n                    });\n                }\n\n                ctx.beginPath();\n                ctx.arc(centerX, centerY, infoRadius, 0, 2 * Math.PI, false);\n                ctx.lineWidth = infoLineThickness;\n                ctx.strokeStyle = this.#infoSymbol.getColor();\n                ctx.stroke();\n\n                ctx.textAlign = TextAlign.Center;\n                this.#infoSymbol.render(ctx, camera.zoom, infoPosition);\n            }\n\n\n            // Input Ports\n            let startY = nodeBounds.Position.y + (scaledPadding * 2) + titleSize.y + scaledElementSpacing;\n            const leftSide = nodeBounds.Position.x + scaledPadding;\n            for (let i = 0; i < this.#input.length; i++) {\n                ctx.textAlign = TextAlign.Left;\n                const port = this.#input[i];\n                this.#portTextStyle.measure(ctx, camera.zoom, port.getDisplayName(), tempMeasurement);\n                const position = VectorPool.get();\n\n                position.x = nodeBounds.Position.x;\n                position.y = startY + (tempMeasurement.y / 2);\n\n                // Text\n                this.#portTextStyle.setupStyle(ctx, camera.zoom);\n                ctx.fillText(port.getDisplayName(), leftSide, position.y);\n\n                // Port\n                this.#inputPortPositions.Push(port.render(ctx, position, camera, mousePosition, postProcess));\n\n                startY += tempMeasurement.y + scaledElementSpacing;\n            }\n\n            // Output Ports\n            const rightSide = nodeBounds.Position.x + nodeBounds.Size.x;\n            ctx.textAlign = TextAlign.Right;\n            for (let i = 0; i < this.#output.length; i++) {\n                const port = this.#output[i];\n                this.#portTextStyle.measure(ctx, camera.zoom, port.getDisplayName(), tempMeasurement);\n                const position = VectorPool.get();\n                position.x = rightSide;\n                position.y = startY + (tempMeasurement.y / 2);\n\n                // Text\n                this.#portTextStyle.setupStyle(ctx, camera.zoom);\n                ctx.fillText(port.getDisplayName(), rightSide - scaledPadding, position.y);\n\n                // Port\n                this.#outputPortPositions.Push(port.render(ctx, position, camera, mousePosition, postProcess));\n\n                startY += tempMeasurement.y + scaledElementSpacing;\n            }\n\n            // Widgets\n            for (let i = 0; i < this.#widgets.length; i++) {\n                const widget = this.#widgets[i];\n                const widgetSize = widget.Size();\n                const scaledWidgetWidth = widgetSize.x * camera.zoom;\n\n                const position = VectorPool.get();\n                position.x = nodeBounds.Position.x + ((nodeBounds.Size.x - scaledWidgetWidth) / 2);\n                position.y = startY;\n\n                this.#widgetPositions.Push(widget.Draw(ctx, position, camera.zoom, mousePosition));\n                startY += (widgetSize.y * camera.zoom) + scaledElementSpacing;\n            }\n\n            // Messages\n            const messageStart = VectorPool.get();\n            messageStart.x = nodeBounds.Position.x + (nodeBounds.Size.x / 2);\n            messageStart.y = nodeBounds.Position.y + nodeBounds.Size.y + (15 * camera.zoom);\n            for (let i = 0; i < this.#messages.length; i++) {\n                const message = this.#messages[i];\n                messageStart.y += message.render(ctx, camera.zoom, messageStart, !(state === NodeState.Idle)) + (10 * camera.zoom);\n            }\n        })\n    }\n}\n", "export enum MarkdownTokenType {\n    Text = \"Text\",\n    H1 = \"H1\",\n    H2 = \"H2\",\n    H3 = \"H3\",\n    NewLine = \"New Line\",\n    Star = \"Star\",\n    Space = \"Space\",\n    BackTick = \"`\"\n}\n\nexport class MarkdownToken {\n\n    #type: MarkdownTokenType;\n\n    #lexeme: string\n\n    #tokenStart: number\n\n    #tokenEnd: number\n\n    constructor(type: MarkdownTokenType, lexeme: string, tokenStart: number, tokenEnd: number) {\n        this.#type = type;\n        this.#lexeme = lexeme;\n        this.#tokenStart = tokenStart;\n        this.#tokenEnd = tokenEnd;\n    }\n\n    type(): MarkdownTokenType {\n        return this.#type;\n    }\n\n    lexeme(): string {\n        return this.#lexeme;\n    }\n\n    tokenStart(): number {\n        return this.#tokenStart;\n    }\n    tokenEnd(): number {\n        return this.#tokenEnd;\n    }\n}\n", "import { MarkdownToken, MarkdownTokenType } from \"./token\";\n\nexport class MarkdownLexicalParser {\n\n    #body: string;\n\n    #index: number\n\n    #tokens: Array<MarkdownToken>;\n\n    constructor(body: string) {\n        this.#index = 0;\n        this.#body = body;\n        this.#tokens = new Array<MarkdownToken>();\n    }\n\n    tokens(): Array<MarkdownToken> {\n        return this.#tokens;\n    }\n\n    #current(): string {\n        if (this.#index > this.#body.length - 1) {\n            return \"\"\n        }\n        return this.#body.charAt(this.#index);\n    }\n\n    #inc(): void {\n        this.#index++\n    }\n\n    #next(): string {\n        this.#index++\n        if (this.#index > this.#body.length - 1) {\n            return \"\"\n        }\n        return this.#body.charAt(this.#index);\n    }\n\n    #lastToken = 0;\n    \n    #addToken(token: MarkdownTokenType, lexeme: string): void {\n        this.#tokens.push(new MarkdownToken(token, lexeme, this.#lastToken, this.#index));\n        this.#lastToken = this.#index;\n    }\n\n    #h2(): void {\n        let char = this.#next();\n        if (char === \"#\") {\n            this.#addToken(MarkdownTokenType.H3, \"###\");\n\n            // Move it off the character for the next reading\n            this.#inc();\n        } else {\n            this.#addToken(MarkdownTokenType.H2, \"##\");\n        }\n    }\n\n    #h1(): void {\n        let char = this.#next();\n        if (char === \"#\") {\n            this.#h2();\n        } else {\n            this.#addToken(MarkdownTokenType.H1, \"#\");\n        }\n    }\n\n    #whiteSpace(): void {\n        let char = this.#current();\n\n        while (char !== \"\") {\n            if (char !== \" \" && char !== \"\\t\") {\n                break;\n            }\n            char = this.#next();\n        }\n\n        this.#addToken(MarkdownTokenType.Space, \" \")\n    }\n\n    #text(): void {\n        let char = this.#current();\n\n        let started = -1;\n\n        while (char !== \"\") {\n            if (char === \" \" || char === \"\\t\") {\n\n                // Eat white space if we haven't seen anything yet!\n                if (started === -1) {\n                    this.#inc();\n                    continue;\n                }\n            }\n\n            // End of the line!\n            if (char === \"\\n\" || char === \"*\" || char === \"`\") {\n                if (started != -1) {\n                    this.#addToken(MarkdownTokenType.Text, this.#body.substring(started, this.#index))\n                }\n                return;\n            }\n\n\n            if (started === -1) {\n                started = this.#index;\n            }\n\n            char = this.#next();\n        }\n\n        if (started != -1) {\n            this.#addToken(MarkdownTokenType.Text, this.#body.substring(started, this.#index))\n        }\n    }\n\n    // S( ) => S\n    // S(\\t) => S\n    // S(#) => H1\n    // H1(#) => H2\n    // H1(!#) => S\n    // H2(#) => H3\n    // H2(#) => H3\n    parse(): void {\n        let char = this.#current();\n\n        while (char !== \"\") {\n            if (char === \" \" || char === \"\\t\") {\n                this.#whiteSpace();\n            } else if (char === \"#\") {\n                this.#h1();\n            } else if (char === \"\\n\") {\n                this.#addToken(MarkdownTokenType.NewLine, \"\\n\");\n                this.#inc();\n            } else if (char === \"*\") {\n                this.#addToken(MarkdownTokenType.Star, \"*\");\n                this.#inc();\n            } else if (char === \"`\") {\n                this.#addToken(MarkdownTokenType.BackTick, \"`\");\n                this.#inc();\n            } else {\n                this.#text();\n            }\n\n            char = this.#current();\n        }\n    }\n}\n", "import { Theme } from \"../theme\";\nimport { List } from \"../types/list\";\nimport { Text } from \"../types/text\";\nimport { CopyVector2, Vector2, Zero } from \"../types/vector2\";\n\nexport interface MarkdownEntry {\n    render(ctx: CanvasRenderingContext2D, position: Vector2, scale: number, maxWidth: number): number\n}\n\nexport class CodeBlockEntry {\n\n    #text: Text\n\n    #calculatedPositions: List<Vector2>\n\n    #calculatedEntries: List<Text>\n\n    #calculatedForWidth: number;\n\n    constructor(text: Text) {\n        this.#text = text;\n        this.#calculatedForWidth = -1\n\n        this.#calculatedEntries = new List<Text>();\n        this.#calculatedPositions = new List<Vector2>();\n\n        document.fonts.addEventListener(\"loadingdone\", (event) => {\n            this.#calculatedForWidth = -1\n        });\n    }\n\n    #calculateLayout(ctx: CanvasRenderingContext2D, maxWidth: number): void {\n        if (this.#calculatedForWidth === maxWidth) {\n            return;\n        }\n\n        let adjustedWith = maxWidth;\n        adjustedWith -= Theme.Note.CodeBlock.Padding * 2;\n\n        this.#calculatedEntries.Clear();\n        this.#calculatedPositions.Clear();\n\n        let curHeight = 0;\n        const lineInc = this.#text.style().getSize() + Theme.Note.LineSpacing;\n\n        let entries = this.#text.split(\"\\n\")\n\n        for (let entryIndex = 0; entryIndex < entries.length; entryIndex++) {\n            const entry = entries[entryIndex];\n\n            let lines = entry.breakIntoLines(ctx, adjustedWith);\n            for (let lineIndex = 0; lineIndex < lines.length; lineIndex++) {\n\n                this.#calculatedEntries.Push(lines[lineIndex])\n                this.#calculatedPositions.Push({\n                    x: 0,\n                    y: curHeight,\n                })\n                \n                curHeight += lineInc;\n            }\n        }\n\n        this.#calculatedForWidth = maxWidth;\n    }\n\n    render(ctx: CanvasRenderingContext2D, position: Vector2, scale: number, maxWidth: number): number {\n        this.#calculateLayout(ctx, maxWidth);\n\n        let padding = Theme.Note.CodeBlock.Padding * scale;\n\n        let max = 0;\n        for (let i = 0; i < this.#calculatedEntries.Count(); i++) {\n            const pos = this.#calculatedPositions.At(i);\n            max = Math.max(max, pos.y * scale)\n        }\n\n        const y = position.y + max + (scale * 5)\n        ctx.fillStyle = Theme.Note.CodeBlock.BackgroundColor;\n        ctx.beginPath();\n        ctx.roundRect(\n            position.x,\n            position.y,\n            maxWidth * scale,\n            max + (padding * 2),\n            Theme.Note.CodeBlock.BorderRadius * scale\n        );\n        ctx.fill();\n\n\n        for (let i = 0; i < this.#calculatedEntries.Count(); i++) {\n            const entry = this.#calculatedEntries.At(i);\n            const pos = this.#calculatedPositions.At(i);\n\n            entry.render(ctx, scale, {\n                x: (pos.x * scale) + position.x + padding,\n                y: (pos.y * scale) + position.y + padding\n            });\n\n            max = Math.max(max, pos.y * scale)\n        }\n\n\n        return max + (padding * 2);\n    }\n}\n\nexport class UnorderedListMarkdownEntry {\n\n    #entries: Array<BasicMarkdownEntry>;\n\n    constructor(entries: Array<BasicMarkdownEntry>) {\n        this.#entries = entries;\n    }\n\n    render(ctx: CanvasRenderingContext2D, position: Vector2, scale: number, maxWidth: number): number {\n        let offset = 0;\n        let shift = 20;\n\n        let pos = {\n            x: position.x + (shift * scale),\n            y: position.y\n        }\n\n        let dot = Theme.Note.DotSize * scale;\n\n        for (let i = 0; i < this.#entries.length; i++) {\n\n            ctx.beginPath();\n            ctx.arc(position.x + dot, pos.y + (dot * 3), dot, 0, 2 * Math.PI);\n            ctx.fill();\n\n            offset += this.#entries[i].render(ctx, pos, scale, maxWidth - shift) + (scale * Theme.Note.LineSpacing * 2);\n            pos.y = position.y + offset;\n        }\n\n        return offset;\n    }\n}\n\nexport class BasicMarkdownEntry {\n\n    #underline: boolean;\n\n    #background: boolean;\n\n    #entries: Array<Text>\n\n    #calculatedPositions: List<Vector2>\n\n    #calculatedEntries: List<Text>\n\n    #calculatedForWidth: number;\n\n    constructor(lines: Array<Text>, underline: boolean, background: boolean) {\n        this.#entries = lines;\n        this.#underline = underline;\n        this.#background = background;\n        this.#calculatedForWidth = -1\n\n        this.#calculatedEntries = new List<Text>();\n        this.#calculatedPositions = new List<Vector2>();\n\n        document.fonts.addEventListener(\"loadingdone\", (event) => {\n            this.#calculatedForWidth = -1\n        });\n    }\n\n    #calculateLayout(ctx: CanvasRenderingContext2D, maxWidth: number): void {\n        if (this.#calculatedForWidth === maxWidth) {\n            return;\n        }\n\n        let adjustedWith = maxWidth;\n        if (this.#background) {\n            adjustedWith -= Theme.Note.CodeBlock.Padding * 2;\n        }\n\n        this.#calculatedEntries.Clear();\n        this.#calculatedPositions.Clear();\n\n        const curPosition: Vector2 = Zero();\n        const texSize: Vector2 = Zero();\n\n        let currentLineHeight = 0;\n        const currentLineText = new List<Text>();\n        const currentLineWidths = new List<number>();\n\n        for (let entryIndex = 0; entryIndex < this.#entries.length; entryIndex++) {\n            const entry = this.#entries[entryIndex];\n\n            let lines = entry.splitAtWidth(ctx, adjustedWith - curPosition.x);\n            let i = 0;\n            while (lines.length > 1 && i < 100) {\n                i++\n\n                // We can't collapse this thing any further. Break out of the \n                // while loop before we have infinite loop on our hands\n                // if (lines[0].get() === \"\" && lines[1].get().length === 1) {\n                //     lines[0] = lines[1];\n                //     break;\n                // }\n\n                // We can't collapse this thing any further. Break out of the \n                // while loop before we have infinite loop on our hands\n                if (lines[0].get() === \"\" && currentLineText.Count() === 0) {\n\n                    if (lines[1].get().length === 1) {\n                        lines[0] = lines[1];\n                        break;\n                    } else {\n                        lines = lines[1].splitAtIndex(1);\n                    }\n\n                }\n\n                // This effectiviely finishes off the line we're currenly working on.\n                if (lines[0].get() !== \"\") {\n                    lines[0].size(ctx, 1, texSize);\n                    currentLineHeight = Math.max(currentLineHeight, texSize.y);\n\n                    currentLineText.Push(lines[0]);\n                    currentLineWidths.Push(curPosition.x);\n                }\n\n                curPosition.y += currentLineHeight;\n\n                // Take everything we're working with and finalize it\n                for (let i = 0; i < currentLineText.Count(); i++) {\n                    this.#calculatedEntries.Push(currentLineText.At(i));\n                    this.#calculatedPositions.Push({ x: currentLineWidths.At(i), y: curPosition.y })\n                }\n\n                currentLineText.Clear();\n                currentLineWidths.Clear();\n\n                curPosition.y += Theme.Note.LineSpacing;\n                currentLineHeight = 0;\n                curPosition.x = 0;\n\n                lines = lines[1].splitAtWidth(ctx, adjustedWith);\n            }\n            if (i === 100) {\n                console.log(lines)\n            }\n\n            lines[0].size(ctx, 1, texSize);\n            currentLineHeight = Math.max(currentLineHeight, texSize.y)\n\n            currentLineText.Push(lines[0]);\n            currentLineWidths.Push(curPosition.x);\n\n            curPosition.x += texSize.x;\n        }\n\n        curPosition.y += currentLineHeight;\n\n        // Take everything we're working with and finalize it\n        for (let i = 0; i < currentLineText.Count(); i++) {\n            this.#calculatedEntries.Push(currentLineText.At(i));\n            this.#calculatedPositions.Push({ x: currentLineWidths.At(i), y: curPosition.y })\n        }\n\n        this.#calculatedForWidth = maxWidth;\n    }\n\n    render(ctx: CanvasRenderingContext2D, position: Vector2, scale: number, maxWidth: number): number {\n        this.#calculateLayout(ctx, maxWidth);\n\n        let padding = 0;\n        if (this.#background) {\n            padding += Theme.Note.CodeBlock.Padding * scale;\n        }\n\n\n        if (this.#background) {\n            let max = 0;\n            for (let i = 0; i < this.#calculatedEntries.Count(); i++) {\n                const pos = this.#calculatedPositions.At(i);\n                max = Math.max(max, pos.y * scale)\n            }\n\n            const y = position.y + max + (scale * 5)\n            ctx.fillStyle = Theme.Note.CodeBlock.BackgroundColor;\n            ctx.beginPath();\n            ctx.roundRect(\n                position.x,\n                position.y,\n                maxWidth * scale,\n                max + (padding * 2),\n                Theme.Note.CodeBlock.BorderRadius * scale\n            );\n            ctx.fill();\n        }\n\n\n        let max = 0;\n        for (let i = 0; i < this.#calculatedEntries.Count(); i++) {\n            const entry = this.#calculatedEntries.At(i);\n            const pos = this.#calculatedPositions.At(i);\n\n            entry.render(ctx, scale, {\n                x: (pos.x * scale) + position.x + padding,\n                y: (pos.y * scale) + position.y + padding\n            });\n\n            max = Math.max(max, pos.y * scale)\n        }\n\n        // Add underline \n        if (this.#underline) {\n            const y = position.y + max + (scale * 5)\n            ctx.strokeStyle = Theme.Note.FontColor;\n            ctx.lineWidth = Theme.Note.HeaderLineWidth * scale;\n            ctx.beginPath();\n            ctx.moveTo(position.x, y);\n            ctx.lineTo(position.x + (maxWidth * scale), y);\n            ctx.stroke();\n        }\n\n        return max + (padding * 2);\n    }\n}\n", "import { FontStyle, FontWeight, TextStyleConfig } from \"../styles/text\";\nimport { Theme } from \"../theme\";\nimport { Text } from \"../types/text\";\nimport { BasicMarkdownEntry, CodeBlockEntry, MarkdownEntry, UnorderedListMarkdownEntry } from \"./entry\";\nimport { MarkdownToken, MarkdownTokenType } from \"./token\";\n\nexport class MarkdownSyntaxParser {\n\n    #tokens: Array<MarkdownToken>;\n\n    #index: number;\n\n    #originalText: string;\n\n    constructor(originalText: string, tokens: Array<MarkdownToken>) {\n        this.#originalText = originalText;\n        this.#index = 0;\n        this.#tokens = tokens;\n    }\n\n    #current(): MarkdownToken | null {\n        if (this.#index > this.#tokens.length - 1) {\n            return null\n        }\n        return this.#tokens[this.#index];\n    }\n\n    #inc(): void {\n        this.#index++\n    }\n\n    #next(): MarkdownToken | null {\n        this.#index++\n        if (this.#index >= this.#tokens.length - 1) {\n            return null\n        }\n        return this.#tokens[this.#index];\n    }\n\n    #peak(): MarkdownToken | null {\n        if (this.#index + 1 >= this.#tokens.length - 1) {\n            return null\n        }\n        return this.#tokens[this.#index + 1];\n    }\n\n    #peakInto(amount: number): MarkdownToken | null {\n        if (this.#index + amount >= this.#tokens.length - 1) {\n            return null\n        }\n        return this.#tokens[this.#index + amount];\n    }\n\n    #emphasis(): Array<Text> {\n\n        // Cases to consider\n        // =================\n        // 1.  *a*:      <i>a</i>\n        // 2.  **a**:    <b>a</b>\n        // 3.  **a*:     *<i>a</i> <----- fuck this one\n        // 4.  ***a**:   *<b>a</b> <----- fuck this one\n        // 5.  *a**:     <i>a</i>*\n        // 6.  **a***:   <b>a</b>*\n        // 7.  * a *:    * a *\n        // 8.  ** a **:  ** a **\n        // 9.  **a **:   **a **\n        // 10. **a f**:  <b>a f<b>\n        // 11. * Test:   <ul>Test</ul> \n\n        let token = this.#next();\n        if (token?.type() === MarkdownTokenType.Space) {\n            return [new Text(\"*\")];\n        }\n\n        let bold = false;\n        // Read off all leading stars\n        while (token !== null && token.type() === MarkdownTokenType.Star) {\n            bold = true;\n            token = this.#next();\n        }\n\n        let textContent = \"\";\n\n        let boldClosed = false;\n        let startingClose = false;\n        let validClose = false;\n        while (token !== null && token.type() !== MarkdownTokenType.NewLine) {\n            if (token.type() === MarkdownTokenType.Star) {\n\n                // This is the second star we've seen in a row. We're done!\n                if (startingClose) {\n                    boldClosed = true;\n                    break;\n                }\n\n                // If we're not bold, we just need a single star to close this off.\n                startingClose = true;\n                if (bold === false) {\n                    break;\n                }\n            }\n\n            if (startingClose && token.type() !== MarkdownTokenType.Star) {\n                break;\n            }\n\n            // Add to string content...\n            if (token.type() === MarkdownTokenType.Text) {\n                textContent += token.lexeme();\n                validClose = true;\n            }\n\n            if (token.type() === MarkdownTokenType.Space) {\n                textContent += token.lexeme();\n                validClose = false;\n            }\n\n            token = this.#next();\n        }\n\n        const style: TextStyleConfig = {}\n\n        if (validClose && startingClose) {\n            if (boldClosed) {\n                style.weight = FontWeight.Bold;\n            } else {\n                style.style = FontStyle.Italic;\n            }\n        }\n\n        return [new Text(textContent, style)]\n    }\n\n    #text(): Array<Text> {\n        let contents: Array<Text> = new Array<Text>();\n        let textContent = \"\";\n\n        let token = this.#current();\n\n        // Read off all starting whitespace \n        while (token !== null && token.type() === MarkdownTokenType.Space) {\n            token = this.#next();\n        }\n\n        while (token !== null && token.type() !== MarkdownTokenType.NewLine) {\n            switch (token.type()) {\n                case MarkdownTokenType.Text:\n                case MarkdownTokenType.H1:\n                case MarkdownTokenType.H2:\n                case MarkdownTokenType.H3:\n                case MarkdownTokenType.Space:\n                    textContent += token.lexeme();\n                    break;\n\n                case MarkdownTokenType.Star:\n                    if (textContent !== \"\") {\n                        contents.push(new Text(textContent))\n                        textContent = \"\";\n                    }\n                    let starText = this.#emphasis()\n                    for (let i = 0; i < starText.length; i++) {\n                        contents.push(starText[i]);\n                    }\n                    break;\n            }\n\n            token = this.#next();\n        }\n\n        if (textContent !== \"\") {\n            contents.push(new Text(textContent))\n        }\n\n        return contents;\n    }\n\n    #h1(): BasicMarkdownEntry {\n        // Move off of the header token\n        this.#inc();\n\n        const text = this.#text();\n        for (let i = 0; i < text.length; i++) {\n            text[i].setColor(Theme.Note.FontColor);\n            text[i].setSize(Theme.Note.H1.FontSize);\n            text[i].setWeight(FontWeight.Bold);\n        }\n\n        return new BasicMarkdownEntry(text, true, false);\n    }\n\n    #h2(): BasicMarkdownEntry {\n        // Move off of the header token\n        this.#inc();\n\n        const text = this.#text();\n        for (let i = 0; i < text.length; i++) {\n            text[i].setColor(Theme.Note.FontColor);\n            text[i].setSize(Theme.Note.H2.FontSize);\n            text[i].setWeight(FontWeight.Bold);\n        }\n\n        return new BasicMarkdownEntry(text, true, false);\n    }\n\n    #h3(): BasicMarkdownEntry {\n        // Move off of the header token\n        this.#inc();\n\n        const text = this.#text();\n        for (let i = 0; i < text.length; i++) {\n            text[i].setColor(Theme.Note.FontColor);\n            text[i].setSize(Theme.Note.H3.FontSize);\n            text[i].setWeight(FontWeight.Bold);\n        }\n\n        return new BasicMarkdownEntry(text, false, false);\n    }\n\n    #starLineStart(): MarkdownEntry {\n        if (this.#peak()?.type() !== MarkdownTokenType.Space) {\n            const starEntries = this.#text();\n            this.#assignStandardStyling(starEntries);\n            return new BasicMarkdownEntry(starEntries, false, false);\n        }\n\n        // We've begun with a space, which means unordered list!\n\n        const entries = new Array<BasicMarkdownEntry>();\n\n        while (this.#current()?.type() === MarkdownTokenType.Star && this.#peak()?.type() === MarkdownTokenType.Space) {\n            this.#inc();\n            const starEntries = this.#text();\n            this.#assignStandardStyling(starEntries);\n            entries.push(new BasicMarkdownEntry(starEntries, false, false));\n\n            // Text reads to the end of the line, which means we're at the new\n            // line character. Move forward 1. \n            this.#inc();\n        }\n\n        return new UnorderedListMarkdownEntry(entries);\n\n    }\n\n    #assignStandardStyling(textEntries: Array<Text>): void {\n        for (let i = 0; i < textEntries.length; i++) {\n            textEntries[i].setColor(Theme.Note.FontColor);\n            textEntries[i].setSize(Theme.Note.FontSize);\n        }\n    }\n\n    #backtickLineStart(): MarkdownEntry {\n\n        // If we're not a ```, just treat as regular text\n        if (this.#peak()?.type() !== MarkdownTokenType.BackTick || this.#peakInto(2)?.type() !== MarkdownTokenType.BackTick) {\n            const starEntries = this.#text();\n            this.#assignStandardStyling(starEntries);\n            return new BasicMarkdownEntry(starEntries, false, false);\n        }\n        this.#inc();\n        this.#inc();\n\n        let token = this.#next();\n\n        // Eat the first new line character\n        if (token?.type() === MarkdownTokenType.NewLine) {\n            token = this.#next();\n        }\n\n        let start = token?.tokenStart();\n        let end = start;\n\n        // Read until we hit another ``` \n        while (token !== null) {\n\n            if (\n                token.type() === MarkdownTokenType.BackTick &&\n                this.#peak()?.type() === MarkdownTokenType.BackTick &&\n                this.#peakInto(2)?.type() === MarkdownTokenType.BackTick\n            ) {\n                end = token.tokenEnd() - 1;\n                break;\n            }\n\n            token = this.#next();\n        }\n\n        this.#inc(); // puts us on the 2nd\n        this.#inc(); // puts us on the 3rd\n        this.#inc(); // puts us on the next token\n\n        const codeBlockText = this.#originalText.substring(start as number, end);\n        const entryText = new Text(codeBlockText);\n        this.#assignStandardStyling([entryText])\n        return new CodeBlockEntry(entryText)\n    }\n\n    parse(): Array<MarkdownEntry> {\n        let token = this.#current();\n\n        const entries = new Array<MarkdownEntry>();\n\n        while (token !== null) {\n            switch (token.type()) {\n                case MarkdownTokenType.H1:\n                    entries.push(this.#h1());\n                    break;\n\n                case MarkdownTokenType.H2:\n                    entries.push(this.#h2());\n                    break;\n\n                case MarkdownTokenType.H3:\n                    entries.push(this.#h3());\n                    break;\n\n                case MarkdownTokenType.Text:\n                    const textEntries = this.#text();\n                    this.#assignStandardStyling(textEntries);\n                    entries.push(new BasicMarkdownEntry(textEntries, false, false));\n                    break;\n\n                case MarkdownTokenType.Star:\n                    entries.push(this.#starLineStart());\n                    break;\n\n                case MarkdownTokenType.NewLine:\n                    this.#inc();\n                    break;\n\n                case MarkdownTokenType.BackTick:\n                    entries.push(this.#backtickLineStart());\n                    break;\n\n                default:\n                    this.#inc();\n            }\n\n            token = this.#current();\n        }\n\n        return entries;\n    }\n}\n", "import { MarkdownEntry } from \"./entry\";\nimport { MarkdownLexicalParser } from \"./lexicalParser\";\nimport { MarkdownSyntaxParser } from \"./syntaxParser\";\n\nexport function BuildMarkdown(data: string): Array<MarkdownEntry> {\n    const lexicalParser = new MarkdownLexicalParser(data);\n    lexicalParser.parse();\n    // console.log(lexicalParser.tokens());\n\n    const syntaxParser = new MarkdownSyntaxParser(data, lexicalParser.tokens());\n    const contents = syntaxParser.parse()\n    // console.log(contents);\n    return contents;\n}", "import { BuildMarkdown } from \"../markdown/markdown\";\nimport { MarkdownEntry } from \"../markdown/entry\";\nimport { Popup } from \"../popup\";\nimport { BoxStyle } from \"../styles/box\";\nimport { TextAlign } from \"../styles/canvasTextAlign\";\nimport { TextBaseline } from \"../styles/canvasTextBaseline\";\nimport { TextStyleConfig } from \"../styles/text\";\nimport { Theme } from \"../theme\";\nimport { Box } from \"../types/box\";\nimport { CopyVector2, Vector2, Zero } from \"../types/vector2\";\nimport { Camera } from \"../camera\";\nimport { Metadata } from \"../metadata\";\n\nexport type NoteContentChangeCallback = (node: FlowNote, newContents: string) => void\nexport type NoteWidthChangeCallback = (node: FlowNote, newWidth: number) => void\n\nexport interface FlowNoteConfig {\n    text?: string;\n    style?: TextStyleConfig;\n    metadata?: Metadata;\n    position?: Vector2;\n    width?: number;\n    locked?: boolean;\n    onWidthChange?: NoteWidthChangeCallback;\n    onContentChange?: NoteContentChangeCallback;\n}\n\nexport enum DragHandle {\n    None,\n    Left,\n    Right\n};\n\nconst BOUNDS_SPACING = 20;\nconst BOX_SIZE = 10;\n\nexport class FlowNote {\n\n    #originalText: string;\n\n    #document: Array<MarkdownEntry>;\n\n    #width: number;\n\n    #edittingStyle: BoxStyle;\n\n    // Runtime ================================================================\n\n    #data: Metadata;\n\n    #position: Vector2;\n\n    #handleSelected: DragHandle;\n\n    #edittingLayout: boolean;\n\n    #lastRenderedBox: Box;\n\n    #hovering: boolean;\n\n    // Callbacks ==============================================================\n\n    #widthChangeCallbacks: Array<NoteWidthChangeCallback>;\n\n    #contentChangeCallbacks: Array<NoteContentChangeCallback>;\n\n    // ========================================================================\n\n    constructor(config?: FlowNoteConfig) {\n        this.#widthChangeCallbacks = new Array<NoteWidthChangeCallback>();\n        this.#contentChangeCallbacks = new Array<NoteContentChangeCallback>();\n        this.#data = config?.metadata === undefined ? {} : config?.metadata;\n        this.#document = [];\n        this.#originalText = \"\";\n        this.#hovering = false;\n        this.#edittingLayout = config?.locked === undefined ? true : !config?.locked;\n        this.#width = config?.width === undefined ? 500 : config.width;\n        this.#position = config?.position === undefined ? { x: 0, y: 0 } : config.position;\n        this.setText(config?.text === undefined ? \"\" : config?.text);\n        this.#lastRenderedBox = { Position: { x: 0, y: 0 }, Size: { x: 0, y: 0 } };\n        this.#handleSelected = DragHandle.None;\n\n        this.#edittingStyle = new BoxStyle({\n            border: {\n                color: \"white\",\n                size: 1\n            },\n        })\n\n        if (config?.onWidthChange) {\n            this.#widthChangeCallbacks.push(config.onWidthChange);\n        }\n\n        if (config?.onContentChange) {\n            this.#contentChangeCallbacks.push(config.onContentChange);\n        }\n    }\n\n    setText(text: string): void {\n        this.#originalText = text;\n        this.#document = BuildMarkdown(this.#originalText);\n        for (let i = 0; i < this.#contentChangeCallbacks.length; i++) {\n            this.#contentChangeCallbacks[i](this, text);\n        }\n    }\n\n    public setMetadataProperty(name: string, value: any): void {\n        this.#data[name] = value;\n    }\n\n    public getMetadataProperty(name: string): any {\n        return this.#data[name];\n    }\n\n    text(): string {\n        return this.#originalText;\n    }\n\n    width(): number {\n        return this.#width;\n    }\n\n    position(): Vector2 {\n        return this.#position;\n    }\n\n    translate(delta: Vector2): void {\n        this.#position.x += delta.x;\n        this.#position.y += delta.y;\n    }\n\n    setPosition(position: Vector2): void {\n        CopyVector2(this.#position, position);\n    }\n\n    handleSelected(): DragHandle {\n        return this.#handleSelected;\n    }\n\n    selectHandle(handle: DragHandle): void {\n        this.#handleSelected = handle;\n    }\n\n    #tempPosition: Vector2 = Zero();\n\n    public setWidth(newWidth: number): void {\n        if (newWidth === undefined) {\n            console.error(\"Attempted to set note's width to undefined\");\n        }\n        this.#width = newWidth;\n        for (let i = 0; i < this.#widthChangeCallbacks.length; i++) {\n            this.#widthChangeCallbacks[i](this, newWidth);\n        }\n    }\n\n    public addWidthChangeListener(callback: NoteWidthChangeCallback): void {\n        if (callback === null || callback === undefined) {\n            return;\n        }\n        this.#widthChangeCallbacks.push(callback);\n    }\n\n    public addContentChangeListener(callback: NoteContentChangeCallback): void {\n        if (callback === null || callback === undefined) {\n            return;\n        }\n        this.#contentChangeCallbacks.push(callback);\n    }\n\n    render(ctx: CanvasRenderingContext2D, camera: Camera, mousePosition: Vector2 | undefined): void {\n        if (this.#edittingLayout && (this.#hovering || this.#handleSelected !== DragHandle.None)) {\n\n            if (mousePosition) {\n                if (this.#handleSelected === DragHandle.Right) {\n\n                    const leftPosition = (this.#position.x * camera.zoom) + camera.position.x;\n                    this.setWidth(Math.max((mousePosition.x - leftPosition) / camera.zoom, 1));\n\n                } else if (this.#handleSelected === DragHandle.Left) {\n\n                    const scaledWidth = this.#width * camera.zoom;\n                    const rightPosition = (this.#position.x * camera.zoom) + camera.position.x + scaledWidth;\n                    this.setWidth(Math.max((rightPosition - mousePosition.x) / camera.zoom, 1));\n                    this.#position.x = rightPosition - (this.#width * camera.zoom) - camera.position.x;\n                    this.#position.x /= camera.zoom;\n                }\n            }\n\n            this.#edittingStyle.Outline(ctx, this.leftResizeHandleBox(), camera.zoom, 2);\n            this.#edittingStyle.Outline(ctx, this.rightResizeHandleBox(), camera.zoom, 2);\n\n            ctx.beginPath();\n            const left = this.#lastRenderedBox.Position.x;\n            const right = this.#lastRenderedBox.Position.x + this.#lastRenderedBox.Size.x;\n            const bottom = this.#lastRenderedBox.Position.y;\n            const top = this.#lastRenderedBox.Position.y + this.#lastRenderedBox.Size.y;\n            ctx.moveTo(left, bottom + (this.#lastRenderedBox.Size.y / 2) - (BOX_SIZE));\n            ctx.lineTo(left, bottom);\n            ctx.lineTo(right, bottom);\n            ctx.lineTo(right, bottom + (this.#lastRenderedBox.Size.y / 2) - (BOX_SIZE));\n\n            ctx.moveTo(left, top - (this.#lastRenderedBox.Size.y / 2) + (BOX_SIZE));\n            ctx.lineTo(left, top);\n            ctx.lineTo(right, top);\n            ctx.lineTo(right, top - (this.#lastRenderedBox.Size.y / 2) + (BOX_SIZE));\n            ctx.stroke();\n            // this.#edittingStyle.Outline(ctx, bigBox, camera.zoom, 2);\n        }\n\n        camera.graphSpaceToScreenSpace(this.#position, this.#tempPosition);\n        CopyVector2(this.#lastRenderedBox.Position, this.#tempPosition)\n\n        const startY = this.#tempPosition.y;\n        const lineSpacing = Theme.Note.EntrySpacing * camera.zoom;\n\n        ctx.textAlign = TextAlign.Left;\n        ctx.textBaseline = TextBaseline.Alphabetic;\n        for (let i = 0; i < this.#document.length; i++) {\n            const text = this.#document[i];\n            this.#tempPosition.y += text.render(ctx, this.#tempPosition, camera.zoom, this.#width) + lineSpacing;\n        }\n\n        this.#lastRenderedBox.Position.x -= BOUNDS_SPACING\n        this.#lastRenderedBox.Position.y -= BOUNDS_SPACING\n        this.#lastRenderedBox.Size.x = camera.zoom * this.#width + (BOUNDS_SPACING * 2);\n        this.#lastRenderedBox.Size.y = this.#tempPosition.y - startY + (BOUNDS_SPACING * 2);\n    }\n\n    leftResizeHandleBox(): Box {\n        return {\n            Position: {\n                x: this.#lastRenderedBox.Position.x - (BOX_SIZE / 2),\n                y: this.#lastRenderedBox.Position.y + (this.#lastRenderedBox.Size.y / 2) - (BOX_SIZE / 2),\n            },\n            Size: { x: BOX_SIZE, y: BOX_SIZE, }\n        };\n    }\n\n    rightResizeHandleBox(): Box {\n        return {\n            Position: {\n                x: this.#lastRenderedBox.Position.x - (BOX_SIZE / 2) + this.#lastRenderedBox.Size.x,\n                y: this.#lastRenderedBox.Position.y + (this.#lastRenderedBox.Size.y / 2) - (BOX_SIZE / 2),\n            },\n            Size: { x: BOX_SIZE, y: BOX_SIZE, }\n        };\n    }\n\n    edittingLayout(): boolean {\n        return this.#edittingLayout;\n    }\n\n    setHovering(hovering: boolean): void {\n        this.#hovering = hovering;\n    }\n\n    editContent(): void {\n        let input: HTMLTextAreaElement | null = null;\n        let saveText = \"Save\";\n\n        const popup = new Popup({\n            title: \"Edit Note\",\n            options: [saveText, \"Cancel\"],\n            content: () => {\n                const container = document.createElement('div');\n                input = document.createElement('textarea')\n                input.rows = 8;\n                input.cols = 50;\n                input.value = this.#originalText;\n                container.append(input);\n                return container;\n            },\n            onClose: (button: string | null): void => {\n                if (button !== saveText || input === null) {\n                    return;\n                }\n                this.setText(input.value);\n            },\n        });\n\n        popup.Show();\n    }\n\n    lock(): void {\n        this.#edittingLayout = false;\n    }\n\n    unlock(): void {\n        this.#edittingLayout = true;\n    }\n\n    bounds(): Box {\n        return this.#lastRenderedBox;\n    }\n}", "import { Camera } from \"../camera\";\nimport { ContextMenuConfig } from \"../contextMenu\";\nimport { RenderResults } from \"../graphSubsystem\";\nimport { InBox } from \"../types/box\";\nimport { Vector2 } from \"../types/vector2\";\nimport { DragHandle, FlowNote, FlowNoteConfig } from './note';\n\n\nexport type NoteAddedCallback = (addedNote: FlowNote) => void\nexport type NoteRemovedCallback = (noteRemoved: FlowNote) => void\n\nexport type NoteDragStartCallback = (nodeDragged: FlowNote) => void\nexport type NoteDragStopCallback = (nodeDragged: FlowNote) => void\n\n\nexport interface NoteSubsystemConfig {\n    onNoteAdded?: NoteAddedCallback;\n    onNoteRemoved?: NoteRemovedCallback;\n    onNoteDragStop?: NoteDragStopCallback\n    onNoteDragStart?: NoteDragStartCallback\n    notes?: Array<FlowNoteConfig>\n}\n\nexport class NoteSubsystem {\n\n    #notes: Array<FlowNote>;\n\n    #noteHovering: FlowNote | null;\n\n    #noteSelected: FlowNote | null;\n\n    #hoveringHandle: DragHandle;\n\n    #onNoteAddedCallbacks: Array<NoteAddedCallback>;\n\n    #onNoteRemovedCallbacks: Array<NoteRemovedCallback>;\n\n    #onNoteDragStartCallbacks: Array<NoteDragStartCallback>;\n\n    #onNoteDragStopCallbacks: Array<NoteDragStopCallback>;\n\n    constructor(config?: NoteSubsystemConfig) {\n        this.#hoveringHandle = DragHandle.None;\n        this.#notes = [];\n        this.#noteHovering = null;\n        this.#noteSelected = null;\n\n        // Callbacks\n        this.#onNoteAddedCallbacks = new Array<NoteAddedCallback>();\n        this.#onNoteRemovedCallbacks = new Array<NoteRemovedCallback>();\n        this.#onNoteDragStartCallbacks = new Array<NoteDragStartCallback>();\n        this.#onNoteDragStopCallbacks = new Array<NoteDragStopCallback>();\n\n        if (config?.notes !== undefined) {\n            for (let i = 0; i < config?.notes.length; i++) {\n                this.addNote(new FlowNote(config?.notes[i]));\n            }\n        }\n\n        // Add callback *after* we added all the initial notes\n        if (config?.onNoteAdded !== undefined) {\n            this.#onNoteAddedCallbacks.push(config?.onNoteAdded);\n        }\n\n        if (config?.onNoteDragStop !== undefined) {\n            this.#onNoteDragStopCallbacks.push(config?.onNoteDragStop);\n        }\n\n        if (config?.onNoteDragStart !== undefined) {\n            this.#onNoteDragStartCallbacks.push(config?.onNoteDragStart);\n        }\n\n        if (config?.onNoteRemoved !== undefined) {\n            this.#onNoteRemovedCallbacks.push(config?.onNoteRemoved);\n        }\n    }\n\n    addNote(note: FlowNote): void {\n        if (note === null || note === undefined) {\n            return;\n        }\n\n        this.#notes.push(note);\n        for (let i = 0; i < this.#onNoteAddedCallbacks.length; i++) {\n            this.#onNoteAddedCallbacks[i](note);\n        }\n    }\n\n    public addNoteAddedListener(callback: NoteAddedCallback): void {\n        if (callback === null || callback === undefined) {\n            return;\n        }\n        this.#onNoteAddedCallbacks.push(callback);\n    }\n\n    public addNoteRemovedListener(callback: NoteRemovedCallback): void {\n        if (callback === null || callback === undefined) {\n            return;\n        }\n        this.#onNoteRemovedCallbacks.push(callback);\n    }\n\n    public addNoteDragStartListener(callback: NoteDragStartCallback): void {\n        if (callback === null || callback === undefined) {\n            return;\n        }\n        this.#onNoteDragStartCallbacks.push(callback);\n    }\n\n    public addNoteDragStopListener(callback: NoteDragStopCallback): void {\n        if (callback === null || callback === undefined) {\n            return;\n        }\n        this.#onNoteDragStopCallbacks.push(callback);\n    }\n\n    openContextMenu(ctx: CanvasRenderingContext2D, position: Vector2): ContextMenuConfig | null {\n        const group = \"node-flow-graph-note-menu\";\n\n        const result: ContextMenuConfig = {\n            items: [\n                {\n                    name: \"New Note\",\n                    group: group,\n                    callback: () => {\n                        this.addNote(new FlowNote({\n                            text: \"#Note\\n\\nRight-click this note and select \\\"edit note\\\" to put what you want here.\",\n                            width: 300,\n                            position: position\n                        }))\n                    }\n                }\n            ],\n            subMenus: [],\n        }\n\n        if (this.#noteHovering !== null) {\n            const noteToReview = this.#noteHovering;\n            result.items?.push(\n                {\n                    name: \"Delete Note\",\n                    group: group,\n                    callback: () => {\n                        this.removeNote(noteToReview);\n                    }\n                },\n                {\n                    name: \"Edit Note\",\n                    group: group,\n                    callback: noteToReview.editContent.bind(noteToReview),\n                },\n            );\n\n            if (!noteToReview.edittingLayout()) {\n                result.items?.push({\n                    name: \"Unlock Note\",\n                    group: group,\n                    callback: noteToReview.unlock.bind(noteToReview),\n                })\n            } else {\n                result.items?.push({\n                    name: \"Lock Note\",\n                    group: group,\n                    callback: noteToReview.lock.bind(noteToReview),\n                })\n            }\n        }\n\n        return result;\n    }\n\n    clickStart(mousePosition: Vector2, camera: Camera, ctrlKey: boolean): boolean {\n        if (this.#noteHovering !== null && this.#noteHovering.edittingLayout()) {\n            this.#noteSelected = this.#noteHovering;\n            this.#noteSelected.selectHandle(this.#hoveringHandle);\n\n            for (let i = 0; i < this.#onNoteDragStartCallbacks.length; i++) {\n                this.#onNoteDragStartCallbacks[i](this.#noteSelected);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    clickEnd(): void {\n        if (this.#noteSelected !== null) {\n            this.#noteSelected.selectHandle(DragHandle.None);\n            for (let i = 0; i < this.#onNoteDragStopCallbacks.length; i++) {\n                this.#onNoteDragStopCallbacks[i](this.#noteSelected);\n            }\n        }\n        this.#noteSelected = null;\n    }\n\n    mouseDragEvent(delta: Vector2, scale: number): boolean {\n        if (this.#noteSelected === null) {\n            return false;\n        }\n\n        // Return early so we don't translate since we're moving a drag handle\n        if (this.#noteSelected.handleSelected()) {\n            return true;\n        }\n\n        this.#noteSelected.translate({\n            x: delta.x * (1 / scale),\n            y: delta.y * (1 / scale)\n        });\n        return true;\n    }\n\n    fileDrop(file: File): boolean {\n        return false;\n    }\n\n    removeNote(note: FlowNote): void {\n        const index = this.#notes.indexOf(note);\n        if (index > -1) {\n            const noteRemoved = this.#notes[index];\n            this.#notes.splice(index, 1);\n\n            for (let i = 0; i < this.#onNoteRemovedCallbacks.length; i++) {\n                this.#onNoteRemovedCallbacks[i](noteRemoved)\n            }\n        } else {\n            console.error(\"no note found to remove\");\n        }\n    }\n\n    render(ctx: CanvasRenderingContext2D, camera: Camera, mousePosition: Vector2 | undefined): RenderResults | undefined {\n        this.#noteHovering = null;\n        this.#hoveringHandle = DragHandle.None;\n\n        // Set hovering to false on everything\n        if (mousePosition) {\n            for (let i = 0; i < this.#notes.length; i++) {\n                this.#notes[i].setHovering(false);\n                if (InBox(this.#notes[i].bounds(), mousePosition)) {\n                    this.#noteHovering = this.#notes[i];\n                }\n            }\n        }\n\n        // The note on top of everything is the one that get's to be in a \n        // hover state\n        if (this.#noteHovering != null) {\n            this.#noteHovering.setHovering(true);\n            if (mousePosition) {\n                if (InBox(this.#noteHovering.leftResizeHandleBox(), mousePosition)) {\n                    this.#hoveringHandle = DragHandle.Left;\n                } else if (InBox(this.#noteHovering.rightResizeHandleBox(), mousePosition)) {\n                    this.#hoveringHandle = DragHandle.Right;\n                }\n            }\n        }\n\n        for (let i = 0; i < this.#notes.length; i++) {\n            this.#notes[i].render(ctx, camera, mousePosition);\n        }\n        return;\n    }\n}", "import { Camera } from \"../camera\";\nimport { ContextMenuConfig } from \"../contextMenu\";\nimport { RenderResults } from \"../graphSubsystem\";\nimport { List } from \"../types/list\";\nimport { Vector2 } from \"../types/vector2\";\n\ntype RenderLambda = () => void\n\n\n/**\n * Generic subsystem meant for other sybsystems to pass whatever to to render \n * at a certain time.\n * \n * Initial inspriation is for a subsytem to submit something to render on top \n * of all other subsystems.\n */\nexport class PassSubsystem {\n\n    #queue: List<RenderLambda>\n\n    constructor() {\n        this.#queue = new List<RenderLambda>();\n    }\n\n    queue(lambda: RenderLambda): void {\n        if(!lambda) {\n            return;\n        }\n        this.#queue.Push(lambda);\n    }\n\n    render(ctx: CanvasRenderingContext2D, camera: Camera, mousePosition: Vector2 | undefined): RenderResults | undefined {\n        for (let i = 0; i < this.#queue.Count(); i++) {\n            this.#queue.At(i)();\n        }\n        this.#queue.Clear();\n        return;\n    }\n\n    openContextMenu(ctx: CanvasRenderingContext2D, position: Vector2): ContextMenuConfig | null {\n        // Left intentionally blank\n        return null;\n    }\n\n    clickStart(mousePosition: Vector2, camera: Camera, ctrlKey: boolean): boolean {\n        // Left intentionally blank\n        return false;\n    }\n\n    mouseDragEvent(delta: Vector2, scale: number): boolean {\n        // Left intentionally blank\n        return false;\n    }\n\n    fileDrop(file: File): boolean {\n        // Left intentionally blank\n        return false;\n    }\n\n    clickEnd(): void {\n        // Left intentionally blank\n    }\n\n}", "import { ContextMenuConfig, ContextMenuItemConfig } from \"./contextMenu\";\nimport { ContainerRenderElement as ContainerElement } from \"./elements/container\";\nimport { IRenderElement } from \"./elements/interfaces\";\nimport { TextAlign, TextElement as TextElement, VerticalAlign } from \"./elements/text\";\nimport { FontWeight } from \"./styles/text\";\nimport { Theme } from \"./theme\";\nimport { Text } from './types/text';\nimport { ScaleVector, Vector2 } from './types/vector2';\nimport { Display } from './elements/base';\n\nclass QuickMenuGroup {\n\n    #text: TextElement;\n\n    public items: Array<QuickMenuItem>;\n\n    constructor(text: TextElement, items: Array<QuickMenuItem>) {\n        this.#text = text;\n        this.items = items;\n    }\n\n    updateRendering(terms: Array<string>): void {\n        let shouldRender = false;\n        for (let i = 0; i < this.items.length; i++) {\n            const kept = this.items[i].filter(terms);\n            this.items[i].render(kept);\n            if (kept) {\n                shouldRender = true;\n            }\n        }\n\n        this.#text.setDisplay(shouldRender ? Display.Flex : Display.None);\n    }\n\n}\n\nclass QuickMenuItem {\n    #searchText: string;\n    #text: TextElement;\n    #context: ContextMenuItemConfig\n\n    constructor(searchText: string, text: TextElement, context: ContextMenuItemConfig) {\n        this.#searchText = searchText.toLowerCase();\n        this.#text = text;\n        this.#context = context;\n    }\n\n    filter(terms: Array<string>): boolean {\n        if (terms.length === 0) {\n            return true;\n        }\n        for (let i = 0; i < terms.length; i++) {\n            if (terms[i] === \"\") {\n                continue;\n            }\n\n            if (this.#searchText.indexOf(terms[i]) === -1) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    render(render: boolean): void {\n        this.#text.setDisplay(render ? Display.Flex : Display.None);\n    }\n\n    rendering(): boolean {\n        return this.#text.getDisplay() === Display.Flex;\n    }\n\n    highlight(highlight: boolean): void {\n        this.#text.setBackgroundColor(highlight ? Theme.ContextMenu.HighlightColor : \"\");\n    }\n\n    select(): void {\n        if (this.#context.callback) {\n            this.#context.callback()\n        }\n    }\n}\n\nfunction RecurseBuildContainers(\n    path: string,\n    config: ContextMenuConfig,\n    renderElements: Array<IRenderElement>,\n    groups: Array<QuickMenuGroup>\n): void {\n\n    let currentPath = config?.name ?? \"\";\n    if (path !== \"\") {\n        currentPath = path + \" / \" + currentPath;\n    }\n\n    if (config?.items && config.items.length > 0) {\n        const titleText = new TextElement(\n            new Text(\n                currentPath,\n                {\n                    color: Theme.ContextMenu.FontColor,\n                    weight: FontWeight.Bold,\n                    size: 12,\n                }\n            ),\n            {\n                Align: TextAlign.Center,\n                VerticalAlign: VerticalAlign.Center,\n                Padding: 16\n            }\n        );\n        renderElements.push(titleText);\n\n        const quickItems = new Array<QuickMenuItem>();\n\n        for (let i = 0; i < config.items.length; i++) {\n            const configItem = config.items[i];\n\n            const itemText = new TextElement(\n                new Text(\n                    configItem.name ?? \"Item\",\n                    {\n                        color: Theme.ContextMenu.FontColor,\n                    }\n                ),\n                {\n                    Padding: 8\n                }\n            );\n\n            quickItems.push(new QuickMenuItem(\n                currentPath + (configItem.name ?? \"\"),\n                itemText,\n                configItem\n            ));\n\n            renderElements.push(itemText);\n        }\n\n        groups.push(new QuickMenuGroup(titleText, quickItems));\n    }\n\n    if (config?.subMenus) {\n        for (let i = 0; i < config?.subMenus.length; i++) {\n            const configItem = config?.subMenus[i];\n            RecurseBuildContainers(currentPath, configItem, renderElements, groups);\n        }\n    }\n}\n\nexport class QuickMenu {\n\n    #menuGroups: Array<QuickMenuGroup>\n\n    #container: ContainerElement\n\n    #searchText: Text;\n\n    #currentSelection: number;\n\n    constructor(config?: ContextMenuConfig) {\n        this.#menuGroups = [];\n        this.#currentSelection = 0;\n\n        this.#searchText = new Text(\n            \"\",\n            {\n                color: Theme.ContextMenu.FontColor,\n            }\n        );\n\n        const elements = [\n            new TextElement(\n                new Text(\n                    \"Search\",\n                    {\n                        color: Theme.ContextMenu.FontColor,\n                    }\n                ),\n                {\n                    Padding: {\n                        Bottom: 0,\n                        Left: 8,\n                        Right: 8,\n                        Top: 8\n                    },\n                }\n            ),\n\n            // Search Box...\n            new ContainerElement(\n                [\n                    new TextElement(\n                        this.#searchText,\n                        undefined\n                    ),\n                ],\n                {\n                    Border: {\n                        Radius: 2,\n                    },\n                    BackgroundColor: \"#003847\",\n                    Padding: 8,\n                    Margin: 8,\n                    MinHeight: 46,\n                }\n            ),\n        ]\n\n        if (config) {\n            RecurseBuildContainers(\"\", config, elements, this.#menuGroups);\n        }\n\n        this.#container = new ContainerElement(\n            elements,\n            {\n                BackgroundColor: Theme.ContextMenu.BackgroundColor,\n                Border: {\n                    Thickness: 1,\n                    Radius: 4\n                }\n            }\n        )\n\n        this.#updateHighlighting();\n    }\n\n    execute(): void {\n        let selection = this.#currentSelection;\n\n        for (let groupIndex = 0; groupIndex < this.#menuGroups.length; groupIndex++) {\n            const group = this.#menuGroups[groupIndex];\n\n            for (let itemIndex = 0; itemIndex < group.items.length; itemIndex++) {\n                if (group.items[itemIndex].rendering()) {\n                    if (selection === 0) {\n                        group.items[itemIndex].select();\n                        return;\n                    }\n                    selection--;\n                }\n            }\n        }\n    }\n\n    #updateHighlighting(): void {\n        const searchText = this.#searchText\n            .get()\n            .trim()\n            .toLowerCase();\n\n        let terms = new Array<string>();\n        if (searchText !== \"\") {\n            var potentialTerms = searchText.split(\" \");\n            for (let i = 0; i < potentialTerms.length; i++) {\n                const cleaned = potentialTerms[i].trim();\n                if (cleaned !== \"\") {\n                    terms.push(cleaned);\n                }\n            }\n        }\n\n        let selection = this.#currentSelection;\n\n        for (let groupIndex = 0; groupIndex < this.#menuGroups.length; groupIndex++) {\n            const group = this.#menuGroups[groupIndex];\n            group.updateRendering(terms);\n\n            for (let itemIndex = 0; itemIndex < group.items.length; itemIndex++) {\n                if (group.items[itemIndex].rendering()) {\n                    group.items[itemIndex].highlight(selection === 0)\n                    selection--;\n                }\n            }\n        }\n    }\n\n    keyboardEvent(event: KeyboardEvent): void {\n\n        let intercepted = true;\n\n        if (event.code === \"Backspace\") {\n            this.#currentSelection = 0;\n            const text = this.#searchText.get();\n            this.#searchText.set(text.slice(0, text.length - 1));\n        } else if (/^[a-zA-Z0-9]$/.test(event.key) || event.key === \" \") {\n            this.#currentSelection = 0;\n            this.#searchText.set(this.#searchText.get() + event.key);\n        } else if (event.key === \"ArrowUp\") {\n            this.#currentSelection = Math.max(0, this.#currentSelection - 1);\n        } else if (event.key === \"ArrowDown\") {\n            this.#currentSelection ++;\n        } else {\n            intercepted = false;\n        }\n\n        if (intercepted) {\n            this.#updateHighlighting();\n            event.preventDefault();\n        }\n\n        // console.log(event);\n    }\n\n    renderSize = { x: 0, y: 0 };\n\n    public render(ctx: CanvasRenderingContext2D, pos: Vector2, graphScale: number, mousePosition: Vector2 | undefined): null {\n        this.#container.calcSize(ctx, this.renderSize, { x: -1, y: -1 });\n        // ScaleVector(this.renderSize, graphScale);\n\n        // Clamp the position so it's not spilling off the canvas\n        if (pos.y + Math.min(this.renderSize.y, 400) > ctx.canvas.clientHeight) {\n            pos.y = ctx.canvas.clientHeight - Math.min(this.renderSize.y, 400);\n        }\n\n        if (pos.x + this.renderSize.x > ctx.canvas.clientWidth) {\n            pos.x = ctx.canvas.clientWidth - this.renderSize.x;\n        }\n\n        if (pos.y < 0) {\n            pos.y = 0;\n        }\n\n        if (pos.x < 0) {\n            pos.x = 0;\n        }\n\n        this.#container.render(ctx, pos, 1, this.renderSize);\n        return null;\n    }\n}\n", "import { CombineContextMenus, ContextEntry, ContextMenu, ContextMenuConfig } from './contextMenu';\nimport { Theme } from \"./theme\";\nimport { MouseObserver } from \"./input\";\nimport { FlowNode } from \"./node\";\nimport { NodeCreatedCallback, NodeFactoryConfig } from \"./nodes/factory\";\nimport { TimeExecution } from \"./performance\";\nimport { CursorStyle } from \"./styles/cursor\";\nimport { CopyVector2, Vector2, Zero } from './types/vector2';\nimport { Clamp01 } from \"./utils/math\";\nimport { GraphSubsystem, RenderResults } from './graphSubsystem';\nimport { FlowNote } from \"./notes/note\";\nimport { NoteAddedCallback, NoteDragStartCallback, NoteDragStopCallback, NoteRemovedCallback, NoteSubsystem, NoteSubsystemConfig } from \"./notes/subsystem\";\nimport { ConnectionRendererConfiguration, NodeAddedCallback, NodeRemovedCallback, NodeSubsystem } from \"./nodes/subsystem\";\nimport { Connection } from './connection';\nimport { Publisher } from './nodes/publisher';\nimport { VectorPool } from './types/pool';\nimport { Camera } from './camera';\nimport { PassSubsystem } from './pass/subsystem';\nimport { QuickMenu } from './quickMenu';\n\nexport type GraphRenderer = (canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D, position: Vector2, scale: number) => void;\n\nfunction BuildBackgroundRenderer(backgroundColor: string): GraphRenderer {\n    return (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D, position: Vector2, scale: number): void => {\n        context.fillStyle = backgroundColor;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n\n        const alpha = Math.round(Clamp01(scale - 0.3) * 255)\n        if (alpha <= 0) {\n            return;\n        }\n\n        context.fillStyle = `rgba(41, 54, 57, ${alpha})`;\n        const spacing = 100;\n        const pi2 = 2 * Math.PI\n        const dotScale = 2 * scale;\n        for (let x = -50; x < 50; x++) {\n            const xPos = (x * spacing * scale) + position.x;\n            for (let y = -50; y < 50; y++) {\n                const yPos = (y * spacing * scale) + position.y;\n                context.beginPath();\n                context.arc(xPos, yPos, dotScale, 0, pi2);\n                context.fill();\n            }\n        }\n    }\n}\n\nconst contextMenuGroup = \"graph-context-menu\";\n\nexport interface FlowNodeGraphConfiguration {\n    backgroundRenderer?: GraphRenderer;\n    backgroundColor?: string;\n    idleConnection?: ConnectionRendererConfiguration\n    contextMenu?: ContextMenuConfig\n    nodes?: NodeFactoryConfig\n    board?: NoteSubsystemConfig\n}\n\ninterface OpenContextMenu {\n    Menu: ContextMenu\n    Position: Vector2\n}\n\ninterface OpenQuickMenu {\n    Menu: QuickMenu\n    Position: Vector2\n}\n\nclass GraphView {\n\n    #subsystems: Array<GraphSubsystem>;\n\n    constructor(subsystems: Array<GraphSubsystem>) {\n        this.#subsystems = subsystems;\n    }\n\n    clickStart(mousePosition: Vector2, camera: Camera, ctrlKey: boolean) {\n        // Since the graph is rendered from 0 => n, n is the last thing \n        // rendererd and is always shown to the user. So if their clicking on\n        // two things technically, we need to make sure it's whatever was most \n        // recently rendered. So we traverse n => 0. \n        for (let i = this.#subsystems.length - 1; i >= 0; i--) {\n            // If the user sucesfully clicked on something in this layer, don't\n            // check any more layers.\n            if (this.#subsystems[i].clickStart(mousePosition, camera, ctrlKey)) {\n                return;\n            }\n        }\n    }\n\n    fileDrop(file: File): boolean {\n        for (let i = this.#subsystems.length - 1; i >= 0; i--) {\n            if (this.#subsystems[i].fileDrop(file)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    openContextMenu(ctx: CanvasRenderingContext2D, position: Vector2): ContextMenuConfig {\n        let finalConfig: ContextMenuConfig = {};\n\n        for (let i = 0; i < this.#subsystems.length; i++) {\n            const subSystemMenu = this.#subsystems[i].openContextMenu(ctx, position);\n            if (subSystemMenu !== null) {\n                finalConfig = CombineContextMenus(finalConfig, subSystemMenu);\n            }\n        }\n\n        return finalConfig;\n    }\n\n    clickEnd(): void {\n        for (let i = 0; i < this.#subsystems.length; i++) {\n            this.#subsystems[i].clickEnd();\n        }\n    }\n\n    mouseDragEvent(delta: Vector2, scale: number): boolean {\n        for (let i = 0; i < this.#subsystems.length; i++) {\n            if (this.#subsystems[i].mouseDragEvent(delta, scale)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    render(ctx: CanvasRenderingContext2D, camera: Camera, mousePosition: Vector2 | undefined): RenderResults {\n        const results: RenderResults = {};\n        for (let i = 0; i < this.#subsystems.length; i++) {\n            TimeExecution(\"Render_Subsystem_\" + i, () => {\n                let results = this.#subsystems[i].render(ctx, camera, mousePosition);\n                if (results?.cursorStyle) {\n                    results.cursorStyle = results?.cursorStyle;\n                }\n            })\n        }\n        return results;\n    }\n}\n\nexport class NodeFlowGraph {\n\n    #ctx: CanvasRenderingContext2D;\n\n    #canvas: HTMLCanvasElement;\n\n    #backgroundRenderer: GraphRenderer\n\n    #contextMenuConfig: ContextMenuConfig;\n\n    #mousePosition: Vector2 | undefined;\n\n    #camera: Camera;\n\n    #openedContextMenu: OpenContextMenu | null;\n\n    #openQuickMenu: OpenQuickMenu | null;\n\n    #contextMenuEntryHovering: ContextEntry | null;\n\n    #views: Array<GraphView>;\n\n    #currentView: number;\n\n    #mainNodeSubsystem: NodeSubsystem;\n\n    #mainNoteSubsystem: NoteSubsystem;\n\n    constructor(canvas: HTMLCanvasElement, config?: FlowNodeGraphConfiguration) {\n        const postProcessPass = new PassSubsystem();\n\n        this.#mainNodeSubsystem = new NodeSubsystem(postProcessPass, {\n            nodes: config?.nodes,\n            idleConnection: config?.idleConnection\n        });\n\n        this.#lastFrameCursor = CursorStyle.Default;\n        this.#cursor = CursorStyle.Default;\n\n        this.#mainNoteSubsystem = new NoteSubsystem(config?.board);\n\n        this.#views = [\n            new GraphView([\n                this.#mainNoteSubsystem,\n                this.#mainNodeSubsystem,\n                postProcessPass\n            ])\n        ];\n        this.#currentView = 0;\n\n        this.#camera = new Camera();\n\n        this.#contextMenuConfig = CombineContextMenus({\n            items: [\n                {\n                    name: \"Reset View\",\n                    group: contextMenuGroup,\n                    callback: this.#camera.reset.bind(this.#camera)\n                },\n            ],\n        }, config?.contextMenu);\n\n        this.#openedContextMenu = null;\n        this.#openQuickMenu = null;\n        this.#contextMenuEntryHovering = null;\n\n        this.#canvas = canvas;\n        const ctx = canvas.getContext(\"2d\")\n        if (ctx === null) {\n            throw new Error(\"could not create canvas context\")\n        }\n        this.#ctx = ctx;\n\n        if (config?.backgroundRenderer !== undefined) {\n            this.#backgroundRenderer = config?.backgroundRenderer\n        } else {\n            const backgroundColor = config?.backgroundColor === undefined ? Theme.Graph.BackgroundColor : config.backgroundColor;\n            this.#backgroundRenderer = BuildBackgroundRenderer(backgroundColor);\n        }\n\n        window.requestAnimationFrame(this.#render.bind(this));\n\n        this.#canvas.addEventListener('wheel', (event) => {\n            event.preventDefault();\n            this.zoom(Math.sign(event.deltaY));\n        }, false);\n\n        new MouseObserver(this.#canvas,\n            this.#mouseDragEvent.bind(this),\n\n            // Mouse move event\n            (mousePosition) => {\n                this.#mousePosition = mousePosition;\n            },\n\n            this.#clickStart.bind(this),\n            this.#clickEnd.bind(this),\n            this.#openContextMenu.bind(this),\n            this.#fileDrop.bind(this)\n        );\n\n        document.addEventListener(\n            \"keydown\",\n            (e) => {\n                if (document.activeElement) {\n                    if ([\"INPUT\", \"TEXTAREA\"].includes(document.activeElement.tagName)) return;\n                }\n\n                if (this.#openQuickMenu) {\n                    if (e.code === \"Escape\") {\n                        this.#openQuickMenu = null;\n                        return;\n                    }\n\n                    if (e.code === \"Enter\") {\n                        this.#openQuickMenu.Menu.execute();\n                        this.#openQuickMenu = null;\n                        return;\n                    }\n\n                    this.#openQuickMenu.Menu.keyboardEvent(e);\n                    return\n                }\n\n                const spacePressed = e.key == \" \" || e.code == \"Space\";\n                if (!spacePressed) {\n                    return;\n                }\n\n                if (!this.#mousePosition) {\n                    return;\n                }\n                const contextMenuPosition = this.#sceenPositionToGraphPosition(this.#mousePosition);\n\n                let items = this.#mainNodeSubsystem.nodeFactory().newNodeSubmenus(this.#mainNodeSubsystem, contextMenuPosition);\n                this.#openQuickMenu = {\n                    Menu: new QuickMenu({\n                        subMenus: items,\n                    }),\n                    Position: contextMenuPosition\n                }\n            }\n        );\n    }\n\n    #fileDrop(file: File): void {\n\n        if (this.currentView().fileDrop(file)) {\n            return;\n        }\n\n        const contents = file.name.split('.');\n        const extension = contents[contents.length - 1];\n        if (extension !== \"jpg\" && extension !== \"jpeg\" && extension !== \"png\") {\n            return;\n        }\n\n        let pos = Zero();\n        if (this.#mousePosition) {\n            CopyVector2(pos, this.#sceenPositionToGraphPosition(this.#mousePosition));\n        }\n\n        this.#mainNodeSubsystem.addNode(new FlowNode({\n            title: contents[0],\n            position: pos,\n            widgets: [{\n                type: \"image\",\n                config: {\n                    blob: file,\n                }\n            }]\n        }));\n    }\n\n    public addNoteAddedListener(callback: NoteAddedCallback): void {\n        this.#mainNoteSubsystem.addNoteAddedListener(callback);\n    }\n\n    public addNoteRemovedListener(callback: NoteRemovedCallback): void {\n        this.#mainNoteSubsystem.addNoteRemovedListener(callback);\n    }\n\n    public addNoteDragStartListener(callback: NoteDragStartCallback): void {\n        this.#mainNoteSubsystem.addNoteDragStartListener(callback);\n    }\n\n    public addNoteDragStopListener(callback: NoteDragStopCallback): void {\n        this.#mainNoteSubsystem.addNoteDragStopListener(callback);\n    }\n\n\n    zoom(amount: number): void {\n\n        let oldPos: Vector2 | undefined = undefined;\n        if (this.#mousePosition) {\n            oldPos = this.#sceenPositionToGraphPosition(this.#mousePosition);;\n        }\n\n        this.#camera.zoom += amount * this.#camera.zoom * 0.05;\n\n        if (!oldPos || !this.#mousePosition) {\n            return;\n        }\n        // Attempt zoom around where the current mouse is.\n        const newPos = this.#sceenPositionToGraphPosition(this.#mousePosition);\n        this.#camera.position.x += (newPos.x - oldPos.x) * this.#camera.zoom;\n        this.#camera.position.y += (newPos.y - oldPos.y) * this.#camera.zoom;\n    }\n\n    #clickStart(mousePosition: Vector2, ctrlKey: boolean): void {\n        if (this.#contextMenuEntryHovering !== null) {\n            this.#contextMenuEntryHovering.click();\n            this.#openedContextMenu = null;\n            this.#contextMenuEntryHovering = null;\n            return;\n        }\n        this.#openedContextMenu = null;\n        this.#openQuickMenu = null;\n        this.#contextMenuEntryHovering = null;\n\n        this.#mousePosition = mousePosition;\n        this.currentView().clickStart(mousePosition, this.#camera, ctrlKey);\n    }\n\n    currentView(): GraphView {\n        return this.#views[this.#currentView];\n    }\n\n    organize(): void {\n        this.#mainNodeSubsystem.organize(this.#ctx);\n    }\n\n    addPublisher(identifier: string, publisher: Publisher): void {\n        this.#mainNodeSubsystem.addPublisher(identifier, publisher);\n    }\n\n    getNodes(): Array<FlowNode> {\n        return this.#mainNodeSubsystem.getNodes();\n    }\n\n    connectedInputsNodeReferences(nodeIndex: number): Array<FlowNode> {\n        return this.#mainNodeSubsystem.connectedInputsNodeReferencesByIndex(nodeIndex);\n    }\n\n    connectedOutputsNodeReferences(nodeIndex: number): Array<FlowNode> {\n        return this.#mainNodeSubsystem.connectedOutputsNodeReferences(nodeIndex);\n    }\n\n    connectNodes(nodeOut: FlowNode, outPort: number, nodeIn: FlowNode, inPort: number): Connection | undefined {\n        return this.#mainNodeSubsystem.connectNodes(nodeOut, outPort, nodeIn, inPort);\n    }\n\n    addNode(node: FlowNode): void {\n        this.#mainNodeSubsystem.addNode(node);\n    }\n\n    removeNode(node: FlowNode): void {\n        this.#mainNodeSubsystem.removeNode(node);\n    }\n\n    addNote(note: FlowNote): void {\n        this.#mainNoteSubsystem.addNote(note);\n    }\n\n    public addOnNodeCreatedListener(callback: NodeCreatedCallback): void {\n        this.#mainNodeSubsystem.addOnNodeCreatedListener(callback);\n    }\n\n    public addOnNodeAddedListener(callback: NodeAddedCallback): void {\n        this.#mainNodeSubsystem.addOnNodeAddedListener(callback);\n    }\n\n    public addOnNodeRemovedListener(callback: NodeRemovedCallback): void {\n        this.#mainNodeSubsystem.addOnNodeRemovedListener(callback);\n    }\n\n    #sceenPositionToGraphPosition(screenPosition: Vector2): Vector2 {\n        const out = Zero();\n        this.#camera.screenSpaceToGraphSpace(screenPosition, out);\n        return out;\n    }\n\n    #openContextMenu(position: Vector2): void {\n        let finalConfig = this.#contextMenuConfig;\n\n        const contextMenuPosition = this.#sceenPositionToGraphPosition(position);\n\n        finalConfig = CombineContextMenus(finalConfig, this.currentView().openContextMenu(this.#ctx, contextMenuPosition));\n\n        this.#openedContextMenu = {\n            Menu: new ContextMenu(finalConfig),\n            Position: contextMenuPosition,\n        };\n    }\n\n\n    // Somethings wrong here. Needs more testing\n    // #fitView(): void {\n    //     if (this.#nodes.length === 0) {\n    //         return;\n    //     }\n\n    //     const curBox: Box = {\n    //         Position: { x: 0, y: 0 },\n    //         Size: { x: 0, y: 0 }\n    //     };\n    //     CopyBox(curBox, this.#nodes[0].calculateBounds(this.#ctx, this.#graphState.position, this.#graphState.scale));\n\n    //     for (let i = 1; i < this.#nodes.length; i++) {\n    //         ExpandBox(curBox, this.#nodes[i].calculateBounds(this.#ctx, this.#graphState.position, this.#graphState.scale));\n    //     }\n\n    //     CopyVector2(this.#graphState.position, curBox.Position);\n    // }\n\n    #clickEnd(): void {\n        this.currentView().clickEnd();\n    }\n\n    #mouseDragEvent(delta: Vector2): void {\n        let draggingSomething = this.currentView().mouseDragEvent(delta, this.#camera.zoom);\n        if (!draggingSomething) {\n            this.#camera.position.x += delta.x;\n            this.#camera.position.y += delta.y;\n        }\n    }\n\n    #lastFrameCursor: CursorStyle;\n\n    #cursor: CursorStyle;\n\n    #render(): void {\n        if (this.#canvas.parentNode !== null) {\n            // Stupid as any because typescript doesn't think it exists\n            var rect = (this.#canvas.parentNode as any).getBoundingClientRect();\n            this.#canvas.width = rect.width;\n            this.#canvas.height = rect.height;\n        }\n\n\n        this.#cursor = CursorStyle.Default;\n\n        TimeExecution(\"Render_Background\", this.#renderBackground.bind(this));\n\n        TimeExecution(\"Render_View_\" + this.#currentView, () => {\n            let results = this.currentView().render(this.#ctx, this.#camera, this.#mousePosition);\n            if (results?.cursorStyle) {\n                this.#cursor = results?.cursorStyle;\n            }\n        });\n\n        TimeExecution(\"Render_Context\", this.#renderContextMenu.bind(this));\n\n        TimeExecution(\"Render_QuickMenu\", this.#renderQuickMenu.bind(this))\n\n        // Only update CSS style if things have changed\n        // TODO: Does this actually have any measurable performance savings?\n        if (this.#lastFrameCursor !== this.#cursor) {\n            this.#canvas.style.cursor = this.#cursor;\n        }\n        this.#lastFrameCursor = this.#cursor;\n\n        window.requestAnimationFrame(this.#render.bind(this));\n    }\n\n    #renderBackground(): void {\n        this.#backgroundRenderer(this.#canvas, this.#ctx, this.#camera.position, this.#camera.zoom);\n    }\n\n    #renderContextMenu(): void {\n        VectorPool.run(() => {\n            if (this.#openedContextMenu !== null) {\n                const pos = VectorPool.get();\n                this.#camera.graphSpaceToScreenSpace(this.#openedContextMenu.Position, pos)\n                this.#contextMenuEntryHovering = this.#openedContextMenu.Menu.render(this.#ctx, pos, this.#camera.zoom, this.#mousePosition, true);\n\n                if (this.#contextMenuEntryHovering !== null) {\n                    this.#cursor = CursorStyle.Pointer;\n                }\n            }\n        });\n    }\n\n    #renderQuickMenu(): void {\n        VectorPool.run(() => {\n            if (this.#openQuickMenu !== null) {\n                const pos = VectorPool.get();\n                this.#camera.graphSpaceToScreenSpace(this.#openQuickMenu.Position, pos)\n                this.#contextMenuEntryHovering = this.#openQuickMenu.Menu.render(this.#ctx, pos, this.#camera.zoom, this.#mousePosition);\n\n                if (this.#contextMenuEntryHovering !== null) {\n                    this.#cursor = CursorStyle.Pointer;\n                }\n            }\n        });\n    }\n}"],
  "mappings": "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",
  "names": ["Theme", "DefaultSize", "DefaultColor", "TextStyleFallback", "input", "fallback", "TextStyle", "#size", "#color", "#font", "#weight", "#fontStyle", "config", "Theme", "ctx", "scale", "text", "out", "measurements", "color", "size", "weight", "Pool", "#arr", "#count", "#builder", "#reset", "#runningDepth", "builder", "reset", "condition", "fn", "#running", "start", "value", "VectorPool", "v", "CopyVector2", "dst", "src", "SubVector2", "a", "b", "AddVector2", "ScaleVector", "scale", "Zero", "Distance", "xd", "yd", "normalizeMinMax", "min", "max", "temp", "BoxIntersection", "a", "b", "intersects", "VectorPool", "aMin", "aMax", "CopyVector2", "AddVector2", "bMin", "bMax", "BoxCenter", "box", "out", "InBox", "position", "List", "#arr", "#count", "index", "value", "arr", "i", "contextEntryHeight", "ContextMenuItem", "#name", "#callback", "#textStyle", "config", "TextStyle", "ContextGroup", "entries", "#calculatedHeight", "contextEntryHeight", "ContextEntry", "text", "subMenu", "item", "CombineContextMenus", "contextMenus", "finalConfig", "i", "ContextMenu", "#items", "#subMenus", "#groups", "#group", "#submenuPosition", "Zero", "List", "TextStyleFallback", "Theme", "#calculateEntries", "groupLUT", "workingGroups", "group", "sub", "groupIndex", "groupContent", "#calculatedWidth", "#getMaxWidthForText", "ctx", "scale", "tempVec", "entryIndex", "#tempBox", "#openSubMenu", "pppp", "graphScale", "mousePosition", "openRight", "scaledEntryHeight", "scaledEntryWidth", "totalScaledHeight", "position", "CopyVector2", "submenuOpenRight", "mouseIsOver", "subOpenedThisFrame", "optionsRendered", "entry", "entryMousedOver", "InBox", "startX", "y", "mouseOverSub", "MouseObserver", "#clicked", "#lastTouch", "#ele", "#lastMousePosition", "#dragCallback", "#moveCallback", "#clickStart", "#clickStop", "#contextMenu", "ele", "dragCallback", "moveCallback", "clickStart", "clickStop", "contextMenu", "fileDrop", "Zero", "#down", "#touchDown", "#up", "#move", "#moveTouch", "ev", "item", "i", "file", "#mousePosition", "evt", "event", "rect", "pos", "delta", "SubVector2", "CopyVector2", "InstantiateRenderElementSidesStyling", "config", "RenderElementBase", "#margin", "#padding", "#border", "#backgroundColor", "#minWidth", "#maxWidth", "#minHeight", "#maxHeight", "#grow", "#display", "config", "InstantiateRenderElementSidesStyling", "newColor", "ctx", "position", "graphScale", "scaledFillableSpace", "scaledSize", "offsetPosition", "#totalLeftOffset", "#totalTopOffset", "elementSize", "#horizontalOffset", "#verticalOffset", "out", "display", "maxLimits", "ContainerRenderElement", "RenderElementBase", "#elements", "#layout", "#alignment", "elements", "config", "ctx", "out", "limitations", "eleSize", "i", "position", "graphScale", "scaledFillableSpace", "#renderColumn", "currnetPos", "scaledEleSize", "ele", "ScaleVector", "TextElement", "RenderElementBase", "#text", "#align", "#verticalAlign", "#lineHeight", "text", "styling", "ctx", "position", "graphScale", "scaledFillableSpace", "scale", "Zero", "ScaleVector", "justifiedPosition", "CopyVector2", "eles", "tempSize", "i", "out", "limitations", "binarySearch", "max", "getValue", "match", "min", "guess", "compareVal", "fitString", "ctx", "str", "maxWidth", "width", "ellipsis", "ellipsisWidth", "index", "splitString", "backward", "splitStringIntoLines", "strings", "remaining", "Text", "#measured", "#size", "#style", "#value", "#maxWidth", "#lineSpacing", "#textToRender", "value", "style", "config", "Zero", "TextStyle", "event", "newValue", "ctx", "maxWidth", "results", "entries", "splitStringIntoLines", "i", "text", "char", "index", "splitString", "#measure", "measurements", "scale", "out", "CopyVector2", "ScaleVector", "color", "size", "weight", "position", "yOffset", "Clamp", "v", "min", "max", "Clamp01", "componentToHex", "c", "hex", "RgbToHex", "HexToColor", "result", "HSV2RGB", "hsv", "out", "hh", "ff", "p", "q", "t", "Clamp01", "fallbackColor", "type", "s", "value", "mod", "hsv", "color", "HSV2RGB", "RgbToHex", "Port", "#node", "#displayName", "#emptyStyle", "#filledStyle", "#connections", "#portType", "#dataType", "#dataTypePopupElement", "#onConnectionAdded", "#onConnectionRemoved", "node", "portType", "config", "containerElements", "dataTypeDisplay", "TextElement", "Text", "description", "ContainerRenderElement", "connection", "c", "index", "i", "callback", "#box", "ctx", "position", "camera", "mousePosition", "postProcess", "style", "scaledRadius", "InBox", "xPos", "yPos", "size", "StrokeStyleWithFallback", "input", "fallback", "StrokeStyle", "#size", "#color", "config", "ctx", "scale", "newColor", "newSize", "BoxStyleWithFallback", "input", "fallback", "StrokeStyleWithFallback", "BoxStyle", "#border", "#color", "#radius", "config", "StrokeStyle", "#box", "ctx", "box", "scale", "radius", "#draw", "color", "Popup", "#title", "#options", "#content", "#onClose", "#buttonCSS", "#popup", "config", "container", "title", "buttonContainer", "i", "button", "TextBoxStyleWithFallback", "input", "fallback", "BoxStyleWithFallback", "TextStyleFallback", "TextBoxStyle", "#box", "#text", "#textAlign", "#textBaseline", "config", "BoxStyle", "TextStyle", "ctx", "box", "scale", "text", "color", "width", "height", "NumberWidget", "#node", "#nodeProperty", "#value", "#idleBoxStyle", "#highlightBoxStyle", "#text", "#callback", "node", "config", "TextBoxStyle", "TextBoxStyleWithFallback", "Theme", "oldVal", "newVal", "width", "height", "newNumber", "input", "setOption", "cancelOption", "Popup", "container", "button", "ctx", "position", "scale", "mousePosition", "box", "CopyVector2", "style", "InBox", "ButtonWidget", "#text", "#idleStyle", "#hoverStyle", "#clickStyle", "#callback", "#gettingClicked", "config", "TextBoxStyle", "TextBoxStyleWithFallback", "Theme", "width", "height", "ctx", "position", "scale", "mousePosition", "box", "CopyVector2", "style", "InBox", "contrastColor", "color", "c", "HexToColor", "ColorWidget", "#node", "#nodeProperty", "#value", "#contrast", "#textBoxStyle", "#callback", "node", "config", "TextBoxStyle", "Theme", "oldVal", "newVal", "width", "height", "value", "input", "Popup", "container", "label", "button", "ctx", "position", "scale", "mousePosition", "box", "CopyVector2", "SliderWidget", "#min", "#max", "#value", "#text", "#snapIncrement", "#node", "#nodeProperty", "#change", "#release", "#textStyle", "#backgroundColor", "#borderColor", "#fillColor", "#lastMousePosition", "#clickStartMousePosition", "#clicking", "node", "config", "Theme", "TextStyle", "TextStyleFallback", "Zero", "oldVal", "newVal", "newValue", "cleanedValue", "Clamp", "width", "height", "CopyVector2", "ctx", "position", "scale", "mousePosition", "scaledWidth", "scaledHeight", "scaledBorderThickness", "fill", "Clamp01", "min", "max", "value", "SetStringPopup", "config", "input", "Popup", "container", "button", "StringWidget", "#value", "#idleStyle", "#hoverStyle", "#callback", "#node", "#nodeProperty", "node", "config", "TextBoxStyle", "TextBoxStyleWithFallback", "Theme", "oldVal", "newVal", "width", "height", "value", "SetStringPopup", "ctx", "position", "scale", "mousePosition", "box", "CopyVector2", "style", "InBox", "fitString", "ToggleStyle", "#idleStyle", "#hoverStyle", "#lightColor", "#lightBorderColor", "#lightBlur", "#box", "config", "TextBoxStyle", "TextBoxStyleWithFallback", "Theme", "ctx", "pos", "scale", "text", "mousePosition", "scaledWidth", "width", "scaledHeight", "height", "CopyVector2", "style", "InBox", "lightScale", "ToggleWidget", "#node", "#nodeProperty", "#value", "#text", "#enabledStyle", "#disabledStyle", "#callback", "node", "oldVal", "newVal", "position", "value", "ImageWidget", "#url", "#image", "#maxWidth", "#maxHeight", "config", "blob", "imageUrl", "url", "img", "event", "adjust", "heightAdjust", "ctx", "position", "scale", "mousePosition", "size", "box", "CopyVector2", "TextWidget", "#value", "#callback", "#node", "#nodeProperty", "#size", "node", "config", "Zero", "Text", "TextStyleFallback", "Theme", "oldVal", "newVal", "value", "ctx", "position", "scale", "mousePosition", "box", "CopyVector2", "WidgetFactory", "#registeredWidgets", "widgetType", "builder", "node", "config", "GlobalWidgetFactory", "ButtonWidget", "NumberWidget", "ColorWidget", "SliderWidget", "StringWidget", "ToggleWidget", "ImageWidget", "TextWidget", "DefaultConnectionRenderer", "connectionSize", "connectionColor", "mouseOverSize", "mouseOverColor", "params", "color", "lineSize", "midX", "Connection", "#inPos", "#outPos", "#inNode", "#inNodePortIndex", "#outNode", "#outNodePortIndex", "#renderer", "inNode", "inNodePortIndex", "outNode", "outNodePortIndex", "renderer", "Zero", "ctx", "graphScale", "mouseOver", "mousePosition", "inPortBox", "BoxCenter", "outPortBox", "InBox", "node", "portIndex", "replace", "port", "Camera", "Zero", "screenPosition", "out", "scale", "graphPosition", "MarkInputs", "graph", "positions", "nodeLUT", "node", "depth", "shouldSort", "inputs", "i", "nodeIndex", "MarkOutputs", "outputs", "Organize", "ctx", "nodesToSort", "nodes", "bounds", "relativePosition", "claimed", "camera", "Camera", "entries", "min", "max", "x", "val", "a", "b", "columns", "entry", "p", "position", "nodeBounds", "column", "allColumnsWidths", "c", "widthSpacing", "heightSpacing", "widthOffset", "heightOffset", "n", "pos", "TimeExecution", "name", "callback", "start", "end", "Publisher", "#name", "#description", "#version", "#registeredNodes", "config", "nodeKey", "nodeType", "#recurseBuildMenu", "graph", "name", "subMenu", "position", "items", "subMenus", "key", "nodeConfig", "slashIndex", "bracketIndex", "node", "FlowNode", "elements", "menu", "menus", "nodes", "NodeFactory", "#registeredPublishers", "#registeredCallbacks", "config", "entry", "Publisher", "callback", "identifier", "publisher", "nodeType", "publisherIdentifier", "node", "i", "graph", "position", "menus", "_", "nodeFlowGroup", "nodeFlowGroup", "BuildConnectionRenderer", "config", "DefaultConnectionRenderer", "NodeSubsystem", "#postProcessPass", "#nodes", "#connections", "#nodeHovering", "#nodesGrabbed", "#connectionSelected", "#idleConnectionRenderer", "#portHovering", "#widgetHovering", "#widgetCurrentlyClicking", "#cursor", "#nodeFactory", "#boxSelect", "#boxSelectStart_graphSpace", "#boxSelectEnd_graphSpace", "#boxSelectionNodes", "#boxSelectStyle", "#nodeRemovedCallbacks", "#registeredNodeAddedCallbacks", "postProcessPass", "List", "NodeFactory", "Zero", "BoxStyle", "Theme", "identifier", "publisher", "callback", "mousePosition", "camera", "ctrlKey", "hoveringSomething", "#selectNodeByIndex", "i", "CopyVector2", "inNode", "inNodeIndex", "outNode", "outNodeIndex", "connection", "Connection", "delta", "scale", "nodeMoved", "VectorPool", "scaledDelta", "AddVector2", "#interactingWithNode", "node", "#interactingWithConnection", "#interactingWithWidget", "index", "port", "#removeConnection", "#selectNode", "#clearCurrentlySelectedConnection", "conn", "replace", "inputPort", "nodeOut", "outPort", "nodeIn", "inPort", "outType", "inType", "existingInputConnections", "nodeIndex", "connections", "file", "#removeNodeConnections", "#removeConnectionByIndex", "#removeNodeByIndex", "clearPorts", "ctx", "Organize", "#nodesSelected", "selected", "#organizeSelected", "position", "organizeNodesSubMenu", "nodeToReview", "nodeToReviewNode", "#selectConnectedNodes", "#selectInputNodesAndDescendents", "CombineContextMenus", "inputs", "outputs", "unselectOthers", "#renderConnections", "portMousedOver", "#renderNodes", "selectedBox_Screenspace", "#boxSelectionScreenspaceBox", "state", "intersection", "nodeBounds", "BoxIntersection", "box", "SubVector2", "TimeExecution", "FormPopup", "config", "input", "setOption", "cancelOption", "Popup", "container", "i", "title", "ele", "button", "values", "MINIMUM_NODE_WIDTH", "MessageType", "MessageTypeColor", "messageType", "Theme", "NodeState", "MessageRenderer", "#text", "#alwaysShow", "config", "Text", "ctx", "scale", "position", "hovering", "FlowNode", "#position", "#title", "#subTitle", "#infoSymbol", "#infoText", "#messages", "#input", "#output", "#widgets", "#locked", "#canEditTitle", "#canEditInfo", "#canEditPorts", "#contextMenu", "#metadata", "#onSelect", "#onUnselect", "#onFiledrop", "#onDragStop", "#titleChangeCallback", "#infoChangeCallback", "#titleColor", "#selectedStyle", "#stateStyles", "#padding", "#portTextStyle", "#elementSpacing", "#selected", "#inputPortPositions", "#outputPortPositions", "#widgetPositions", "#data", "#registeredAnyPropertyChangeCallbacks", "#registeredPropertyChangeCallbacks", "List", "i", "message", "TextStyleFallback", "BoxStyle", "BoxStyleWithFallback", "TextStyle", "widget", "GlobalWidgetFactory", "callback", "name", "callbacks", "value", "oldValue", "#popupNodeTitleSelection", "SetStringPopup", "#popupNodeInfoSelection", "#popupNewButtonWidget", "ButtonWidget", "#widgetSubmenu", "NumberWidget", "ColorWidget", "FormPopup", "data", "SliderWidget", "StringWidget", "ToggleWidget", "ImageWidget", "nodeFlowGroup", "items", "submenus", "CombineContextMenus", "file", "CopyVector2", "camera", "tempMeasurement", "Zero", "doublePadding", "screenSpacePosition", "size", "subtitleSize", "port", "eleSize", "ScaleVector", "Port", "index", "delta", "intersection", "box", "InBox", "newTitle", "cleaned", "old", "newInfo", "#calculateStyle", "state", "boxStyle", "mousePosition", "postProcess", "VectorPool", "scaledPadding", "scaledElementSpacing", "nodeBounds", "nodeStyle", "borderSize", "titleSize", "titleBoxSize", "titleX", "titleY", "titleWidth", "titleHeight", "titlePosition", "subtitlePosition", "infoRadius", "centerX", "centerY", "infoPosition", "infoLineThickness", "Distance", "infoBoxWidth", "textEntries", "splitStringIntoLines", "lineHeight", "infoBoxHeight", "scaledLineHeight", "start", "entry", "startY", "leftSide", "rightSide", "widgetSize", "scaledWidgetWidth", "messageStart", "MarkdownToken", "#type", "#lexeme", "#tokenStart", "#tokenEnd", "type", "lexeme", "tokenStart", "tokenEnd", "MarkdownLexicalParser", "#body", "#index", "#tokens", "body", "#current", "#inc", "#next", "#lastToken", "#addToken", "token", "lexeme", "MarkdownToken", "#h2", "#h1", "#whiteSpace", "char", "#text", "started", "CodeBlockEntry", "#text", "#calculatedPositions", "#calculatedEntries", "#calculatedForWidth", "text", "List", "event", "#calculateLayout", "ctx", "maxWidth", "adjustedWith", "Theme", "curHeight", "lineInc", "entries", "entryIndex", "lines", "lineIndex", "position", "scale", "padding", "max", "i", "pos", "y", "entry", "UnorderedListMarkdownEntry", "#entries", "offset", "shift", "dot", "BasicMarkdownEntry", "#underline", "#background", "underline", "background", "curPosition", "Zero", "texSize", "currentLineHeight", "currentLineText", "currentLineWidths", "MarkdownSyntaxParser", "#tokens", "#index", "#originalText", "originalText", "tokens", "#current", "#inc", "#next", "#peak", "#peakInto", "amount", "#emphasis", "token", "Text", "bold", "textContent", "boldClosed", "startingClose", "validClose", "style", "#text", "contents", "starText", "i", "#h1", "text", "Theme", "BasicMarkdownEntry", "#h2", "#h3", "#starLineStart", "starEntries", "#assignStandardStyling", "entries", "UnorderedListMarkdownEntry", "textEntries", "#backtickLineStart", "start", "end", "codeBlockText", "entryText", "CodeBlockEntry", "BuildMarkdown", "data", "lexicalParser", "MarkdownLexicalParser", "MarkdownSyntaxParser", "BOUNDS_SPACING", "BOX_SIZE", "FlowNote", "#originalText", "#document", "#width", "#edittingStyle", "#data", "#position", "#handleSelected", "#edittingLayout", "#lastRenderedBox", "#hovering", "#widthChangeCallbacks", "#contentChangeCallbacks", "config", "BoxStyle", "text", "BuildMarkdown", "i", "name", "value", "delta", "position", "CopyVector2", "handle", "#tempPosition", "Zero", "newWidth", "callback", "ctx", "camera", "mousePosition", "leftPosition", "scaledWidth", "rightPosition", "left", "right", "bottom", "top", "startY", "lineSpacing", "Theme", "hovering", "input", "saveText", "Popup", "container", "button", "NoteSubsystem", "#notes", "#noteHovering", "#noteSelected", "#hoveringHandle", "#onNoteAddedCallbacks", "#onNoteRemovedCallbacks", "#onNoteDragStartCallbacks", "#onNoteDragStopCallbacks", "config", "i", "FlowNote", "note", "callback", "ctx", "position", "group", "result", "noteToReview", "mousePosition", "camera", "ctrlKey", "delta", "scale", "file", "index", "noteRemoved", "InBox", "PassSubsystem", "#queue", "List", "lambda", "ctx", "camera", "mousePosition", "i", "position", "ctrlKey", "delta", "scale", "file", "QuickMenuGroup", "#text", "text", "items", "terms", "shouldRender", "kept", "QuickMenuItem", "#searchText", "#context", "searchText", "context", "i", "render", "highlight", "Theme", "RecurseBuildContainers", "path", "config", "renderElements", "groups", "currentPath", "titleText", "TextElement", "Text", "quickItems", "configItem", "itemText", "QuickMenu", "#menuGroups", "#container", "#currentSelection", "elements", "ContainerRenderElement", "#updateHighlighting", "selection", "groupIndex", "group", "itemIndex", "potentialTerms", "cleaned", "event", "intercepted", "ctx", "pos", "graphScale", "mousePosition", "BuildBackgroundRenderer", "backgroundColor", "canvas", "context", "position", "scale", "alpha", "Clamp01", "spacing", "pi2", "dotScale", "x", "xPos", "y", "yPos", "contextMenuGroup", "GraphView", "#subsystems", "subsystems", "mousePosition", "camera", "ctrlKey", "i", "file", "ctx", "finalConfig", "subSystemMenu", "CombineContextMenus", "delta", "results", "TimeExecution", "NodeFlowGraph", "#ctx", "#canvas", "#backgroundRenderer", "#contextMenuConfig", "#mousePosition", "#camera", "#openedContextMenu", "#openQuickMenu", "#contextMenuEntryHovering", "#views", "#currentView", "#mainNodeSubsystem", "#mainNoteSubsystem", "config", "postProcessPass", "PassSubsystem", "NodeSubsystem", "#lastFrameCursor", "#cursor", "NoteSubsystem", "Camera", "Theme", "#render", "event", "MouseObserver", "#mouseDragEvent", "#clickStart", "#clickEnd", "#openContextMenu", "#fileDrop", "e", "contextMenuPosition", "#sceenPositionToGraphPosition", "items", "QuickMenu", "contents", "extension", "pos", "Zero", "CopyVector2", "FlowNode", "callback", "amount", "oldPos", "newPos", "identifier", "publisher", "nodeIndex", "nodeOut", "outPort", "nodeIn", "inPort", "node", "note", "screenPosition", "out", "ContextMenu", "rect", "#renderBackground", "#renderContextMenu", "#renderQuickMenu", "VectorPool"]
}
